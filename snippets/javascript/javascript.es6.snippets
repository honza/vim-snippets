snippet const
	const ${1} = ${0};
snippet let
	let ${1} = ${0};
snippet im
	import ${1} from '${0}';
snippet cla
	class ${1} {
		${0}
	}
snippet clax
	class ${1} extends ${2} {
		${0}
	}
snippet clac
	class ${1} {
		constructor(${2}) {
			${0}
		}
	}
# For of loop
snippet foro
	for (let ${1:prop} of ${2:object}) {
		${0:$1}
	}
# Generator
snippet fun*
	function* ${1:function_name}(${2}) {
		${0}
	}
snippet c=>
	const ${1:function_name} = (${2}) => {
		${0}
	}
snippet caf
	const ${1:function_name} = (${2}) => {
		${0}
	}
snippet =>
	(${1}) => {
		${0}
	}
snippet af
	(${1}) => {
		${0}
	}
snippet sym
	const ${1} = Symbol('${0}');
snippet ed
	export default ${0}
snippet ${
	${${1}}${0}
