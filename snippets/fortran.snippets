snippet doc
	! """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
	! File: ${2:`vim_snippets#Filename('$1')`}
	! Author: `g:snips_author`
	! Email: `g:snips_email`
	! Github: `g:snips_github`
	! Description: $1
	! """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
	$0
snippet impl
	IMPLICIT NONE
		$0
snippet prog
	PROGRAM ${1:main}
		$0
	END PROGRAM $1
snippet mod
	MODULE ${1:modulename}
		$0
	END MODULE $1
snippet proc
	PROCEDURE ${1:name}
		${0}
	END PROCEDURE $1
snippet iface
	INTERFACE ${1:name}
		${0}
	END INTERFACE $1
# VARIABLES DEFINITIONS
# BOOLEAN
snippet bool
	LOGICAL :: $0
# INTEGER
snippet int
	INTEGER :: $0
snippet real
	REAL :: $0
# DOUBLE PRECISION
snippet double
	DOUBLE PRECISION :: $0
# CHAR
snippet str
	CHARACTER(LEN=${1:*}) :: ${0:}
# TYPES
snippet type
	TYPE(${1:name})
		$0
	END TYPE
snippet const
	${1:type}, PARAMETER :: $2 = $0
snippet arr
	${1:type}, ALLOCATABLE, DIMENSION(${2::}) :: $0
snippet intent
	${1:type}, INTENT(INOUT) :: $0
# ARRAY
snippet /
	(/ $1 /) ${2:,&} $0
snippet if
	IF (${1:condition}) THEN
		$2
	END IF
snippet case
	SELECT CASE (${1:expr})
		CASE ($2)
		CASE DEFAULT
			$3
	END SELECT $0
snippet do
	DO ${1:i} = ${2:start}, ${3:end}, ${4:incr}
		$4
	END DO
snippet dow
	DO WHILE (${1:condition})
		$2
	END DO
snippet sub
	SUBROUTINE ${1:name}($2)
		$0
	END SUBROUTINE $1
snippet func
	FUNCTION ${1:name}($2) RESULT($3)
		$0
	END FUNCTION $1
snippet pr
	WRITE(*,*) $0
snippet read
	READ(UNIT = ${1:fp}, FILE = ${2:filename}, IOSTAT = ${3:ierr}) $0
snippet write
	WRITE(UNIT = ${1:fp}, FILE = ${2:filename}, IOSTAT = ${3:ierr}) $0
snippet open
	OPEN(UNIT = ${1:fp}, FILE = ${2:filename}, STATUS = ${3:unknown}, IOSTAT = ${4:ierr}) $0
snippet close
	CLOSE(UNIT = ${1:fp}) $0
