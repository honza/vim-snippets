# Class: @GDScript
snippet Color8 "Color8 ( int r8, int g8, int b8, int a8 ), returns Color"
	Color8(${1:int r8}, ${2:int g8}, ${3:int b8}, ${4:int a8})$0

snippet abs "abs ( float s ), returns float"
	abs(${1:float s})$0

snippet acos "acos ( float s ), returns float"
	acos(${1:float s})$0

snippet asin "asin ( float s ), returns float"
	asin(${1:float s})$0

snippet assert "assert ( bool condition ), returns Nil"
	assert(${1:bool condition})$0

snippet atan "atan ( float s ), returns float"
	atan(${1:float s})$0

snippet atan2 "atan2 ( float x, float y ), returns float"
	atan2(${1:float x}, ${2:float y})$0

snippet bytes2var "bytes2var ( RawArray bytes ), returns Variant"
	bytes2var(${1:RawArray bytes})$0

snippet ceil "ceil ( float s ), returns float"
	ceil(${1:float s})$0

snippet clamp "clamp ( float val, float min, float max ), returns float"
	clamp(${1:float val}, ${2:float min}, ${3:float max})$0

snippet convert "convert ( Variant what, int type ), returns Object"
	convert(${1:Variant what}, ${2:int type})$0

snippet cos "cos ( float s ), returns float"
	cos(${1:float s})$0

snippet cosh "cosh ( float s ), returns float"
	cosh(${1:float s})$0

snippet db2linear "db2linear ( float db ), returns float"
	db2linear(${1:float db})$0

snippet decimals "decimals ( float step ), returns float"
	decimals(${1:float step})$0

snippet dectime "dectime ( float value, float amount, float step ), returns float"
	dectime(${1:float value}, ${2:float amount}, ${3:float step})$0

snippet deg2rad "deg2rad ( float deg ), returns float"
	deg2rad(${1:float deg})$0

snippet dict2inst "dict2inst ( Dictionary dict ), returns Object"
	dict2inst(${1:Dictionary dict})$0

snippet ease "ease ( float s, float curve ), returns float"
	ease(${1:float s}, ${2:float curve})$0

snippet exp "exp ( float s ), returns float"
	exp(${1:float s})$0

snippet floor "floor ( float s ), returns float"
	floor(${1:float s})$0

snippet fmod "fmod ( float x, float y ), returns float"
	fmod(${1:float x}, ${2:float y})$0

snippet fposmod "fposmod ( float x, float y ), returns float"
	fposmod(${1:float x}, ${2:float y})$0

snippet funcref "funcref ( Object instance, String funcname ), returns FuncRef"
	funcref(${1:Object instance}, ${2:String funcname})$0

snippet hash "hash ( Variant var:Variant ), returns int"
	hash(${1:Variant var:Variant})$0

snippet inst2dict "inst2dict ( Object inst ), returns Dictionary"
	inst2dict(${1:Object inst})$0

snippet instance_from_id "instance_from_id ( int instance_id ), returns Object"
	instance_from_id(${1:int instance_id})$0

snippet is_inf "is_inf ( float s ), returns float"
	is_inf(${1:float s})$0

snippet is_nan "is_nan ( float s ), returns float"
	is_nan(${1:float s})$0

snippet lerp "lerp ( float from, float to, float weight ), returns float"
	lerp(${1:float from}, ${2:float to}, ${3:float weight})$0

snippet linear2db "linear2db ( float nrg ), returns float"
	linear2db(${1:float nrg})$0

snippet load "load ( String path ), returns Resource"
	load(${1:String path})$0

snippet log "log ( float s ), returns float"
	log(${1:float s})$0

snippet max "max ( float a, float b ), returns float"
	max(${1:float a}, ${2:float b})$0

snippet min "min ( float a, float b ), returns float"
	min(${1:float a}, ${2:float b})$0

snippet nearest_po2 "nearest_po2 ( int val ), returns int"
	nearest_po2(${1:int val})$0

snippet pow "pow ( float x, float y ), returns float"
	pow(${1:float x}, ${2:float y})$0

snippet preload "preload ( String path ), returns Resource"
	preload(${1:String path})$0

snippet print "print ( Variant what, Variant ... ), returns Nil"
	print(${1:Variant what}, ${2:Variant ...})$0

snippet print_stack "print_stack ( ), returns Nil"
	print_stack($1)$0

snippet printerr "printerr ( Variant what, Variant ... ), returns Nil"
	printerr(${1:Variant what}, ${2:Variant ...})$0

snippet printraw "printraw ( Variant what, Variant ... ), returns Nil"
	printraw(${1:Variant what}, ${2:Variant ...})$0

snippet prints "prints ( Variant what, Variant ... ), returns Nil"
	prints(${1:Variant what}, ${2:Variant ...})$0

snippet printt "printt ( Variant what, Variant ... ), returns Nil"
	printt(${1:Variant what}, ${2:Variant ...})$0

snippet rad2deg "rad2deg ( float rad ), returns float"
	rad2deg(${1:float rad})$0

snippet rand_range "rand_range ( float from, float to ), returns float"
	rand_range(${1:float from}, ${2:float to})$0

snippet rand_seed "rand_seed ( int seed ), returns Array"
	rand_seed(${1:int seed})$0

snippet randf "randf ( ), returns float"
	randf($1)$0

snippet randi "randi ( ), returns int"
	randi($1)$0

snippet randomize "randomize ( ), returns Nil"
	randomize($1)$0

snippet range "range ( Variant ... ), returns Array"
	range(${1:Variant ...})$0

snippet round "round ( float s ), returns float"
	round(${1:float s})$0

snippet seed "seed ( int seed ), returns Nil"
	seed(${1:int seed})$0

snippet sign "sign ( float s ), returns float"
	sign(${1:float s})$0

snippet sin "sin ( float s ), returns float"
	sin(${1:float s})$0

snippet sinh "sinh ( float s ), returns float"
	sinh(${1:float s})$0

snippet sqrt "sqrt ( float s ), returns float"
	sqrt(${1:float s})$0

snippet stepify "stepify ( float s, float step ), returns float"
	stepify(${1:float s}, ${2:float step})$0

snippet str "str ( Variant what, Variant ... ), returns String"
	str(${1:Variant what}, ${2:Variant ...})$0

snippet str2var "str2var ( String string ), returns Variant"
	str2var(${1:String string})$0

snippet tan "tan ( float s ), returns float"
	tan(${1:float s})$0

snippet tanh "tanh ( float s ), returns float"
	tanh(${1:float s})$0

snippet type_exists "type_exists ( String type ), returns bool"
	type_exists(${1:String type})$0

snippet typeof "typeof ( Variant what ), returns int"
	typeof(${1:Variant what})$0

snippet var2bytes "var2bytes ( Variant var ), returns RawArray"
	var2bytes(${1:Variant var})$0

snippet var2str "var2str ( Variant var ), returns String"
	var2str(${1:Variant var})$0

snippet weakref "weakref ( Object obj ), returns WeakRef"
	weakref(${1:Object obj})$0

snippet yield "yield ( Object object, String signal ), returns GDFunctionState"
	yield(${1:Object object}, ${2:String signal})$0


# Class: AABB
snippet AABB "AABB ( Vector3 pos, Vector3 size ), returns AABB"
	AABB(${1:Vector3 pos}, ${2:Vector3 size})$0

snippet encloses "encloses ( AABB with ), returns bool"
	encloses(${1:AABB with})$0

snippet expand "expand ( Vector3 to_point ), returns AABB"
	expand(${1:Vector3 to_point})$0

snippet get_area "get_area ( ), returns float"
	get_area($1)$0

snippet get_endpoint "get_endpoint ( int idx ), returns Vector3"
	get_endpoint(${1:int idx})$0

snippet get_longest_axis "get_longest_axis ( ), returns Vector3"
	get_longest_axis($1)$0

snippet get_longest_axis_index "get_longest_axis_index ( ), returns int"
	get_longest_axis_index($1)$0

snippet get_longest_axis_size "get_longest_axis_size ( ), returns float"
	get_longest_axis_size($1)$0

snippet get_shortest_axis "get_shortest_axis ( ), returns Vector3"
	get_shortest_axis($1)$0

snippet get_shortest_axis_index "get_shortest_axis_index ( ), returns int"
	get_shortest_axis_index($1)$0

snippet get_shortest_axis_size "get_shortest_axis_size ( ), returns float"
	get_shortest_axis_size($1)$0

snippet get_support "get_support ( Vector3 dir ), returns Vector3"
	get_support(${1:Vector3 dir})$0

snippet grow "grow ( float by ), returns AABB"
	grow(${1:float by})$0

snippet has_no_area "has_no_area ( ), returns bool"
	has_no_area($1)$0

snippet has_no_surface "has_no_surface ( ), returns bool"
	has_no_surface($1)$0

snippet has_point "has_point ( Vector3 point ), returns bool"
	has_point(${1:Vector3 point})$0

snippet intersection "intersection ( AABB with ), returns AABB"
	intersection(${1:AABB with})$0

snippet intersects "intersects ( AABB with ), returns bool"
	intersects(${1:AABB with})$0

snippet intersects_plane "intersects_plane ( Plane plane ), returns bool"
	intersects_plane(${1:Plane plane})$0

snippet intersects_segment "intersects_segment ( Vector3 from, Vector3 to ), returns bool"
	intersects_segment(${1:Vector3 from}, ${2:Vector3 to})$0

snippet merge "merge ( AABB with ), returns AABB"
	merge(${1:AABB with})$0


# Class: AcceptDialog
snippet add_button "add_button ( String text, bool right=false, String action=”” ), returns Button"
	add_button(${1:String text}, ${2:bool right=false}, ${3:String action=””})$0

snippet add_cancel "add_cancel ( String name ), returns Button"
	add_cancel(${1:String name})$0

snippet get_hide_on_ok "get_hide_on_ok ( ) const, returns bool"
	get_hide_on_ok($1)$0

snippet get_label "get_label ( ), returns Object"
	get_label($1)$0

snippet get_ok "get_ok ( ), returns Object"
	get_ok($1)$0

snippet get_text "get_text ( ) const, returns String"
	get_text($1)$0

snippet register_text_enter "register_text_enter ( Object line_edit ), returns LineEdit"
	register_text_enter(${1:Object line_edit})$0

snippet set_hide_on_ok "set_hide_on_ok ( bool enabled ), returns void"
	set_hide_on_ok(${1:bool enabled})$0

snippet set_text "set_text ( String text ), returns void"
	set_text(${1:String text})$0


# Class: AnimatedSprite
snippet get_animation "get_animation ( ) const, returns String"
	get_animation($1)$0

snippet get_frame "get_frame ( ) const, returns int"
	get_frame($1)$0

snippet get_modulate "get_modulate ( ) const, returns Color"
	get_modulate($1)$0

snippet get_offset "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

snippet get_sprite_frames "get_sprite_frames ( ) const, returns SpriteFrames"
	get_sprite_frames($1)$0

snippet is_centered "is_centered ( ) const, returns bool"
	is_centered($1)$0

snippet is_flipped_h "is_flipped_h ( ) const, returns bool"
	is_flipped_h($1)$0

snippet is_flipped_v "is_flipped_v ( ) const, returns bool"
	is_flipped_v($1)$0

snippet is_playing "is_playing ( ) const, returns bool"
	is_playing($1)$0

snippet play "play ( String anim=”” ), returns void"
	play(${1:String anim=””})$0

snippet set_animation "set_animation ( String animation ), returns void"
	set_animation(${1:String animation})$0

snippet set_centered "set_centered ( bool centered ), returns void"
	set_centered(${1:bool centered})$0

snippet set_flip_h "set_flip_h ( bool flip_h ), returns void"
	set_flip_h(${1:bool flip_h})$0

snippet set_flip_v "set_flip_v ( bool flip_v ), returns void"
	set_flip_v(${1:bool flip_v})$0

snippet set_frame "set_frame ( int frame ), returns void"
	set_frame(${1:int frame})$0

snippet set_modulate "set_modulate ( Color modulate ), returns void"
	set_modulate(${1:Color modulate})$0

snippet set_offset "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

snippet set_sprite_frames "set_sprite_frames ( SpriteFrames sprite_frames ), returns void"
	set_sprite_frames(${1:SpriteFrames sprite_frames})$0

snippet stop "stop ( ), returns void"
	stop($1)$0


# Class: AnimatedSprite3D
# trigger conflict with other class(es)
snippet get_animation_AnimatedSprite "get_animation ( ) const, returns String"
	get_animation($1)$0

# trigger conflict with other class(es)
snippet get_frame_AnimatedSprite "get_frame ( ) const, returns int"
	get_frame($1)$0

# trigger conflict with other class(es)
snippet get_sprite_frames_AnimatedSprite "get_sprite_frames ( ) const, returns SpriteFrames"
	get_sprite_frames($1)$0

# trigger conflict with other class(es)
snippet is_playing_AnimatedSprite "is_playing ( ) const, returns bool"
	is_playing($1)$0

# trigger conflict with other class(es)
snippet play_AnimatedSprite "play ( String anim=”” ), returns void"
	play(${1:String anim=””})$0

# trigger conflict with other class(es)
snippet set_animation_AnimatedSprite "set_animation ( String animation ), returns void"
	set_animation(${1:String animation})$0

# trigger conflict with other class(es)
snippet set_frame_AnimatedSprite "set_frame ( int frame ), returns void"
	set_frame(${1:int frame})$0

# trigger conflict with other class(es)
snippet set_sprite_frames_AnimatedSprite "set_sprite_frames ( SpriteFrames sprite_frames ), returns void"
	set_sprite_frames(${1:SpriteFrames sprite_frames})$0

# trigger conflict with other class(es)
snippet stop_AnimatedSprite "stop ( ), returns void"
	stop($1)$0


# Class: Animation
snippet add_track "add_track ( int type, int at_pos=-1 ), returns int"
	add_track(${1:int type}, ${2:int at_pos=-1})$0

snippet clear "clear ( ), returns void"
	clear($1)$0

snippet find_track "find_track ( NodePath path ) const, returns int"
	find_track(${1:NodePath path})$0

snippet get_length "get_length ( ) const, returns float"
	get_length($1)$0

snippet get_step "get_step ( ) const, returns float"
	get_step($1)$0

snippet get_track_count "get_track_count ( ) const, returns int"
	get_track_count($1)$0

snippet has_loop "has_loop ( ) const, returns bool"
	has_loop($1)$0

snippet method_track_get_key_indices "method_track_get_key_indices ( int idx, float time_sec, float delta ) const, returns IntArray"
	method_track_get_key_indices(${1:int idx}, ${2:float time_sec}, ${3:float delta})$0

snippet method_track_get_name "method_track_get_name ( int idx, int key_idx ) const, returns String"
	method_track_get_name(${1:int idx}, ${2:int key_idx})$0

snippet method_track_get_params "method_track_get_params ( int idx, int key_idx ) const, returns Array"
	method_track_get_params(${1:int idx}, ${2:int key_idx})$0

snippet remove_track "remove_track ( int idx ), returns void"
	remove_track(${1:int idx})$0

snippet set_length "set_length ( float time_sec ), returns void"
	set_length(${1:float time_sec})$0

snippet set_loop "set_loop ( bool enabled ), returns void"
	set_loop(${1:bool enabled})$0

snippet set_step "set_step ( float size_sec ), returns void"
	set_step(${1:float size_sec})$0

snippet track_find_key "track_find_key ( int idx, float time, bool exact=false ) const, returns int"
	track_find_key(${1:int idx}, ${2:float time}, ${3:bool exact=false})$0

snippet track_get_interpolation_type "track_get_interpolation_type ( int idx ) const, returns int"
	track_get_interpolation_type(${1:int idx})$0

snippet track_get_key_count "track_get_key_count ( int idx ) const, returns int"
	track_get_key_count(${1:int idx})$0

snippet track_get_key_time "track_get_key_time ( int idx, int key_idx ) const, returns float"
	track_get_key_time(${1:int idx}, ${2:int key_idx})$0

snippet track_get_key_transition "track_get_key_transition ( int idx, int key_idx ) const, returns float"
	track_get_key_transition(${1:int idx}, ${2:int key_idx})$0

snippet track_get_key_value "track_get_key_value ( int idx, int key_idx ) const, returns void"
	track_get_key_value(${1:int idx}, ${2:int key_idx})$0

snippet track_get_path "track_get_path ( int idx ) const, returns NodePath"
	track_get_path(${1:int idx})$0

snippet track_get_type "track_get_type ( int idx ) const, returns int"
	track_get_type(${1:int idx})$0

snippet track_insert_key "track_insert_key ( int idx, float time, Variant key, float transition=1 ), returns void"
	track_insert_key(${1:int idx}, ${2:float time}, ${3:Variant key}, ${4:float transition=1})$0

snippet track_is_imported "track_is_imported ( int idx ) const, returns bool"
	track_is_imported(${1:int idx})$0

snippet track_move_down "track_move_down ( int idx ), returns void"
	track_move_down(${1:int idx})$0

snippet track_move_up "track_move_up ( int idx ), returns void"
	track_move_up(${1:int idx})$0

snippet track_remove_key "track_remove_key ( int idx, int key_idx ), returns void"
	track_remove_key(${1:int idx}, ${2:int key_idx})$0

snippet track_remove_key_at_pos "track_remove_key_at_pos ( int idx, float pos ), returns void"
	track_remove_key_at_pos(${1:int idx}, ${2:float pos})$0

snippet track_set_imported "track_set_imported ( int idx, bool imported ), returns void"
	track_set_imported(${1:int idx}, ${2:bool imported})$0

snippet track_set_interpolation_type "track_set_interpolation_type ( int idx, int interpolation ), returns void"
	track_set_interpolation_type(${1:int idx}, ${2:int interpolation})$0

snippet track_set_key_transition "track_set_key_transition ( int idx, int key_idx, float transition ), returns void"
	track_set_key_transition(${1:int idx}, ${2:int key_idx}, ${3:float transition})$0

snippet track_set_key_value "track_set_key_value ( int idx, int key, Variant value ), returns void"
	track_set_key_value(${1:int idx}, ${2:int key}, ${3:Variant value})$0

snippet track_set_path "track_set_path ( int idx, NodePath path ), returns void"
	track_set_path(${1:int idx}, ${2:NodePath path})$0

snippet transform_track_insert_key "transform_track_insert_key ( int idx, float time, Vector3 loc, Quat rot, Vector3 scale ), returns int"
	transform_track_insert_key(${1:int idx}, ${2:float time}, ${3:Vector3 loc}, ${4:Quat rot}, ${5:Vector3 scale})$0

snippet transform_track_interpolate "transform_track_interpolate ( int idx, float time_sec ) const, returns Array"
	transform_track_interpolate(${1:int idx}, ${2:float time_sec})$0

snippet value_track_get_key_indices "value_track_get_key_indices ( int idx, float time_sec, float delta ) const, returns IntArray"
	value_track_get_key_indices(${1:int idx}, ${2:float time_sec}, ${3:float delta})$0

snippet value_track_get_update_mode "value_track_get_update_mode ( int idx ) const, returns int"
	value_track_get_update_mode(${1:int idx})$0

snippet value_track_set_update_mode "value_track_set_update_mode ( int idx, int mode ), returns void"
	value_track_set_update_mode(${1:int idx}, ${2:int mode})$0


# Class: AnimationPlayer
snippet add_animation "add_animation ( String name, Animation animation ), returns int"
	add_animation(${1:String name}, ${2:Animation animation})$0

snippet advance "advance ( float delta ), returns void"
	advance(${1:float delta})$0

snippet animation_get_next "animation_get_next ( String anim_from ) const, returns String"
	animation_get_next(${1:String anim_from})$0

snippet animation_set_next "animation_set_next ( String anim_from, String anim_to ), returns void"
	animation_set_next(${1:String anim_from}, ${2:String anim_to})$0

snippet clear_caches "clear_caches ( ), returns void"
	clear_caches($1)$0

snippet clear_queue "clear_queue ( ), returns void"
	clear_queue($1)$0

snippet find_animation "find_animation ( Animation animation ) const, returns String"
	find_animation(${1:Animation animation})$0

# trigger conflict with other class(es)
snippet get_animation_AnimationPlayer "get_animation ( String name ) const, returns Animation"
	get_animation(${1:String name})$0

snippet get_animation_list "get_animation_list ( ) const, returns StringArray"
	get_animation_list($1)$0

snippet get_animation_process_mode "get_animation_process_mode ( ) const, returns int"
	get_animation_process_mode($1)$0

snippet get_autoplay "get_autoplay ( ) const, returns String"
	get_autoplay($1)$0

snippet get_blend_time "get_blend_time ( String anim_from, String anim_to ) const, returns float"
	get_blend_time(${1:String anim_from}, ${2:String anim_to})$0

snippet get_current_animation "get_current_animation ( ) const, returns String"
	get_current_animation($1)$0

snippet get_current_animation_length "get_current_animation_length ( ) const, returns float"
	get_current_animation_length($1)$0

snippet get_current_animation_pos "get_current_animation_pos ( ) const, returns float"
	get_current_animation_pos($1)$0

snippet get_default_blend_time "get_default_blend_time ( ) const, returns float"
	get_default_blend_time($1)$0

snippet get_pos "get_pos ( ) const, returns float"
	get_pos($1)$0

snippet get_root "get_root ( ) const, returns NodePath"
	get_root($1)$0

snippet get_speed "get_speed ( ) const, returns float"
	get_speed($1)$0

snippet has_animation "has_animation ( String name ) const, returns bool"
	has_animation(${1:String name})$0

snippet is_active "is_active ( ) const, returns bool"
	is_active($1)$0

# trigger conflict with other class(es)
snippet is_playing_AnimationPlayer "is_playing ( ) const, returns bool"
	is_playing($1)$0

# trigger conflict with other class(es)
snippet play_AnimationPlayer "play ( String name=””, float custom_blend=-1, float custom_speed=1, bool from_end=false ), returns void"
	play(${1:String name=””}, ${2:float custom_blend=-1}, ${3:float custom_speed=1}, ${4:bool from_end=false})$0

snippet play_backwards "play_backwards ( String name=””, float custom_blend=-1 ), returns void"
	play_backwards(${1:String name=””}, ${2:float custom_blend=-1})$0

snippet queue "queue ( String name ), returns void"
	queue(${1:String name})$0

snippet remove_animation "remove_animation ( String name ), returns void"
	remove_animation(${1:String name})$0

snippet rename_animation "rename_animation ( String name, String newname ), returns void"
	rename_animation(${1:String name}, ${2:String newname})$0

snippet seek "seek ( float pos_sec, bool update=false ), returns void"
	seek(${1:float pos_sec}, ${2:bool update=false})$0

snippet set_active "set_active ( bool active ), returns void"
	set_active(${1:bool active})$0

snippet set_animation_process_mode "set_animation_process_mode ( int mode ), returns void"
	set_animation_process_mode(${1:int mode})$0

snippet set_autoplay "set_autoplay ( String name ), returns void"
	set_autoplay(${1:String name})$0

snippet set_blend_time "set_blend_time ( String anim_from, String anim_to, float sec ), returns void"
	set_blend_time(${1:String anim_from}, ${2:String anim_to}, ${3:float sec})$0

snippet set_current_animation "set_current_animation ( String anim ), returns void"
	set_current_animation(${1:String anim})$0

snippet set_default_blend_time "set_default_blend_time ( float sec ), returns void"
	set_default_blend_time(${1:float sec})$0

snippet set_root "set_root ( NodePath path ), returns void"
	set_root(${1:NodePath path})$0

snippet set_speed "set_speed ( float speed ), returns void"
	set_speed(${1:float speed})$0

# trigger conflict with other class(es)
snippet stop_AnimationPlayer "stop ( bool reset=true ), returns void"
	stop(${1:bool reset=true})$0

snippet stop_all "stop_all ( ), returns void"
	stop_all($1)$0


# Class: AnimationTreePlayer
snippet add_node "add_node ( int type, String id ), returns void"
	add_node(${1:int type}, ${2:String id})$0

# trigger conflict with other class(es)
snippet advance_AnimationTreePlayer "advance ( float delta ), returns void"
	advance(${1:float delta})$0

snippet animation_node_get_animation "animation_node_get_animation ( String id ) const, returns Animation"
	animation_node_get_animation(${1:String id})$0

snippet animation_node_get_master_animation "animation_node_get_master_animation ( String id ) const, returns String"
	animation_node_get_master_animation(${1:String id})$0

snippet animation_node_set_animation "animation_node_set_animation ( String id, Animation animation ), returns void"
	animation_node_set_animation(${1:String id}, ${2:Animation animation})$0

snippet animation_node_set_filter_path "animation_node_set_filter_path ( String id, NodePath path, bool enable ), returns void"
	animation_node_set_filter_path(${1:String id}, ${2:NodePath path}, ${3:bool enable})$0

snippet animation_node_set_master_animation "animation_node_set_master_animation ( String id, String source ), returns void"
	animation_node_set_master_animation(${1:String id}, ${2:String source})$0

snippet blend2_node_get_amount "blend2_node_get_amount ( String id ) const, returns float"
	blend2_node_get_amount(${1:String id})$0

snippet blend2_node_set_amount "blend2_node_set_amount ( String id, float blend ), returns void"
	blend2_node_set_amount(${1:String id}, ${2:float blend})$0

snippet blend2_node_set_filter_path "blend2_node_set_filter_path ( String id, NodePath path, bool enable ), returns void"
	blend2_node_set_filter_path(${1:String id}, ${2:NodePath path}, ${3:bool enable})$0

snippet blend3_node_get_amount "blend3_node_get_amount ( String id ) const, returns float"
	blend3_node_get_amount(${1:String id})$0

snippet blend3_node_set_amount "blend3_node_set_amount ( String id, float blend ), returns void"
	blend3_node_set_amount(${1:String id}, ${2:float blend})$0

snippet blend4_node_get_amount "blend4_node_get_amount ( String id ) const, returns Vector2"
	blend4_node_get_amount(${1:String id})$0

snippet blend4_node_set_amount "blend4_node_set_amount ( String id, Vector2 blend ), returns void"
	blend4_node_set_amount(${1:String id}, ${2:Vector2 blend})$0

snippet connect "connect ( String id, String dst_id, int dst_input_idx ), returns int"
	connect(${1:String id}, ${2:String dst_id}, ${3:int dst_input_idx})$0

snippet disconnect "disconnect ( String id, int dst_input_idx ), returns void"
	disconnect(${1:String id}, ${2:int dst_input_idx})$0

# trigger conflict with other class(es)
snippet get_animation_process_mode_AnimationTreePlayer "get_animation_process_mode ( ) const, returns int"
	get_animation_process_mode($1)$0

snippet get_base_path "get_base_path ( ) const, returns NodePath"
	get_base_path($1)$0

snippet get_master_player "get_master_player ( ) const, returns NodePath"
	get_master_player($1)$0

snippet get_node_list "get_node_list ( ), returns StringArray"
	get_node_list($1)$0

# trigger conflict with other class(es)
snippet is_active_AnimationTreePlayer "is_active ( ) const, returns bool"
	is_active($1)$0

snippet is_connected "is_connected ( String id, String dst_id, int dst_input_idx ) const, returns bool"
	is_connected(${1:String id}, ${2:String dst_id}, ${3:int dst_input_idx})$0

snippet mix_node_get_amount "mix_node_get_amount ( String id ) const, returns float"
	mix_node_get_amount(${1:String id})$0

snippet mix_node_set_amount "mix_node_set_amount ( String id, float ratio ), returns void"
	mix_node_set_amount(${1:String id}, ${2:float ratio})$0

snippet node_exists "node_exists ( String node ) const, returns bool"
	node_exists(${1:String node})$0

snippet node_get_input_count "node_get_input_count ( String id ) const, returns int"
	node_get_input_count(${1:String id})$0

snippet node_get_input_source "node_get_input_source ( String id, int idx ) const, returns String"
	node_get_input_source(${1:String id}, ${2:int idx})$0

snippet node_get_pos "node_get_pos ( String id ) const, returns Vector2"
	node_get_pos(${1:String id})$0

snippet node_get_type "node_get_type ( String id ) const, returns int"
	node_get_type(${1:String id})$0

snippet node_rename "node_rename ( String node, String new_name ), returns int"
	node_rename(${1:String node}, ${2:String new_name})$0

snippet node_set_pos "node_set_pos ( String id, Vector2 screen_pos ), returns void"
	node_set_pos(${1:String id}, ${2:Vector2 screen_pos})$0

snippet oneshot_node_get_autorestart_delay "oneshot_node_get_autorestart_delay ( String id ) const, returns float"
	oneshot_node_get_autorestart_delay(${1:String id})$0

snippet oneshot_node_get_autorestart_random_delay "oneshot_node_get_autorestart_random_delay ( String id ) const, returns float"
	oneshot_node_get_autorestart_random_delay(${1:String id})$0

snippet oneshot_node_get_fadein_time "oneshot_node_get_fadein_time ( String id ) const, returns float"
	oneshot_node_get_fadein_time(${1:String id})$0

snippet oneshot_node_get_fadeout_time "oneshot_node_get_fadeout_time ( String id ) const, returns float"
	oneshot_node_get_fadeout_time(${1:String id})$0

snippet oneshot_node_has_autorestart "oneshot_node_has_autorestart ( String id ) const, returns bool"
	oneshot_node_has_autorestart(${1:String id})$0

snippet oneshot_node_is_active "oneshot_node_is_active ( String id ) const, returns bool"
	oneshot_node_is_active(${1:String id})$0

snippet oneshot_node_set_autorestart "oneshot_node_set_autorestart ( String id, bool enable ), returns void"
	oneshot_node_set_autorestart(${1:String id}, ${2:bool enable})$0

snippet oneshot_node_set_autorestart_delay "oneshot_node_set_autorestart_delay ( String id, float delay_sec ), returns void"
	oneshot_node_set_autorestart_delay(${1:String id}, ${2:float delay_sec})$0

snippet oneshot_node_set_autorestart_random_delay "oneshot_node_set_autorestart_random_delay ( String id, float rand_sec ), returns void"
	oneshot_node_set_autorestart_random_delay(${1:String id}, ${2:float rand_sec})$0

snippet oneshot_node_set_fadein_time "oneshot_node_set_fadein_time ( String id, float time_sec ), returns void"
	oneshot_node_set_fadein_time(${1:String id}, ${2:float time_sec})$0

snippet oneshot_node_set_fadeout_time "oneshot_node_set_fadeout_time ( String id, float time_sec ), returns void"
	oneshot_node_set_fadeout_time(${1:String id}, ${2:float time_sec})$0

snippet oneshot_node_set_filter_path "oneshot_node_set_filter_path ( String id, NodePath path, bool enable ), returns void"
	oneshot_node_set_filter_path(${1:String id}, ${2:NodePath path}, ${3:bool enable})$0

snippet oneshot_node_start "oneshot_node_start ( String id ), returns void"
	oneshot_node_start(${1:String id})$0

snippet oneshot_node_stop "oneshot_node_stop ( String id ), returns void"
	oneshot_node_stop(${1:String id})$0

snippet recompute_caches "recompute_caches ( ), returns void"
	recompute_caches($1)$0

snippet remove_node "remove_node ( String id ), returns void"
	remove_node(${1:String id})$0

snippet reset "reset ( ), returns void"
	reset($1)$0

# trigger conflict with other class(es)
snippet set_active_AnimationTreePlayer "set_active ( bool enabled ), returns void"
	set_active(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_animation_process_mode_AnimationTreePlayer "set_animation_process_mode ( int mode ), returns void"
	set_animation_process_mode(${1:int mode})$0

snippet set_base_path "set_base_path ( NodePath path ), returns void"
	set_base_path(${1:NodePath path})$0

snippet set_master_player "set_master_player ( NodePath nodepath ), returns void"
	set_master_player(${1:NodePath nodepath})$0

snippet timescale_node_get_scale "timescale_node_get_scale ( String id ) const, returns float"
	timescale_node_get_scale(${1:String id})$0

snippet timescale_node_set_scale "timescale_node_set_scale ( String id, float scale ), returns void"
	timescale_node_set_scale(${1:String id}, ${2:float scale})$0

snippet timeseek_node_seek "timeseek_node_seek ( String id, float pos_sec ), returns void"
	timeseek_node_seek(${1:String id}, ${2:float pos_sec})$0

snippet transition_node_delete_input "transition_node_delete_input ( String id, int input_idx ), returns void"
	transition_node_delete_input(${1:String id}, ${2:int input_idx})$0

snippet transition_node_get_current "transition_node_get_current ( String id ) const, returns int"
	transition_node_get_current(${1:String id})$0

snippet transition_node_get_input_count "transition_node_get_input_count ( String id ) const, returns int"
	transition_node_get_input_count(${1:String id})$0

snippet transition_node_get_xfade_time "transition_node_get_xfade_time ( String id ) const, returns float"
	transition_node_get_xfade_time(${1:String id})$0

snippet transition_node_has_input_auto_advance "transition_node_has_input_auto_advance ( String id, int input_idx ) const, returns bool"
	transition_node_has_input_auto_advance(${1:String id}, ${2:int input_idx})$0

snippet transition_node_set_current "transition_node_set_current ( String id, int input_idx ), returns void"
	transition_node_set_current(${1:String id}, ${2:int input_idx})$0

snippet transition_node_set_input_auto_advance "transition_node_set_input_auto_advance ( String id, int input_idx, bool enable ), returns void"
	transition_node_set_input_auto_advance(${1:String id}, ${2:int input_idx}, ${3:bool enable})$0

snippet transition_node_set_input_count "transition_node_set_input_count ( String id, int count ), returns void"
	transition_node_set_input_count(${1:String id}, ${2:int count})$0

snippet transition_node_set_xfade_time "transition_node_set_xfade_time ( String id, float time_sec ), returns void"
	transition_node_set_xfade_time(${1:String id}, ${2:float time_sec})$0


# Class: Area
snippet get_angular_damp "get_angular_damp ( ) const, returns float"
	get_angular_damp($1)$0

snippet get_collision_mask "get_collision_mask ( ) const, returns int"
	get_collision_mask($1)$0

snippet get_collision_mask_bit "get_collision_mask_bit ( int bit ) const, returns bool"
	get_collision_mask_bit(${1:int bit})$0

snippet get_gravity "get_gravity ( ) const, returns float"
	get_gravity($1)$0

snippet get_gravity_distance_scale "get_gravity_distance_scale ( ) const, returns float"
	get_gravity_distance_scale($1)$0

snippet get_gravity_vector "get_gravity_vector ( ) const, returns Vector3"
	get_gravity_vector($1)$0

snippet get_layer_mask "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

snippet get_layer_mask_bit "get_layer_mask_bit ( int bit ) const, returns bool"
	get_layer_mask_bit(${1:int bit})$0

snippet get_linear_damp "get_linear_damp ( ) const, returns float"
	get_linear_damp($1)$0

snippet get_overlapping_areas "get_overlapping_areas ( ) const, returns Array"
	get_overlapping_areas($1)$0

snippet get_overlapping_bodies "get_overlapping_bodies ( ) const, returns Array"
	get_overlapping_bodies($1)$0

snippet get_priority "get_priority ( ) const, returns float"
	get_priority($1)$0

snippet get_space_override_mode "get_space_override_mode ( ) const, returns int"
	get_space_override_mode($1)$0

snippet is_gravity_a_point "is_gravity_a_point ( ) const, returns bool"
	is_gravity_a_point($1)$0

snippet is_monitorable "is_monitorable ( ) const, returns bool"
	is_monitorable($1)$0

snippet is_monitoring_enabled "is_monitoring_enabled ( ) const, returns bool"
	is_monitoring_enabled($1)$0

snippet overlaps_area "overlaps_area ( Object area ) const, returns bool"
	overlaps_area(${1:Object area})$0

snippet overlaps_body "overlaps_body ( Object body ) const, returns bool"
	overlaps_body(${1:Object body})$0

snippet set_angular_damp "set_angular_damp ( float angular_damp ), returns void"
	set_angular_damp(${1:float angular_damp})$0

snippet set_collision_mask "set_collision_mask ( int collision_mask ), returns void"
	set_collision_mask(${1:int collision_mask})$0

snippet set_collision_mask_bit "set_collision_mask_bit ( int bit, bool value ), returns void"
	set_collision_mask_bit(${1:int bit}, ${2:bool value})$0

snippet set_enable_monitoring "set_enable_monitoring ( bool enable ), returns void"
	set_enable_monitoring(${1:bool enable})$0

snippet set_gravity "set_gravity ( float gravity ), returns void"
	set_gravity(${1:float gravity})$0

snippet set_gravity_distance_scale "set_gravity_distance_scale ( float distance_scale ), returns void"
	set_gravity_distance_scale(${1:float distance_scale})$0

snippet set_gravity_is_point "set_gravity_is_point ( bool enable ), returns void"
	set_gravity_is_point(${1:bool enable})$0

snippet set_gravity_vector "set_gravity_vector ( Vector3 vector ), returns void"
	set_gravity_vector(${1:Vector3 vector})$0

snippet set_layer_mask "set_layer_mask ( int layer_mask ), returns void"
	set_layer_mask(${1:int layer_mask})$0

snippet set_layer_mask_bit "set_layer_mask_bit ( int bit, bool value ), returns void"
	set_layer_mask_bit(${1:int bit}, ${2:bool value})$0

snippet set_linear_damp "set_linear_damp ( float linear_damp ), returns void"
	set_linear_damp(${1:float linear_damp})$0

snippet set_monitorable "set_monitorable ( bool enable ), returns void"
	set_monitorable(${1:bool enable})$0

snippet set_priority "set_priority ( float priority ), returns void"
	set_priority(${1:float priority})$0

snippet set_space_override_mode "set_space_override_mode ( int enable ), returns void"
	set_space_override_mode(${1:int enable})$0


# Class: Area2D
# trigger conflict with other class(es)
snippet get_angular_damp_Area2D "get_angular_damp ( ) const, returns float"
	get_angular_damp($1)$0

# trigger conflict with other class(es)
snippet get_collision_mask_Area2D "get_collision_mask ( ) const, returns int"
	get_collision_mask($1)$0

# trigger conflict with other class(es)
snippet get_collision_mask_bit_Area2D "get_collision_mask_bit ( int bit ) const, returns bool"
	get_collision_mask_bit(${1:int bit})$0

# trigger conflict with other class(es)
snippet get_gravity_Area2D "get_gravity ( ) const, returns float"
	get_gravity($1)$0

# trigger conflict with other class(es)
snippet get_gravity_distance_scale_Area2D "get_gravity_distance_scale ( ) const, returns float"
	get_gravity_distance_scale($1)$0

# trigger conflict with other class(es)
snippet get_gravity_vector_Area2D "get_gravity_vector ( ) const, returns Vector2"
	get_gravity_vector($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_Area2D "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_bit_Area2D "get_layer_mask_bit ( int bit ) const, returns bool"
	get_layer_mask_bit(${1:int bit})$0

# trigger conflict with other class(es)
snippet get_linear_damp_Area2D "get_linear_damp ( ) const, returns float"
	get_linear_damp($1)$0

# trigger conflict with other class(es)
snippet get_overlapping_areas_Area2D "get_overlapping_areas ( ) const, returns Array"
	get_overlapping_areas($1)$0

# trigger conflict with other class(es)
snippet get_overlapping_bodies_Area2D "get_overlapping_bodies ( ) const, returns Array"
	get_overlapping_bodies($1)$0

# trigger conflict with other class(es)
snippet get_priority_Area2D "get_priority ( ) const, returns float"
	get_priority($1)$0

# trigger conflict with other class(es)
snippet get_space_override_mode_Area2D "get_space_override_mode ( ) const, returns int"
	get_space_override_mode($1)$0

# trigger conflict with other class(es)
snippet is_gravity_a_point_Area2D "is_gravity_a_point ( ) const, returns bool"
	is_gravity_a_point($1)$0

# trigger conflict with other class(es)
snippet is_monitorable_Area2D "is_monitorable ( ) const, returns bool"
	is_monitorable($1)$0

# trigger conflict with other class(es)
snippet is_monitoring_enabled_Area2D "is_monitoring_enabled ( ) const, returns bool"
	is_monitoring_enabled($1)$0

# trigger conflict with other class(es)
snippet overlaps_area_Area2D "overlaps_area ( Object area ) const, returns bool"
	overlaps_area(${1:Object area})$0

# trigger conflict with other class(es)
snippet overlaps_body_Area2D "overlaps_body ( Object body ) const, returns bool"
	overlaps_body(${1:Object body})$0

# trigger conflict with other class(es)
snippet set_angular_damp_Area2D "set_angular_damp ( float angular_damp ), returns void"
	set_angular_damp(${1:float angular_damp})$0

# trigger conflict with other class(es)
snippet set_collision_mask_Area2D "set_collision_mask ( int collision_mask ), returns void"
	set_collision_mask(${1:int collision_mask})$0

# trigger conflict with other class(es)
snippet set_collision_mask_bit_Area2D "set_collision_mask_bit ( int bit, bool value ), returns void"
	set_collision_mask_bit(${1:int bit}, ${2:bool value})$0

# trigger conflict with other class(es)
snippet set_enable_monitoring_Area2D "set_enable_monitoring ( bool enable ), returns void"
	set_enable_monitoring(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_gravity_Area2D "set_gravity ( float gravity ), returns void"
	set_gravity(${1:float gravity})$0

# trigger conflict with other class(es)
snippet set_gravity_distance_scale_Area2D "set_gravity_distance_scale ( float distance_scale ), returns void"
	set_gravity_distance_scale(${1:float distance_scale})$0

# trigger conflict with other class(es)
snippet set_gravity_is_point_Area2D "set_gravity_is_point ( bool enable ), returns void"
	set_gravity_is_point(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_gravity_vector_Area2D "set_gravity_vector ( Vector2 vector ), returns void"
	set_gravity_vector(${1:Vector2 vector})$0

# trigger conflict with other class(es)
snippet set_layer_mask_Area2D "set_layer_mask ( int layer_mask ), returns void"
	set_layer_mask(${1:int layer_mask})$0

# trigger conflict with other class(es)
snippet set_layer_mask_bit_Area2D "set_layer_mask_bit ( int bit, bool value ), returns void"
	set_layer_mask_bit(${1:int bit}, ${2:bool value})$0

# trigger conflict with other class(es)
snippet set_linear_damp_Area2D "set_linear_damp ( float linear_damp ), returns void"
	set_linear_damp(${1:float linear_damp})$0

# trigger conflict with other class(es)
snippet set_monitorable_Area2D "set_monitorable ( bool enable ), returns void"
	set_monitorable(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_priority_Area2D "set_priority ( float priority ), returns void"
	set_priority(${1:float priority})$0

# trigger conflict with other class(es)
snippet set_space_override_mode_Area2D "set_space_override_mode ( int enable ), returns void"
	set_space_override_mode(${1:int enable})$0


# Class: Array
# not-unique trigger detected in this class: Array; snippet commented
#snippet Array "Array ( ColorArray from ), returns Array"
#	Array(ColorArray from)$0

# not-unique trigger detected in this class: Array; snippet commented
#snippet Array "Array ( Vector3Array from ), returns Array"
#	Array(Vector3Array from)$0

# not-unique trigger detected in this class: Array; snippet commented
#snippet Array "Array ( Vector2Array from ), returns Array"
#	Array(Vector2Array from)$0

# not-unique trigger detected in this class: Array; snippet commented
#snippet Array "Array ( StringArray from ), returns Array"
#	Array(StringArray from)$0

# not-unique trigger detected in this class: Array; snippet commented
#snippet Array "Array ( RealArray from ), returns Array"
#	Array(RealArray from)$0

# not-unique trigger detected in this class: Array; snippet commented
#snippet Array "Array ( IntArray from ), returns Array"
#	Array(IntArray from)$0

snippet Array "Array ( RawArray from ), returns Array"
	Array(${1:RawArray from})$0

snippet append "append ( var value ), returns void"
	append(${1:var value})$0

# trigger conflict with other class(es)
snippet clear_Array "clear ( ), returns void"
	clear($1)$0

snippet count "count ( var value ), returns int"
	count(${1:var value})$0

snippet empty "empty ( ), returns bool"
	empty($1)$0

snippet erase "erase ( var value ), returns void"
	erase(${1:var value})$0

snippet find "find ( var what, int from=0 ), returns int"
	find(${1:var what}, ${2:int from=0})$0

snippet find_last "find_last ( var value ), returns int"
	find_last(${1:var value})$0

snippet has "has ( var value ), returns bool"
	has(${1:var value})$0

# trigger conflict with other class(es)
snippet hash_Array "hash ( ), returns int"
	hash($1)$0

snippet insert "insert ( int pos, var value ), returns void"
	insert(${1:int pos}, ${2:var value})$0

snippet invert "invert ( ), returns void"
	invert($1)$0

snippet is_shared "is_shared ( ), returns bool"
	is_shared($1)$0

snippet pop_back "pop_back ( ), returns void"
	pop_back($1)$0

snippet pop_front "pop_front ( ), returns void"
	pop_front($1)$0

snippet push_back "push_back ( var value ), returns void"
	push_back(${1:var value})$0

snippet push_front "push_front ( var value ), returns void"
	push_front(${1:var value})$0

snippet remove "remove ( int pos ), returns void"
	remove(${1:int pos})$0

snippet resize "resize ( int pos ), returns void"
	resize(${1:int pos})$0

snippet rfind "rfind ( var what, int from=-1 ), returns int"
	rfind(${1:var what}, ${2:int from=-1})$0

snippet size "size ( ), returns int"
	size($1)$0

snippet sort "sort ( ), returns void"
	sort($1)$0

snippet sort_custom "sort_custom ( Object obj, String func ), returns void"
	sort_custom(${1:Object obj}, ${2:String func})$0


# Class: AtlasTexture
snippet get_atlas "get_atlas ( ) const, returns Texture"
	get_atlas($1)$0

snippet get_margin "get_margin ( ) const, returns Rect2"
	get_margin($1)$0

snippet get_region "get_region ( ) const, returns Rect2"
	get_region($1)$0

snippet set_atlas "set_atlas ( Texture atlas ), returns void"
	set_atlas(${1:Texture atlas})$0

snippet set_margin "set_margin ( Rect2 margin ), returns void"
	set_margin(${1:Rect2 margin})$0

snippet set_region "set_region ( Rect2 region ), returns void"
	set_region(${1:Rect2 region})$0


# Class: AudioServer
snippet free_rid "free_rid ( RID rid ), returns void"
	free_rid(${1:RID rid})$0

snippet get_event_voice_global_volume_scale "get_event_voice_global_volume_scale ( ) const, returns float"
	get_event_voice_global_volume_scale($1)$0

snippet get_fx_global_volume_scale "get_fx_global_volume_scale ( ) const, returns float"
	get_fx_global_volume_scale($1)$0

snippet get_stream_global_volume_scale "get_stream_global_volume_scale ( ) const, returns float"
	get_stream_global_volume_scale($1)$0

snippet sample_create "sample_create ( int format, bool stereo, int length ), returns RID"
	sample_create(${1:int format}, ${2:bool stereo}, ${3:int length})$0

snippet sample_get_data "sample_get_data ( RID sample ) const, returns RawArray"
	sample_get_data(${1:RID sample})$0

snippet sample_get_description "sample_get_description ( RID sample ) const, returns String"
	sample_get_description(${1:RID sample})$0

snippet sample_get_format "sample_get_format ( RID sample ) const, returns int"
	sample_get_format(${1:RID sample})$0

snippet sample_get_length "sample_get_length ( RID sample ) const, returns int"
	sample_get_length(${1:RID sample})$0

snippet sample_get_loop_begin "sample_get_loop_begin ( RID sample ) const, returns int"
	sample_get_loop_begin(${1:RID sample})$0

snippet sample_get_loop_end "sample_get_loop_end ( RID sample ) const, returns int"
	sample_get_loop_end(${1:RID sample})$0

snippet sample_get_loop_format "sample_get_loop_format ( RID sample ) const, returns int"
	sample_get_loop_format(${1:RID sample})$0

snippet sample_get_mix_rate "sample_get_mix_rate ( RID sample ) const, returns int"
	sample_get_mix_rate(${1:RID sample})$0

snippet sample_is_stereo "sample_is_stereo ( RID sample ) const, returns bool"
	sample_is_stereo(${1:RID sample})$0

snippet sample_set_data "sample_set_data ( RID sample, RawArray data ), returns void"
	sample_set_data(${1:RID sample}, ${2:RawArray data})$0

snippet sample_set_description "sample_set_description ( RID sample, String description ), returns void"
	sample_set_description(${1:RID sample}, ${2:String description})$0

snippet sample_set_loop_begin "sample_set_loop_begin ( RID sample, int pos ), returns void"
	sample_set_loop_begin(${1:RID sample}, ${2:int pos})$0

snippet sample_set_loop_end "sample_set_loop_end ( RID sample, int pos ), returns void"
	sample_set_loop_end(${1:RID sample}, ${2:int pos})$0

snippet sample_set_loop_format "sample_set_loop_format ( RID sample, int loop_format ), returns void"
	sample_set_loop_format(${1:RID sample}, ${2:int loop_format})$0

snippet sample_set_mix_rate "sample_set_mix_rate ( RID sample, int mix_rate ), returns void"
	sample_set_mix_rate(${1:RID sample}, ${2:int mix_rate})$0

snippet sample_set_signed_data "sample_set_signed_data ( RID sample, RealArray data ), returns void"
	sample_set_signed_data(${1:RID sample}, ${2:RealArray data})$0

snippet set_event_voice_global_volume_scale "set_event_voice_global_volume_scale ( float scale ), returns void"
	set_event_voice_global_volume_scale(${1:float scale})$0

snippet set_fx_global_volume_scale "set_fx_global_volume_scale ( float scale ), returns void"
	set_fx_global_volume_scale(${1:float scale})$0

snippet set_stream_global_volume_scale "set_stream_global_volume_scale ( float scale ), returns void"
	set_stream_global_volume_scale(${1:float scale})$0

snippet voice_create "voice_create ( ), returns RID"
	voice_create($1)$0

snippet voice_get_chorus "voice_get_chorus ( RID voice ) const, returns float"
	voice_get_chorus(${1:RID voice})$0

snippet voice_get_filter_cutoff "voice_get_filter_cutoff ( RID voice ) const, returns float"
	voice_get_filter_cutoff(${1:RID voice})$0

snippet voice_get_filter_resonance "voice_get_filter_resonance ( RID voice ) const, returns float"
	voice_get_filter_resonance(${1:RID voice})$0

snippet voice_get_filter_type "voice_get_filter_type ( RID voice ) const, returns int"
	voice_get_filter_type(${1:RID voice})$0

snippet voice_get_mix_rate "voice_get_mix_rate ( RID voice ) const, returns int"
	voice_get_mix_rate(${1:RID voice})$0

snippet voice_get_pan "voice_get_pan ( RID voice ) const, returns float"
	voice_get_pan(${1:RID voice})$0

snippet voice_get_pan_depth "voice_get_pan_depth ( RID voice ) const, returns float"
	voice_get_pan_depth(${1:RID voice})$0

snippet voice_get_pan_height "voice_get_pan_height ( RID voice ) const, returns float"
	voice_get_pan_height(${1:RID voice})$0

snippet voice_get_reverb "voice_get_reverb ( RID voice ) const, returns float"
	voice_get_reverb(${1:RID voice})$0

snippet voice_get_reverb_type "voice_get_reverb_type ( RID voice ) const, returns int"
	voice_get_reverb_type(${1:RID voice})$0

snippet voice_get_volume "voice_get_volume ( RID voice ) const, returns float"
	voice_get_volume(${1:RID voice})$0

snippet voice_is_positional "voice_is_positional ( RID voice ) const, returns bool"
	voice_is_positional(${1:RID voice})$0

snippet voice_play "voice_play ( RID voice, RID sample ), returns void"
	voice_play(${1:RID voice}, ${2:RID sample})$0

snippet voice_set_chorus "voice_set_chorus ( RID voice, float chorus ), returns void"
	voice_set_chorus(${1:RID voice}, ${2:float chorus})$0

snippet voice_set_filter "voice_set_filter ( RID voice, int type, float cutoff, float resonance, float gain=0 ), returns void"
	voice_set_filter(${1:RID voice}, ${2:int type}, ${3:float cutoff}, ${4:float resonance}, ${5:float gain=0})$0

snippet voice_set_mix_rate "voice_set_mix_rate ( RID voice, int rate ), returns void"
	voice_set_mix_rate(${1:RID voice}, ${2:int rate})$0

snippet voice_set_pan "voice_set_pan ( RID voice, float pan, float depth=0, float height=0 ), returns void"
	voice_set_pan(${1:RID voice}, ${2:float pan}, ${3:float depth=0}, ${4:float height=0})$0

snippet voice_set_positional "voice_set_positional ( RID voice, bool enabled ), returns void"
	voice_set_positional(${1:RID voice}, ${2:bool enabled})$0

snippet voice_set_reverb "voice_set_reverb ( RID voice, int room, float reverb ), returns void"
	voice_set_reverb(${1:RID voice}, ${2:int room}, ${3:float reverb})$0

snippet voice_set_volume "voice_set_volume ( RID voice, float volume ), returns void"
	voice_set_volume(${1:RID voice}, ${2:float volume})$0

snippet voice_stop "voice_stop ( RID voice ), returns void"
	voice_stop(${1:RID voice})$0


# Class: AudioStreamPlayback
snippet get_channels "get_channels ( ) const, returns int"
	get_channels($1)$0

# trigger conflict with other class(es)
snippet get_length_AudioStreamPlayback "get_length ( ) const, returns float"
	get_length($1)$0

snippet get_loop_count "get_loop_count ( ) const, returns int"
	get_loop_count($1)$0

snippet get_minimum_buffer_size "get_minimum_buffer_size ( ) const, returns int"
	get_minimum_buffer_size($1)$0

snippet get_mix_rate "get_mix_rate ( ) const, returns int"
	get_mix_rate($1)$0

# trigger conflict with other class(es)
snippet get_pos_AudioStreamPlayback "get_pos ( ) const, returns float"
	get_pos($1)$0

# trigger conflict with other class(es)
snippet has_loop_AudioStreamPlayback "has_loop ( ) const, returns bool"
	has_loop($1)$0

# trigger conflict with other class(es)
snippet is_playing_AudioStreamPlayback "is_playing ( ) const, returns bool"
	is_playing($1)$0

# trigger conflict with other class(es)
snippet play_AudioStreamPlayback "play ( float from_pos_sec=0 ), returns void"
	play(${1:float from_pos_sec=0})$0

snippet seek_pos "seek_pos ( float pos ), returns void"
	seek_pos(${1:float pos})$0

# trigger conflict with other class(es)
snippet set_loop_AudioStreamPlayback "set_loop ( bool enabled ), returns void"
	set_loop(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet stop_AudioStreamPlayback "stop ( ), returns void"
	stop($1)$0


# Class: BackBufferCopy
snippet get_copy_mode "get_copy_mode ( ) const, returns int"
	get_copy_mode($1)$0

snippet get_rect "get_rect ( ) const, returns Rect2"
	get_rect($1)$0

snippet set_copy_mode "set_copy_mode ( int copy_mode ), returns void"
	set_copy_mode(${1:int copy_mode})$0

snippet set_rect "set_rect ( Rect2 rect ), returns void"
	set_rect(${1:Rect2 rect})$0


# Class: BakedLight
snippet add_lightmap "add_lightmap ( Texture texture, Vector2 gen_size ), returns void"
	add_lightmap(${1:Texture texture}, ${2:Vector2 gen_size})$0

snippet clear_lightmaps "clear_lightmaps ( ), returns void"
	clear_lightmaps($1)$0

snippet erase_lightmap "erase_lightmap ( int id ), returns void"
	erase_lightmap(${1:int id})$0

snippet get_ao_radius "get_ao_radius ( ) const, returns float"
	get_ao_radius($1)$0

snippet get_ao_strength "get_ao_strength ( ) const, returns float"
	get_ao_strength($1)$0

snippet get_bake_flag "get_bake_flag ( int flag ) const, returns bool"
	get_bake_flag(${1:int flag})$0

snippet get_bounces "get_bounces ( ) const, returns int"
	get_bounces($1)$0

snippet get_cell_extra_margin "get_cell_extra_margin ( ) const, returns float"
	get_cell_extra_margin($1)$0

snippet get_cell_subdivision "get_cell_subdivision ( ) const, returns int"
	get_cell_subdivision($1)$0

snippet get_edge_damp "get_edge_damp ( ) const, returns float"
	get_edge_damp($1)$0

snippet get_energy_multiplier "get_energy_multiplier ( ) const, returns float"
	get_energy_multiplier($1)$0

snippet get_format "get_format ( ) const, returns int"
	get_format($1)$0

snippet get_gamma_adjust "get_gamma_adjust ( ) const, returns float"
	get_gamma_adjust($1)$0

snippet get_initial_lattice_subdiv "get_initial_lattice_subdiv ( ) const, returns int"
	get_initial_lattice_subdiv($1)$0

snippet get_light "get_light ( ) const, returns RawArray"
	get_light($1)$0

snippet get_mode "get_mode ( ) const, returns int"
	get_mode($1)$0

snippet get_normal_damp "get_normal_damp ( ) const, returns float"
	get_normal_damp($1)$0

snippet get_octree "get_octree ( ) const, returns RawArray"
	get_octree($1)$0

snippet get_plot_size "get_plot_size ( ) const, returns float"
	get_plot_size($1)$0

snippet get_realtime_color "get_realtime_color ( ) const, returns Color"
	get_realtime_color($1)$0

snippet get_realtime_color_enabled "get_realtime_color_enabled ( ) const, returns bool"
	get_realtime_color_enabled($1)$0

snippet get_realtime_energy "get_realtime_energy ( ) const, returns float"
	get_realtime_energy($1)$0

snippet get_sampler_octree "get_sampler_octree ( ) const, returns IntArray"
	get_sampler_octree($1)$0

snippet get_saturation "get_saturation ( ) const, returns float"
	get_saturation($1)$0

snippet get_tint "get_tint ( ) const, returns float"
	get_tint($1)$0

snippet get_transfer_lightmaps_only_to_uv2 "get_transfer_lightmaps_only_to_uv2 ( ) const, returns bool"
	get_transfer_lightmaps_only_to_uv2($1)$0

snippet set_ao_radius "set_ao_radius ( float ao_radius ), returns void"
	set_ao_radius(${1:float ao_radius})$0

snippet set_ao_strength "set_ao_strength ( float ao_strength ), returns void"
	set_ao_strength(${1:float ao_strength})$0

snippet set_bake_flag "set_bake_flag ( int flag, bool enabled ), returns void"
	set_bake_flag(${1:int flag}, ${2:bool enabled})$0

snippet set_bounces "set_bounces ( int bounces ), returns void"
	set_bounces(${1:int bounces})$0

snippet set_cell_extra_margin "set_cell_extra_margin ( float cell_extra_margin ), returns void"
	set_cell_extra_margin(${1:float cell_extra_margin})$0

snippet set_cell_subdivision "set_cell_subdivision ( int cell_subdivision ), returns void"
	set_cell_subdivision(${1:int cell_subdivision})$0

snippet set_edge_damp "set_edge_damp ( float edge_damp ), returns void"
	set_edge_damp(${1:float edge_damp})$0

snippet set_energy_multiplier "set_energy_multiplier ( float energy_multiplier ), returns void"
	set_energy_multiplier(${1:float energy_multiplier})$0

snippet set_format "set_format ( int format ), returns void"
	set_format(${1:int format})$0

snippet set_gamma_adjust "set_gamma_adjust ( float gamma_adjust ), returns void"
	set_gamma_adjust(${1:float gamma_adjust})$0

snippet set_initial_lattice_subdiv "set_initial_lattice_subdiv ( int cell_subdivision ), returns void"
	set_initial_lattice_subdiv(${1:int cell_subdivision})$0

snippet set_light "set_light ( RawArray light ), returns void"
	set_light(${1:RawArray light})$0

snippet set_mode "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

snippet set_normal_damp "set_normal_damp ( float normal_damp ), returns void"
	set_normal_damp(${1:float normal_damp})$0

snippet set_octree "set_octree ( RawArray octree ), returns void"
	set_octree(${1:RawArray octree})$0

snippet set_plot_size "set_plot_size ( float plot_size ), returns void"
	set_plot_size(${1:float plot_size})$0

snippet set_realtime_color "set_realtime_color ( Color tint ), returns void"
	set_realtime_color(${1:Color tint})$0

snippet set_realtime_color_enabled "set_realtime_color_enabled ( bool enabled ), returns void"
	set_realtime_color_enabled(${1:bool enabled})$0

snippet set_realtime_energy "set_realtime_energy ( float energy ), returns void"
	set_realtime_energy(${1:float energy})$0

snippet set_sampler_octree "set_sampler_octree ( IntArray sampler_octree ), returns void"
	set_sampler_octree(${1:IntArray sampler_octree})$0

snippet set_saturation "set_saturation ( float saturation ), returns void"
	set_saturation(${1:float saturation})$0

snippet set_tint "set_tint ( float tint ), returns void"
	set_tint(${1:float tint})$0

snippet set_transfer_lightmaps_only_to_uv2 "set_transfer_lightmaps_only_to_uv2 ( bool enable ), returns void"
	set_transfer_lightmaps_only_to_uv2(${1:bool enable})$0


# Class: BakedLightInstance
snippet get_baked_light "get_baked_light ( ) const, returns Object"
	get_baked_light($1)$0

snippet get_baked_light_instance "get_baked_light_instance ( ) const, returns RID"
	get_baked_light_instance($1)$0

snippet set_baked_light "set_baked_light ( Object baked_light ), returns void"
	set_baked_light(${1:Object baked_light})$0


# Class: BakedLightSampler
snippet get_param "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

snippet get_resolution "get_resolution ( ) const, returns int"
	get_resolution($1)$0

snippet set_param "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0

snippet set_resolution "set_resolution ( int resolution ), returns void"
	set_resolution(${1:int resolution})$0


# Class: BaseButton
snippet _pressed "_pressed ( ) virtual, returns void"
	_pressed($1)$0

snippet _toggled "_toggled ( bool pressed ) virtual, returns void"
	_toggled(${1:bool pressed})$0

snippet get_click_on_press "get_click_on_press ( ) const, returns bool"
	get_click_on_press($1)$0

snippet get_draw_mode "get_draw_mode ( ) const, returns int"
	get_draw_mode($1)$0

snippet get_enabled_focus_mode "get_enabled_focus_mode ( ) const, returns int"
	get_enabled_focus_mode($1)$0

snippet get_shortcut "get_shortcut ( ) const, returns Object"
	get_shortcut($1)$0

snippet is_disabled "is_disabled ( ) const, returns bool"
	is_disabled($1)$0

snippet is_hovered "is_hovered ( ) const, returns bool"
	is_hovered($1)$0

snippet is_pressed "is_pressed ( ) const, returns bool"
	is_pressed($1)$0

snippet is_toggle_mode "is_toggle_mode ( ) const, returns bool"
	is_toggle_mode($1)$0

snippet set_click_on_press "set_click_on_press ( bool enable ), returns void"
	set_click_on_press(${1:bool enable})$0

snippet set_disabled "set_disabled ( bool disabled ), returns void"
	set_disabled(${1:bool disabled})$0

snippet set_enabled_focus_mode "set_enabled_focus_mode ( int mode ), returns void"
	set_enabled_focus_mode(${1:int mode})$0

snippet set_pressed "set_pressed ( bool pressed ), returns void"
	set_pressed(${1:bool pressed})$0

snippet set_shortcut "set_shortcut ( Object shortcut ), returns void"
	set_shortcut(${1:Object shortcut})$0

snippet set_toggle_mode "set_toggle_mode ( bool enabled ), returns void"
	set_toggle_mode(${1:bool enabled})$0


# Class: BitMap
snippet create "create ( Vector2 size ), returns void"
	create(${1:Vector2 size})$0

snippet create_from_image_alpha "create_from_image_alpha ( Image image ), returns void"
	create_from_image_alpha(${1:Image image})$0

snippet get_bit "get_bit ( Vector2 pos ) const, returns bool"
	get_bit(${1:Vector2 pos})$0

snippet get_size "get_size ( ) const, returns Vector2"
	get_size($1)$0

snippet get_true_bit_count "get_true_bit_count ( ) const, returns int"
	get_true_bit_count($1)$0

snippet set_bit "set_bit ( Vector2 pos, bool bit ), returns void"
	set_bit(${1:Vector2 pos}, ${2:bool bit})$0

snippet set_bit_rect "set_bit_rect ( Rect2 p_rect, bool bit ), returns void"
	set_bit_rect(${1:Rect2 p_rect}, ${2:bool bit})$0


# Class: BitmapFont
snippet add_char "add_char ( int character, int texture, Rect2 rect, Vector2 align=Vector2(0, 0), float advance=-1 ), returns void"
	add_char(${1:int character}, ${2:int texture}, ${3:Rect2 rect}, ${4:Vector2 align=Vector2(0}, ${5:0)}, ${6:float advance=-1})$0

snippet add_kerning_pair "add_kerning_pair ( int char_a, int char_b, int kerning ), returns void"
	add_kerning_pair(${1:int char_a}, ${2:int char_b}, ${3:int kerning})$0

snippet add_texture "add_texture ( Texture texture ), returns void"
	add_texture(${1:Texture texture})$0

# trigger conflict with other class(es)
snippet clear_BitmapFont "clear ( ), returns void"
	clear($1)$0

snippet create_from_fnt "create_from_fnt ( String path ), returns int"
	create_from_fnt(${1:String path})$0

snippet get_char_size "get_char_size ( int char, int next=0 ) const, returns Vector2"
	get_char_size(${1:int char}, ${2:int next=0})$0

snippet get_fallback "get_fallback ( ) const, returns Object"
	get_fallback($1)$0

snippet get_kerning_pair "get_kerning_pair ( int char_a, int char_b ) const, returns int"
	get_kerning_pair(${1:int char_a}, ${2:int char_b})$0

snippet get_texture "get_texture ( int idx ) const, returns Texture"
	get_texture(${1:int idx})$0

snippet get_texture_count "get_texture_count ( ) const, returns int"
	get_texture_count($1)$0

snippet set_ascent "set_ascent ( float px ), returns void"
	set_ascent(${1:float px})$0

snippet set_distance_field_hint "set_distance_field_hint ( bool enable ), returns void"
	set_distance_field_hint(${1:bool enable})$0

snippet set_fallback "set_fallback ( Object fallback ), returns void"
	set_fallback(${1:Object fallback})$0

snippet set_height "set_height ( float px ), returns void"
	set_height(${1:float px})$0


# Class: bool
# not-unique trigger detected in this class: bool; snippet commented
#snippet bool "bool ( int from ), returns bool"
#	bool(int from)$0

# not-unique trigger detected in this class: bool; snippet commented
#snippet bool "bool ( float from ), returns bool"
#	bool(float from)$0

snippet bool "bool ( String from ), returns bool"
	bool(${1:String from})$0


# Class: BoxContainer
snippet add_spacer "add_spacer ( bool begin ), returns void"
	add_spacer(${1:bool begin})$0

snippet get_alignment "get_alignment ( ) const, returns int"
	get_alignment($1)$0

snippet set_alignment "set_alignment ( int alignment ), returns void"
	set_alignment(${1:int alignment})$0


# Class: BoxShape
snippet get_extents "get_extents ( ) const, returns Vector3"
	get_extents($1)$0

snippet set_extents "set_extents ( Vector3 extents ), returns void"
	set_extents(${1:Vector3 extents})$0


# Class: Button
snippet get_button_icon "get_button_icon ( ) const, returns Texture"
	get_button_icon($1)$0

snippet get_clip_text "get_clip_text ( ) const, returns bool"
	get_clip_text($1)$0

# trigger conflict with other class(es)
snippet get_text_Button "get_text ( ) const, returns String"
	get_text($1)$0

snippet get_text_align "get_text_align ( ) const, returns int"
	get_text_align($1)$0

snippet is_flat "is_flat ( ) const, returns bool"
	is_flat($1)$0

snippet set_button_icon "set_button_icon ( Texture texture ), returns void"
	set_button_icon(${1:Texture texture})$0

snippet set_clip_text "set_clip_text ( bool enabled ), returns void"
	set_clip_text(${1:bool enabled})$0

snippet set_flat "set_flat ( bool enabled ), returns void"
	set_flat(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_text_Button "set_text ( String text ), returns void"
	set_text(${1:String text})$0

snippet set_text_align "set_text_align ( int align ), returns void"
	set_text_align(${1:int align})$0


# Class: ButtonArray
# trigger conflict with other class(es)
snippet add_button_ButtonArray "add_button ( String text ), returns void"
	add_button(${1:String text})$0

snippet add_icon_button "add_icon_button ( Texture icon, String text=”” ), returns void"
	add_icon_button(${1:Texture icon}, ${2:String text=””})$0

# trigger conflict with other class(es)
snippet clear_ButtonArray "clear ( ), returns void"
	clear($1)$0

snippet erase_button "erase_button ( int button_idx ), returns void"
	erase_button(${1:int button_idx})$0

snippet get_button_count "get_button_count ( ) const, returns int"
	get_button_count($1)$0

# trigger conflict with other class(es)
snippet get_button_icon_ButtonArray "get_button_icon ( int button_idx ) const, returns Texture"
	get_button_icon(${1:int button_idx})$0

snippet get_button_text "get_button_text ( int button_idx ) const, returns String"
	get_button_text(${1:int button_idx})$0

snippet get_hovered "get_hovered ( ) const, returns int"
	get_hovered($1)$0

snippet get_selected "get_selected ( ) const, returns int"
	get_selected($1)$0

# trigger conflict with other class(es)
snippet set_button_icon_ButtonArray "set_button_icon ( int button_idx, Texture icon ), returns void"
	set_button_icon(${1:int button_idx}, ${2:Texture icon})$0

snippet set_button_text "set_button_text ( int button_idx, String text ), returns void"
	set_button_text(${1:int button_idx}, ${2:String text})$0

snippet set_selected "set_selected ( int button_idx ), returns void"
	set_selected(${1:int button_idx})$0


# Class: ButtonGroup
snippet get_button_list "get_button_list ( ) const, returns Array"
	get_button_list($1)$0

snippet get_focused_button "get_focused_button ( ) const, returns BaseButton"
	get_focused_button($1)$0

snippet get_pressed_button "get_pressed_button ( ) const, returns BaseButton"
	get_pressed_button($1)$0

snippet get_pressed_button_index "get_pressed_button_index ( ) const, returns int"
	get_pressed_button_index($1)$0

snippet set_pressed_button "set_pressed_button ( BaseButton button ), returns void"
	set_pressed_button(${1:BaseButton button})$0



# trigger conflict with other class(es)
snippet add_lightmap_ButtonGroup "add_lightmap ( Texture texture, Vector2 gen_size ), returns void"
	add_lightmap(${1:Texture texture}, ${2:Vector2 gen_size})$0

# trigger conflict with other class(es)
snippet clear_lightmaps_ButtonGroup "clear_lightmaps ( ), returns void"
	clear_lightmaps($1)$0

# trigger conflict with other class(es)
snippet erase_lightmap_ButtonGroup "erase_lightmap ( int id ), returns void"
	erase_lightmap(${1:int id})$0

# trigger conflict with other class(es)
snippet get_ao_radius_ButtonGroup "get_ao_radius ( ) const, returns float"
	get_ao_radius($1)$0

# trigger conflict with other class(es)
snippet get_ao_strength_ButtonGroup "get_ao_strength ( ) const, returns float"
	get_ao_strength($1)$0

# trigger conflict with other class(es)
snippet get_bake_flag_ButtonGroup "get_bake_flag ( int flag ) const, returns bool"
	get_bake_flag(${1:int flag})$0

# trigger conflict with other class(es)
snippet get_bounces_ButtonGroup "get_bounces ( ) const, returns int"
	get_bounces($1)$0

# trigger conflict with other class(es)
snippet get_cell_extra_margin_ButtonGroup "get_cell_extra_margin ( ) const, returns float"
	get_cell_extra_margin($1)$0

# trigger conflict with other class(es)
snippet get_cell_subdivision_ButtonGroup "get_cell_subdivision ( ) const, returns int"
	get_cell_subdivision($1)$0

# trigger conflict with other class(es)
snippet get_edge_damp_ButtonGroup "get_edge_damp ( ) const, returns float"
	get_edge_damp($1)$0

# trigger conflict with other class(es)
snippet get_energy_multiplier_ButtonGroup "get_energy_multiplier ( ) const, returns float"
	get_energy_multiplier($1)$0

# trigger conflict with other class(es)
snippet get_format_ButtonGroup "get_format ( ) const, returns int"
	get_format($1)$0

# trigger conflict with other class(es)
snippet get_gamma_adjust_ButtonGroup "get_gamma_adjust ( ) const, returns float"
	get_gamma_adjust($1)$0

# trigger conflict with other class(es)
snippet get_initial_lattice_subdiv_ButtonGroup "get_initial_lattice_subdiv ( ) const, returns int"
	get_initial_lattice_subdiv($1)$0

# trigger conflict with other class(es)
snippet get_light_ButtonGroup "get_light ( ) const, returns RawArray"
	get_light($1)$0

# trigger conflict with other class(es)
snippet get_mode_ButtonGroup "get_mode ( ) const, returns int"
	get_mode($1)$0

# trigger conflict with other class(es)
snippet get_normal_damp_ButtonGroup "get_normal_damp ( ) const, returns float"
	get_normal_damp($1)$0

# trigger conflict with other class(es)
snippet get_octree_ButtonGroup "get_octree ( ) const, returns RawArray"
	get_octree($1)$0

# trigger conflict with other class(es)
snippet get_plot_size_ButtonGroup "get_plot_size ( ) const, returns float"
	get_plot_size($1)$0

# trigger conflict with other class(es)
snippet get_realtime_color_ButtonGroup "get_realtime_color ( ) const, returns Color"
	get_realtime_color($1)$0

# trigger conflict with other class(es)
snippet get_realtime_color_enabled_ButtonGroup "get_realtime_color_enabled ( ) const, returns bool"
	get_realtime_color_enabled($1)$0

# trigger conflict with other class(es)
snippet get_realtime_energy_ButtonGroup "get_realtime_energy ( ) const, returns float"
	get_realtime_energy($1)$0

# trigger conflict with other class(es)
snippet get_sampler_octree_ButtonGroup "get_sampler_octree ( ) const, returns IntArray"
	get_sampler_octree($1)$0

# trigger conflict with other class(es)
snippet get_saturation_ButtonGroup "get_saturation ( ) const, returns float"
	get_saturation($1)$0

# trigger conflict with other class(es)
snippet get_tint_ButtonGroup "get_tint ( ) const, returns float"
	get_tint($1)$0

# trigger conflict with other class(es)
snippet get_transfer_lightmaps_only_to_uv2_ButtonGroup "get_transfer_lightmaps_only_to_uv2 ( ) const, returns bool"
	get_transfer_lightmaps_only_to_uv2($1)$0

# trigger conflict with other class(es)
snippet set_ao_radius_ButtonGroup "set_ao_radius ( float ao_radius ), returns void"
	set_ao_radius(${1:float ao_radius})$0

# trigger conflict with other class(es)
snippet set_ao_strength_ButtonGroup "set_ao_strength ( float ao_strength ), returns void"
	set_ao_strength(${1:float ao_strength})$0

# trigger conflict with other class(es)
snippet set_bake_flag_ButtonGroup "set_bake_flag ( int flag, bool enabled ), returns void"
	set_bake_flag(${1:int flag}, ${2:bool enabled})$0

# trigger conflict with other class(es)
snippet set_bounces_ButtonGroup "set_bounces ( int bounces ), returns void"
	set_bounces(${1:int bounces})$0

# trigger conflict with other class(es)
snippet set_cell_extra_margin_ButtonGroup "set_cell_extra_margin ( float cell_extra_margin ), returns void"
	set_cell_extra_margin(${1:float cell_extra_margin})$0

# trigger conflict with other class(es)
snippet set_cell_subdivision_ButtonGroup "set_cell_subdivision ( int cell_subdivision ), returns void"
	set_cell_subdivision(${1:int cell_subdivision})$0

# trigger conflict with other class(es)
snippet set_edge_damp_ButtonGroup "set_edge_damp ( float edge_damp ), returns void"
	set_edge_damp(${1:float edge_damp})$0

# trigger conflict with other class(es)
snippet set_energy_multiplier_ButtonGroup "set_energy_multiplier ( float energy_multiplier ), returns void"
	set_energy_multiplier(${1:float energy_multiplier})$0

# trigger conflict with other class(es)
snippet set_format_ButtonGroup "set_format ( int format ), returns void"
	set_format(${1:int format})$0

# trigger conflict with other class(es)
snippet set_gamma_adjust_ButtonGroup "set_gamma_adjust ( float gamma_adjust ), returns void"
	set_gamma_adjust(${1:float gamma_adjust})$0

# trigger conflict with other class(es)
snippet set_initial_lattice_subdiv_ButtonGroup "set_initial_lattice_subdiv ( int cell_subdivision ), returns void"
	set_initial_lattice_subdiv(${1:int cell_subdivision})$0

# trigger conflict with other class(es)
snippet set_light_ButtonGroup "set_light ( RawArray light ), returns void"
	set_light(${1:RawArray light})$0

# trigger conflict with other class(es)
snippet set_mode_ButtonGroup "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_normal_damp_ButtonGroup "set_normal_damp ( float normal_damp ), returns void"
	set_normal_damp(${1:float normal_damp})$0

# trigger conflict with other class(es)
snippet set_octree_ButtonGroup "set_octree ( RawArray octree ), returns void"
	set_octree(${1:RawArray octree})$0

# trigger conflict with other class(es)
snippet set_plot_size_ButtonGroup "set_plot_size ( float plot_size ), returns void"
	set_plot_size(${1:float plot_size})$0

# trigger conflict with other class(es)
snippet set_realtime_color_ButtonGroup "set_realtime_color ( Color tint ), returns void"
	set_realtime_color(${1:Color tint})$0

# trigger conflict with other class(es)
snippet set_realtime_color_enabled_ButtonGroup "set_realtime_color_enabled ( bool enabled ), returns void"
	set_realtime_color_enabled(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_realtime_energy_ButtonGroup "set_realtime_energy ( float energy ), returns void"
	set_realtime_energy(${1:float energy})$0

# trigger conflict with other class(es)
snippet set_sampler_octree_ButtonGroup "set_sampler_octree ( IntArray sampler_octree ), returns void"
	set_sampler_octree(${1:IntArray sampler_octree})$0

# trigger conflict with other class(es)
snippet set_saturation_ButtonGroup "set_saturation ( float saturation ), returns void"
	set_saturation(${1:float saturation})$0

# trigger conflict with other class(es)
snippet set_tint_ButtonGroup "set_tint ( float tint ), returns void"
	set_tint(${1:float tint})$0

# trigger conflict with other class(es)
snippet set_transfer_lightmaps_only_to_uv2_ButtonGroup "set_transfer_lightmaps_only_to_uv2 ( bool enable ), returns void"
	set_transfer_lightmaps_only_to_uv2(${1:bool enable})$0


# Class: Camera
snippet clear_current "clear_current ( ), returns void"
	clear_current($1)$0

snippet get_camera_transform "get_camera_transform ( ) const, returns Transform"
	get_camera_transform($1)$0

snippet get_environment "get_environment ( ) const, returns Environment"
	get_environment($1)$0

snippet get_fov "get_fov ( ) const, returns float"
	get_fov($1)$0

snippet get_keep_aspect_mode "get_keep_aspect_mode ( ) const, returns int"
	get_keep_aspect_mode($1)$0

snippet get_projection "get_projection ( ) const, returns int"
	get_projection($1)$0

# trigger conflict with other class(es)
snippet get_size_Camera "get_size ( ) const, returns float"
	get_size($1)$0

snippet get_visible_layers "get_visible_layers ( ) const, returns int"
	get_visible_layers($1)$0

snippet get_zfar "get_zfar ( ) const, returns float"
	get_zfar($1)$0

snippet get_znear "get_znear ( ) const, returns float"
	get_znear($1)$0

snippet is_current "is_current ( ) const, returns bool"
	is_current($1)$0

snippet is_position_behind "is_position_behind ( Vector3 world_point ) const, returns bool"
	is_position_behind(${1:Vector3 world_point})$0

snippet make_current "make_current ( ), returns void"
	make_current($1)$0

snippet project_local_ray_normal "project_local_ray_normal ( Vector2 screen_point ) const, returns Vector3"
	project_local_ray_normal(${1:Vector2 screen_point})$0

snippet project_position "project_position ( Vector2 screen_point ) const, returns Vector3"
	project_position(${1:Vector2 screen_point})$0

snippet project_ray_normal "project_ray_normal ( Vector2 screen_point ) const, returns Vector3"
	project_ray_normal(${1:Vector2 screen_point})$0

snippet project_ray_origin "project_ray_origin ( Vector2 screen_point ) const, returns Vector3"
	project_ray_origin(${1:Vector2 screen_point})$0

snippet set_environment "set_environment ( Environment env ), returns void"
	set_environment(${1:Environment env})$0

snippet set_keep_aspect_mode "set_keep_aspect_mode ( int mode ), returns void"
	set_keep_aspect_mode(${1:int mode})$0

snippet set_orthogonal "set_orthogonal ( float size, float z_near, float z_far ), returns void"
	set_orthogonal(${1:float size}, ${2:float z_near}, ${3:float z_far})$0

snippet set_perspective "set_perspective ( float fov, float z_near, float z_far ), returns void"
	set_perspective(${1:float fov}, ${2:float z_near}, ${3:float z_far})$0

snippet set_visible_layers "set_visible_layers ( int mask ), returns void"
	set_visible_layers(${1:int mask})$0

snippet unproject_position "unproject_position ( Vector3 world_point ) const, returns Vector2"
	unproject_position(${1:Vector3 world_point})$0


# Class: Camera2D
snippet align "align ( ), returns void"
	align($1)$0

# trigger conflict with other class(es)
snippet clear_current_Camera2D "clear_current ( ), returns void"
	clear_current($1)$0

snippet force_update_scroll "force_update_scroll ( ), returns void"
	force_update_scroll($1)$0

snippet get_anchor_mode "get_anchor_mode ( ) const, returns int"
	get_anchor_mode($1)$0

snippet get_camera_pos "get_camera_pos ( ) const, returns Vector2"
	get_camera_pos($1)$0

snippet get_camera_screen_center "get_camera_screen_center ( ) const, returns Vector2"
	get_camera_screen_center($1)$0

snippet get_drag_margin "get_drag_margin ( int margin ) const, returns float"
	get_drag_margin(${1:int margin})$0

snippet get_follow_smoothing "get_follow_smoothing ( ) const, returns float"
	get_follow_smoothing($1)$0

snippet get_h_offset "get_h_offset ( ) const, returns float"
	get_h_offset($1)$0

snippet get_limit "get_limit ( int margin ) const, returns int"
	get_limit(${1:int margin})$0

# trigger conflict with other class(es)
snippet get_offset_Camera2D "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

snippet get_v_offset "get_v_offset ( ) const, returns float"
	get_v_offset($1)$0

snippet get_zoom "get_zoom ( ) const, returns Vector2"
	get_zoom($1)$0

# trigger conflict with other class(es)
snippet is_current_Camera2D "is_current ( ) const, returns bool"
	is_current($1)$0

snippet is_follow_smoothing_enabled "is_follow_smoothing_enabled ( ) const, returns bool"
	is_follow_smoothing_enabled($1)$0

snippet is_h_drag_enabled "is_h_drag_enabled ( ) const, returns bool"
	is_h_drag_enabled($1)$0

snippet is_rotating "is_rotating ( ) const, returns bool"
	is_rotating($1)$0

snippet is_v_drag_enabled "is_v_drag_enabled ( ) const, returns bool"
	is_v_drag_enabled($1)$0

# trigger conflict with other class(es)
snippet make_current_Camera2D "make_current ( ), returns void"
	make_current($1)$0

snippet reset_smoothing "reset_smoothing ( ), returns void"
	reset_smoothing($1)$0

snippet set_anchor_mode "set_anchor_mode ( int anchor_mode ), returns void"
	set_anchor_mode(${1:int anchor_mode})$0

snippet set_drag_margin "set_drag_margin ( int margin, float drag_margin ), returns void"
	set_drag_margin(${1:int margin}, ${2:float drag_margin})$0

snippet set_enable_follow_smoothing "set_enable_follow_smoothing ( bool follow_smoothing ), returns void"
	set_enable_follow_smoothing(${1:bool follow_smoothing})$0

snippet set_follow_smoothing "set_follow_smoothing ( float follow_smoothing ), returns void"
	set_follow_smoothing(${1:float follow_smoothing})$0

snippet set_h_drag_enabled "set_h_drag_enabled ( bool enabled ), returns void"
	set_h_drag_enabled(${1:bool enabled})$0

snippet set_h_offset "set_h_offset ( float ofs ), returns void"
	set_h_offset(${1:float ofs})$0

snippet set_limit "set_limit ( int margin, int limit ), returns void"
	set_limit(${1:int margin}, ${2:int limit})$0

# trigger conflict with other class(es)
snippet set_offset_Camera2D "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

snippet set_rotating "set_rotating ( bool rotating ), returns void"
	set_rotating(${1:bool rotating})$0

snippet set_v_drag_enabled "set_v_drag_enabled ( bool enabled ), returns void"
	set_v_drag_enabled(${1:bool enabled})$0

snippet set_v_offset "set_v_offset ( float ofs ), returns void"
	set_v_offset(${1:float ofs})$0

snippet set_zoom "set_zoom ( Vector2 zoom ), returns void"
	set_zoom(${1:Vector2 zoom})$0


# Class: CanvasItem
snippet _draw "_draw ( ) virtual, returns void"
	_draw($1)$0

snippet draw_char "draw_char ( Font font, Vector2 pos, String char, String next, Color modulate=Color(1,1,1,1) ), returns float"
	draw_char(${1:Font font}, ${2:Vector2 pos}, ${3:String char}, ${4:String next}, ${5:Color modulate=Color(1},1,1,1))$0

snippet draw_circle "draw_circle ( Vector2 pos, float radius, Color color ), returns void"
	draw_circle(${1:Vector2 pos}, ${2:float radius}, ${3:Color color})$0

snippet draw_colored_polygon "draw_colored_polygon ( Vector2Array points, Color color, Vector2Array uvs=Vector2Array([]), Texture texture=NULL ), returns void"
	draw_colored_polygon(${1:Vector2Array points}, ${2:Color color}, ${3:Vector2Array uvs=Vector2Array([])}, ${4:Texture texture=NULL})$0

snippet draw_line "draw_line ( Vector2 from, Vector2 to, Color color, float width=1 ), returns void"
	draw_line(${1:Vector2 from}, ${2:Vector2 to}, ${3:Color color}, ${4:float width=1})$0

snippet draw_polygon "draw_polygon ( Vector2Array points, ColorArray colors, Vector2Array uvs=Vector2Array([]), Texture texture=NULL ), returns void"
	draw_polygon(${1:Vector2Array points}, ${2:ColorArray colors}, ${3:Vector2Array uvs=Vector2Array([])}, ${4:Texture texture=NULL})$0

snippet draw_primitive "draw_primitive ( Vector2Array points, ColorArray colors, Vector2Array uvs, Texture texture=NULL, float width=1 ), returns void"
	draw_primitive(${1:Vector2Array points}, ${2:ColorArray colors}, ${3:Vector2Array uvs}, ${4:Texture texture=NULL}, ${5:float width=1})$0

snippet draw_rect "draw_rect ( Rect2 rect, Color color ), returns void"
	draw_rect(${1:Rect2 rect}, ${2:Color color})$0

snippet draw_set_transform "draw_set_transform ( Vector2 pos, float rot, Vector2 scale ), returns void"
	draw_set_transform(${1:Vector2 pos}, ${2:float rot}, ${3:Vector2 scale})$0

snippet draw_set_transform_matrix "draw_set_transform_matrix ( Matrix32 xform ), returns void"
	draw_set_transform_matrix(${1:Matrix32 xform})$0

snippet draw_string "draw_string ( Font font, Vector2 pos, String text, Color modulate=Color(1,1,1,1), int clip_w=-1 ), returns void"
	draw_string(${1:Font font}, ${2:Vector2 pos}, ${3:String text}, ${4:Color modulate=Color(1},1,1,1), ${5:int clip_w=-1})$0

snippet draw_style_box "draw_style_box ( StyleBox style_box, Rect2 rect ), returns void"
	draw_style_box(${1:StyleBox style_box}, ${2:Rect2 rect})$0

snippet draw_texture "draw_texture ( Texture texture, Vector2 pos, Color modulate=Color(1,1,1,1) ), returns void"
	draw_texture(${1:Texture texture}, ${2:Vector2 pos}, ${3:Color modulate=Color(1},1,1,1))$0

snippet draw_texture_rect "draw_texture_rect ( Texture texture, Rect2 rect, bool tile, Color modulate=Color(1,1,1,1), bool transpose=false ), returns void"
	draw_texture_rect(${1:Texture texture}, ${2:Rect2 rect}, ${3:bool tile}, ${4:Color modulate=Color(1},1,1,1), ${5:bool transpose=false})$0

snippet draw_texture_rect_region "draw_texture_rect_region ( Texture texture, Rect2 rect, Rect2 src_rect, Color modulate=Color(1,1,1,1), bool transpose=false ), returns void"
	draw_texture_rect_region(${1:Texture texture}, ${2:Rect2 rect}, ${3:Rect2 src_rect}, ${4:Color modulate=Color(1},1,1,1), ${5:bool transpose=false})$0

snippet edit_get_state "edit_get_state ( ) const, returns Variant"
	edit_get_state($1)$0

snippet edit_rotate "edit_rotate ( float degrees ), returns void"
	edit_rotate(${1:float degrees})$0

snippet edit_set_rect "edit_set_rect ( Rect2 rect ), returns void"
	edit_set_rect(${1:Rect2 rect})$0

snippet edit_set_state "edit_set_state ( Variant state ), returns void"
	edit_set_state(${1:Variant state})$0

snippet get_blend_mode "get_blend_mode ( ) const, returns int"
	get_blend_mode($1)$0

snippet get_canvas "get_canvas ( ) const, returns RID"
	get_canvas($1)$0

snippet get_canvas_item "get_canvas_item ( ) const, returns RID"
	get_canvas_item($1)$0

snippet get_canvas_transform "get_canvas_transform ( ) const, returns Matrix32"
	get_canvas_transform($1)$0

snippet get_global_mouse_pos "get_global_mouse_pos ( ) const, returns Vector2"
	get_global_mouse_pos($1)$0

snippet get_global_transform "get_global_transform ( ) const, returns Matrix32"
	get_global_transform($1)$0

snippet get_global_transform_with_canvas "get_global_transform_with_canvas ( ) const, returns Matrix32"
	get_global_transform_with_canvas($1)$0

snippet get_item_and_children_rect "get_item_and_children_rect ( ) const, returns Rect2"
	get_item_and_children_rect($1)$0

snippet get_item_rect "get_item_rect ( ) const, returns Rect2"
	get_item_rect($1)$0

snippet get_light_mask "get_light_mask ( ) const, returns int"
	get_light_mask($1)$0

snippet get_local_mouse_pos "get_local_mouse_pos ( ) const, returns Vector2"
	get_local_mouse_pos($1)$0

snippet get_material "get_material ( ) const, returns CanvasItemMaterial"
	get_material($1)$0

snippet get_opacity "get_opacity ( ) const, returns float"
	get_opacity($1)$0

snippet get_self_opacity "get_self_opacity ( ) const, returns float"
	get_self_opacity($1)$0

snippet get_transform "get_transform ( ) const, returns Matrix32"
	get_transform($1)$0

snippet get_use_parent_material "get_use_parent_material ( ) const, returns bool"
	get_use_parent_material($1)$0

snippet get_viewport_rect "get_viewport_rect ( ) const, returns Rect2"
	get_viewport_rect($1)$0

snippet get_viewport_transform "get_viewport_transform ( ) const, returns Matrix32"
	get_viewport_transform($1)$0

snippet get_world_2d "get_world_2d ( ) const, returns Object"
	get_world_2d($1)$0

snippet hide "hide ( ), returns void"
	hide($1)$0

snippet is_draw_behind_parent_enabled "is_draw_behind_parent_enabled ( ) const, returns bool"
	is_draw_behind_parent_enabled($1)$0

snippet is_hidden "is_hidden ( ) const, returns bool"
	is_hidden($1)$0

snippet is_set_as_toplevel "is_set_as_toplevel ( ) const, returns bool"
	is_set_as_toplevel($1)$0

snippet is_visible "is_visible ( ) const, returns bool"
	is_visible($1)$0

snippet make_canvas_pos_local "make_canvas_pos_local ( Vector2 screen_point ) const, returns Vector2"
	make_canvas_pos_local(${1:Vector2 screen_point})$0

snippet make_input_local "make_input_local ( InputEvent event ) const, returns InputEvent"
	make_input_local(${1:InputEvent event})$0

snippet set_as_toplevel "set_as_toplevel ( bool enable ), returns void"
	set_as_toplevel(${1:bool enable})$0

snippet set_blend_mode "set_blend_mode ( int blend_mode ), returns void"
	set_blend_mode(${1:int blend_mode})$0

snippet set_draw_behind_parent "set_draw_behind_parent ( bool enable ), returns void"
	set_draw_behind_parent(${1:bool enable})$0

snippet set_hidden "set_hidden ( bool hidden ), returns void"
	set_hidden(${1:bool hidden})$0

snippet set_light_mask "set_light_mask ( int light_mask ), returns void"
	set_light_mask(${1:int light_mask})$0

snippet set_material "set_material ( CanvasItemMaterial material ), returns void"
	set_material(${1:CanvasItemMaterial material})$0

snippet set_opacity "set_opacity ( float opacity ), returns void"
	set_opacity(${1:float opacity})$0

snippet set_self_opacity "set_self_opacity ( float self_opacity ), returns void"
	set_self_opacity(${1:float self_opacity})$0

snippet set_use_parent_material "set_use_parent_material ( bool enable ), returns void"
	set_use_parent_material(${1:bool enable})$0

snippet show "show ( ), returns void"
	show($1)$0

snippet update "update ( ), returns void"
	update($1)$0


# Class: CanvasItemMaterial
snippet get_shader "get_shader ( ) const, returns Shader"
	get_shader($1)$0

snippet get_shader_param "get_shader_param ( String param ) const, returns void"
	get_shader_param(${1:String param})$0

snippet get_shading_mode "get_shading_mode ( ) const, returns int"
	get_shading_mode($1)$0

snippet set_shader "set_shader ( Shader shader ), returns void"
	set_shader(${1:Shader shader})$0

snippet set_shader_param "set_shader_param ( String param, Variant value ), returns void"
	set_shader_param(${1:String param}, ${2:Variant value})$0

snippet set_shading_mode "set_shading_mode ( int mode ), returns void"
	set_shading_mode(${1:int mode})$0


# Class: CanvasLayer
snippet get_layer "get_layer ( ) const, returns int"
	get_layer($1)$0

# trigger conflict with other class(es)
snippet get_offset_CanvasLayer "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

snippet get_rotation "get_rotation ( ) const, returns float"
	get_rotation($1)$0

snippet get_rotationd "get_rotationd ( ) const, returns float"
	get_rotationd($1)$0

snippet get_scale "get_scale ( ) const, returns Vector2"
	get_scale($1)$0

# trigger conflict with other class(es)
snippet get_transform_CanvasLayer "get_transform ( ) const, returns Matrix32"
	get_transform($1)$0

snippet get_viewport "get_viewport ( ) const, returns RID"
	get_viewport($1)$0

# trigger conflict with other class(es)
snippet get_world_2d_CanvasLayer "get_world_2d ( ) const, returns World2D"
	get_world_2d($1)$0

snippet set_layer "set_layer ( int layer ), returns void"
	set_layer(${1:int layer})$0

# trigger conflict with other class(es)
snippet set_offset_CanvasLayer "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

snippet set_rotation "set_rotation ( float radians ), returns void"
	set_rotation(${1:float radians})$0

snippet set_rotationd "set_rotationd ( float degrees ), returns void"
	set_rotationd(${1:float degrees})$0

snippet set_scale "set_scale ( Vector2 scale ), returns void"
	set_scale(${1:Vector2 scale})$0

snippet set_transform "set_transform ( Matrix32 transform ), returns void"
	set_transform(${1:Matrix32 transform})$0


# Class: CanvasModulate
snippet get_color "get_color ( ) const, returns Color"
	get_color($1)$0

snippet set_color "set_color ( Color color ), returns void"
	set_color(${1:Color color})$0


# Class: CapsuleShape
snippet get_height "get_height ( ) const, returns float"
	get_height($1)$0

snippet get_radius "get_radius ( ) const, returns float"
	get_radius($1)$0

# trigger conflict with other class(es)
snippet set_height_CapsuleShape "set_height ( float height ), returns void"
	set_height(${1:float height})$0

snippet set_radius "set_radius ( float radius ), returns void"
	set_radius(${1:float radius})$0


# Class: CapsuleShape2D
# trigger conflict with other class(es)
snippet get_height_CapsuleShape2D "get_height ( ) const, returns float"
	get_height($1)$0

# trigger conflict with other class(es)
snippet get_radius_CapsuleShape2D "get_radius ( ) const, returns float"
	get_radius($1)$0

# trigger conflict with other class(es)
snippet set_height_CapsuleShape2D "set_height ( float height ), returns void"
	set_height(${1:float height})$0

# trigger conflict with other class(es)
snippet set_radius_CapsuleShape2D "set_radius ( float radius ), returns void"
	set_radius(${1:float radius})$0


# Class: CenterContainer
snippet is_using_top_left "is_using_top_left ( ) const, returns bool"
	is_using_top_left($1)$0

snippet set_use_top_left "set_use_top_left ( bool enable ), returns void"
	set_use_top_left(${1:bool enable})$0


# Class: CircleShape2D
# trigger conflict with other class(es)
snippet get_radius_CircleShape2D "get_radius ( ) const, returns float"
	get_radius($1)$0

# trigger conflict with other class(es)
snippet set_radius_CircleShape2D "set_radius ( float radius ), returns void"
	set_radius(${1:float radius})$0


# Class: CollisionObject
snippet _input_event "_input_event ( Object camera, InputEvent event, Vector3 click_pos, Vector3 click_normal, int shape_idx ) virtual, returns void"
	_input_event(${1:Object camera}, ${2:InputEvent event}, ${3:Vector3 click_pos}, ${4:Vector3 click_normal}, ${5:int shape_idx})$0

snippet add_shape "add_shape ( Shape shape, Transform transform=Transform() ), returns void"
	add_shape(${1:Shape shape}, ${2:Transform transform=Transform()})$0

snippet clear_shapes "clear_shapes ( ), returns void"
	clear_shapes($1)$0

snippet get_capture_input_on_drag "get_capture_input_on_drag ( ) const, returns bool"
	get_capture_input_on_drag($1)$0

snippet get_rid "get_rid ( ) const, returns RID"
	get_rid($1)$0

snippet get_shape "get_shape ( int shape_idx ) const, returns Shape"
	get_shape(${1:int shape_idx})$0

snippet get_shape_count "get_shape_count ( ) const, returns int"
	get_shape_count($1)$0

snippet get_shape_transform "get_shape_transform ( int shape_idx ) const, returns Transform"
	get_shape_transform(${1:int shape_idx})$0

snippet is_ray_pickable "is_ray_pickable ( ) const, returns bool"
	is_ray_pickable($1)$0

snippet is_shape_set_as_trigger "is_shape_set_as_trigger ( int shape_idx ) const, returns bool"
	is_shape_set_as_trigger(${1:int shape_idx})$0

snippet remove_shape "remove_shape ( int shape_idx ), returns void"
	remove_shape(${1:int shape_idx})$0

snippet set_capture_input_on_drag "set_capture_input_on_drag ( bool enable ), returns void"
	set_capture_input_on_drag(${1:bool enable})$0

snippet set_ray_pickable "set_ray_pickable ( bool ray_pickable ), returns void"
	set_ray_pickable(${1:bool ray_pickable})$0

snippet set_shape "set_shape ( int shape_idx, Shape shape ), returns void"
	set_shape(${1:int shape_idx}, ${2:Shape shape})$0

snippet set_shape_as_trigger "set_shape_as_trigger ( int shape_idx, bool enable ), returns void"
	set_shape_as_trigger(${1:int shape_idx}, ${2:bool enable})$0

snippet set_shape_transform "set_shape_transform ( int shape_idx, Transform transform ), returns void"
	set_shape_transform(${1:int shape_idx}, ${2:Transform transform})$0


# Class: CollisionObject2D
# trigger conflict with other class(es)
snippet _input_event_CollisionObject2D "_input_event ( Object viewport, InputEvent event, int shape_idx ) virtual, returns void"
	_input_event(${1:Object viewport}, ${2:InputEvent event}, ${3:int shape_idx})$0

# trigger conflict with other class(es)
snippet add_shape_CollisionObject2D "add_shape ( Shape2D shape, Matrix32 transform=((1, 0), (0, 1), (0, 0)) ), returns void"
	add_shape(${1:Shape2D shape}, ${2:Matrix32 transform=((1}, ${3:0)}, ${4:(0}, ${5:1)}, ${6:(0}, ${7:0))})$0

# trigger conflict with other class(es)
snippet clear_shapes_CollisionObject2D "clear_shapes ( ), returns void"
	clear_shapes($1)$0

# trigger conflict with other class(es)
snippet get_rid_CollisionObject2D "get_rid ( ) const, returns RID"
	get_rid($1)$0

# trigger conflict with other class(es)
snippet get_shape_CollisionObject2D "get_shape ( int shape_idx ) const, returns Shape2D"
	get_shape(${1:int shape_idx})$0

# trigger conflict with other class(es)
snippet get_shape_count_CollisionObject2D "get_shape_count ( ) const, returns int"
	get_shape_count($1)$0

# trigger conflict with other class(es)
snippet get_shape_transform_CollisionObject2D "get_shape_transform ( int shape_idx ) const, returns Matrix32"
	get_shape_transform(${1:int shape_idx})$0

snippet is_pickable "is_pickable ( ) const, returns bool"
	is_pickable($1)$0

# trigger conflict with other class(es)
snippet is_shape_set_as_trigger_CollisionObject2D "is_shape_set_as_trigger ( int shape_idx ) const, returns bool"
	is_shape_set_as_trigger(${1:int shape_idx})$0

# trigger conflict with other class(es)
snippet remove_shape_CollisionObject2D "remove_shape ( int shape_idx ), returns void"
	remove_shape(${1:int shape_idx})$0

snippet set_pickable "set_pickable ( bool enabled ), returns void"
	set_pickable(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_shape_CollisionObject2D "set_shape ( int shape_idx, Shape shape ), returns void"
	set_shape(${1:int shape_idx}, ${2:Shape shape})$0

# trigger conflict with other class(es)
snippet set_shape_as_trigger_CollisionObject2D "set_shape_as_trigger ( int shape_idx, bool enable ), returns void"
	set_shape_as_trigger(${1:int shape_idx}, ${2:bool enable})$0

# trigger conflict with other class(es)
snippet set_shape_transform_CollisionObject2D "set_shape_transform ( int shape_idx, Matrix32 transform ), returns void"
	set_shape_transform(${1:int shape_idx}, ${2:Matrix32 transform})$0


# Class: CollisionPolygon
snippet get_build_mode "get_build_mode ( ) const, returns int"
	get_build_mode($1)$0

snippet get_collision_object_first_shape "get_collision_object_first_shape ( ) const, returns int"
	get_collision_object_first_shape($1)$0

snippet get_collision_object_last_shape "get_collision_object_last_shape ( ) const, returns int"
	get_collision_object_last_shape($1)$0

snippet get_depth "get_depth ( ) const, returns float"
	get_depth($1)$0

snippet get_polygon "get_polygon ( ) const, returns Vector2Array"
	get_polygon($1)$0

snippet set_build_mode "set_build_mode ( int build_mode ), returns void"
	set_build_mode(${1:int build_mode})$0

snippet set_depth "set_depth ( float depth ), returns void"
	set_depth(${1:float depth})$0

snippet set_polygon "set_polygon ( Vector2Array polygon ), returns void"
	set_polygon(${1:Vector2Array polygon})$0


# Class: CollisionPolygon2D
# trigger conflict with other class(es)
snippet get_build_mode_CollisionPolygon2D "get_build_mode ( ) const, returns int"
	get_build_mode($1)$0

# trigger conflict with other class(es)
snippet get_collision_object_first_shape_CollisionPolygon2D "get_collision_object_first_shape ( ) const, returns int"
	get_collision_object_first_shape($1)$0

# trigger conflict with other class(es)
snippet get_collision_object_last_shape_CollisionPolygon2D "get_collision_object_last_shape ( ) const, returns int"
	get_collision_object_last_shape($1)$0

# trigger conflict with other class(es)
snippet get_polygon_CollisionPolygon2D "get_polygon ( ) const, returns Vector2Array"
	get_polygon($1)$0

snippet is_trigger "is_trigger ( ) const, returns bool"
	is_trigger($1)$0

# trigger conflict with other class(es)
snippet set_build_mode_CollisionPolygon2D "set_build_mode ( int build_mode ), returns void"
	set_build_mode(${1:int build_mode})$0

# trigger conflict with other class(es)
snippet set_polygon_CollisionPolygon2D "set_polygon ( Vector2Array polygon ), returns void"
	set_polygon(${1:Vector2Array polygon})$0

snippet set_trigger "set_trigger ( bool trigger ), returns void"
	set_trigger(${1:bool trigger})$0


# Class: CollisionShape
snippet get_collision_object_shape_index "get_collision_object_shape_index ( ) const, returns int"
	get_collision_object_shape_index($1)$0

# trigger conflict with other class(es)
snippet get_shape_CollisionShape "get_shape ( ) const, returns Object"
	get_shape($1)$0

# trigger conflict with other class(es)
snippet is_trigger_CollisionShape "is_trigger ( ) const, returns bool"
	is_trigger($1)$0

snippet make_convex_from_brothers "make_convex_from_brothers ( ), returns void"
	make_convex_from_brothers($1)$0

snippet resource_changed "resource_changed ( Object resource ), returns void"
	resource_changed(${1:Object resource})$0

# trigger conflict with other class(es)
snippet set_shape_CollisionShape "set_shape ( Object shape ), returns void"
	set_shape(${1:Object shape})$0

# trigger conflict with other class(es)
snippet set_trigger_CollisionShape "set_trigger ( bool enable ), returns void"
	set_trigger(${1:bool enable})$0


# Class: CollisionShape2D
# trigger conflict with other class(es)
snippet get_collision_object_shape_index_CollisionShape2D "get_collision_object_shape_index ( ) const, returns int"
	get_collision_object_shape_index($1)$0

# trigger conflict with other class(es)
snippet get_shape_CollisionShape2D "get_shape ( ) const, returns Object"
	get_shape($1)$0

# trigger conflict with other class(es)
snippet is_trigger_CollisionShape2D "is_trigger ( ) const, returns bool"
	is_trigger($1)$0

# trigger conflict with other class(es)
snippet set_shape_CollisionShape2D "set_shape ( Object shape ), returns void"
	set_shape(${1:Object shape})$0

# trigger conflict with other class(es)
snippet set_trigger_CollisionShape2D "set_trigger ( bool enable ), returns void"
	set_trigger(${1:bool enable})$0


# Class: Color
# not-unique trigger detected in this class: Color; snippet commented
#snippet Color "Color ( float r, float g, float b, float a ), returns Color"
#	Color(float r, float g, float b, float a)$0

# not-unique trigger detected in this class: Color; snippet commented
#snippet Color "Color ( float r, float g, float b ), returns Color"
#	Color(float r, float g, float b)$0

# not-unique trigger detected in this class: Color; snippet commented
#snippet Color "Color ( int from ), returns Color"
#	Color(int from)$0

snippet Color "Color ( String from ), returns Color"
	Color(${1:String from})$0

snippet blend "blend ( Color over ), returns Color"
	blend(${1:Color over})$0

snippet contrasted "contrasted ( ), returns Color"
	contrasted($1)$0

snippet gray "gray ( ), returns float"
	gray($1)$0

snippet inverted "inverted ( ), returns Color"
	inverted($1)$0

snippet linear_interpolate "linear_interpolate ( Color b, float t ), returns Color"
	linear_interpolate(${1:Color b}, ${2:float t})$0

snippet to_32 "to_32 ( ), returns int"
	to_32($1)$0

snippet to_ARGB32 "to_ARGB32 ( ), returns int"
	to_ARGB32($1)$0

snippet to_html "to_html ( bool with_alpha=True ), returns String"
	to_html(${1:bool with_alpha=True})$0


# Class: ColorArray
snippet ColorArray "ColorArray ( Array from ), returns ColorArray"
	ColorArray(${1:Array from})$0

# trigger conflict with other class(es)
snippet append_ColorArray "append ( Color color ), returns void"
	append(${1:Color color})$0

snippet append_array "append_array ( ColorArray array ), returns void"
	append_array(${1:ColorArray array})$0

# trigger conflict with other class(es)
snippet insert_ColorArray "insert ( int idx, Color color ), returns int"
	insert(${1:int idx}, ${2:Color color})$0

# trigger conflict with other class(es)
snippet invert_ColorArray "invert ( ), returns void"
	invert($1)$0

# trigger conflict with other class(es)
snippet push_back_ColorArray "push_back ( Color color ), returns void"
	push_back(${1:Color color})$0

# trigger conflict with other class(es)
snippet remove_ColorArray "remove ( int idx ), returns void"
	remove(${1:int idx})$0

# trigger conflict with other class(es)
snippet resize_ColorArray "resize ( int idx ), returns void"
	resize(${1:int idx})$0

snippet set "set ( int idx, Color color ), returns void"
	set(${1:int idx}, ${2:Color color})$0

# trigger conflict with other class(es)
snippet size_ColorArray "size ( ), returns int"
	size($1)$0


# Class: ColorPicker
snippet add_preset "add_preset ( Color arg0 ), returns void"
	add_preset(${1:Color arg0})$0

# trigger conflict with other class(es)
snippet get_color_ColorPicker "get_color ( ) const, returns Color"
	get_color($1)$0

snippet is_editing_alpha "is_editing_alpha ( ) const, returns bool"
	is_editing_alpha($1)$0

snippet is_raw_mode "is_raw_mode ( ) const, returns bool"
	is_raw_mode($1)$0

# trigger conflict with other class(es)
snippet set_color_ColorPicker "set_color ( Color color ), returns void"
	set_color(${1:Color color})$0

snippet set_edit_alpha "set_edit_alpha ( bool show ), returns void"
	set_edit_alpha(${1:bool show})$0

snippet set_raw_mode "set_raw_mode ( bool mode ), returns void"
	set_raw_mode(${1:bool mode})$0


# Class: ColorPickerButton
# trigger conflict with other class(es)
snippet get_color_ColorPickerButton "get_color ( ) const, returns Color"
	get_color($1)$0

snippet get_picker "get_picker ( ), returns ColorPicker"
	get_picker($1)$0

# trigger conflict with other class(es)
snippet is_editing_alpha_ColorPickerButton "is_editing_alpha ( ) const, returns bool"
	is_editing_alpha($1)$0

# trigger conflict with other class(es)
snippet set_color_ColorPickerButton "set_color ( Color color ), returns void"
	set_color(${1:Color color})$0

# trigger conflict with other class(es)
snippet set_edit_alpha_ColorPickerButton "set_edit_alpha ( bool show ), returns void"
	set_edit_alpha(${1:bool show})$0


# Class: ColorRamp
snippet add_point "add_point ( float offset, Color color ), returns void"
	add_point(${1:float offset}, ${2:Color color})$0

# trigger conflict with other class(es)
snippet get_color_ColorRamp "get_color ( int point ) const, returns Color"
	get_color(${1:int point})$0

snippet get_colors "get_colors ( ) const, returns ColorArray"
	get_colors($1)$0

# trigger conflict with other class(es)
snippet get_offset_ColorRamp "get_offset ( int point ) const, returns float"
	get_offset(${1:int point})$0

snippet get_offsets "get_offsets ( ) const, returns RealArray"
	get_offsets($1)$0

snippet get_point_count "get_point_count ( ) const, returns int"
	get_point_count($1)$0

snippet interpolate "interpolate ( float offset ), returns Color"
	interpolate(${1:float offset})$0

snippet remove_point "remove_point ( int offset ), returns void"
	remove_point(${1:int offset})$0

# trigger conflict with other class(es)
snippet set_color_ColorRamp "set_color ( int point, Color color ), returns void"
	set_color(${1:int point}, ${2:Color color})$0

snippet set_colors "set_colors ( ColorArray colors ), returns void"
	set_colors(${1:ColorArray colors})$0

# trigger conflict with other class(es)
snippet set_offset_ColorRamp "set_offset ( int point, float offset ), returns void"
	set_offset(${1:int point}, ${2:float offset})$0

snippet set_offsets "set_offsets ( RealArray offsets ), returns void"
	set_offsets(${1:RealArray offsets})$0


# Class: ConcavePolygonShape
snippet get_faces "get_faces ( ) const, returns Vector3Array"
	get_faces($1)$0

snippet set_faces "set_faces ( Vector3Array faces ), returns void"
	set_faces(${1:Vector3Array faces})$0


# Class: ConcavePolygonShape2D
snippet get_segments "get_segments ( ) const, returns Vector2Array"
	get_segments($1)$0

snippet set_segments "set_segments ( Vector2Array segments ), returns void"
	set_segments(${1:Vector2Array segments})$0


# Class: ConeTwistJoint
# trigger conflict with other class(es)
snippet get_param_ConeTwistJoint "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

# trigger conflict with other class(es)
snippet set_param_ConeTwistJoint "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0


# Class: ConfigFile
snippet get_section_keys "get_section_keys ( String section ) const, returns StringArray"
	get_section_keys(${1:String section})$0

snippet get_sections "get_sections ( ) const, returns StringArray"
	get_sections($1)$0

snippet get_value "get_value ( String section, String key, Variant default=NULL ) const, returns Variant"
	get_value(${1:String section}, ${2:String key}, ${3:Variant default=NULL})$0

snippet has_section "has_section ( String section ) const, returns bool"
	has_section(${1:String section})$0

snippet has_section_key "has_section_key ( String section, String key ) const, returns bool"
	has_section_key(${1:String section}, ${2:String key})$0

# trigger conflict with other class(es)
snippet load_ConfigFile "load ( String path ), returns Error"
	load(${1:String path})$0

snippet save "save ( String path ), returns Error"
	save(${1:String path})$0

snippet set_value "set_value ( String section, String key, Variant value ), returns void"
	set_value(${1:String section}, ${2:String key}, ${3:Variant value})$0


# Class: ConfirmationDialog
snippet get_cancel "get_cancel ( ), returns Button"
	get_cancel($1)$0


# Class: Container
snippet fit_child_in_rect "fit_child_in_rect ( Control child, Rect2 rect ), returns void"
	fit_child_in_rect(${1:Control child}, ${2:Rect2 rect})$0

snippet queue_sort "queue_sort ( ), returns void"
	queue_sort($1)$0


# Class: Control
# trigger conflict with other class(es)
snippet _input_event_Control "_input_event ( InputEvent event ) virtual, returns void"
	_input_event(${1:InputEvent event})$0

snippet accept_event "accept_event ( ), returns void"
	accept_event($1)$0

snippet add_color_override "add_color_override ( String name, Color color ), returns void"
	add_color_override(${1:String name}, ${2:Color color})$0

snippet add_constant_override "add_constant_override ( String name, int constant ), returns void"
	add_constant_override(${1:String name}, ${2:int constant})$0

snippet add_font_override "add_font_override ( String name, Font font ), returns void"
	add_font_override(${1:String name}, ${2:Font font})$0

snippet add_icon_override "add_icon_override ( String name, Texture texture ), returns void"
	add_icon_override(${1:String name}, ${2:Texture texture})$0

snippet add_shader_override "add_shader_override ( String name, Shader shader ), returns void"
	add_shader_override(${1:String name}, ${2:Shader shader})$0

snippet add_style_override "add_style_override ( String name, StyleBox stylebox ), returns void"
	add_style_override(${1:String name}, ${2:StyleBox stylebox})$0

snippet can_drop_data "can_drop_data ( Vector2 pos, Variant data ) virtual, returns bool"
	can_drop_data(${1:Vector2 pos}, ${2:Variant data})$0

snippet drop_data "drop_data ( Vector2 pos, Variant data ) virtual, returns void"
	drop_data(${1:Vector2 pos}, ${2:Variant data})$0

snippet force_drag "force_drag ( Variant data, Object preview ), returns void"
	force_drag(${1:Variant data}, ${2:Object preview})$0

snippet get_anchor "get_anchor ( int margin ) const, returns int"
	get_anchor(${1:int margin})$0

snippet get_begin "get_begin ( ) const, returns Vector2"
	get_begin($1)$0

# trigger conflict with other class(es)
snippet get_color_Control "get_color ( String name, String type=”” ) const, returns Color"
	get_color(${1:String name}, ${2:String type=””})$0

snippet get_combined_minimum_size "get_combined_minimum_size ( ) const, returns Vector2"
	get_combined_minimum_size($1)$0

snippet get_constant "get_constant ( String name, String type=”” ) const, returns int"
	get_constant(${1:String name}, ${2:String type=””})$0

snippet get_cursor_shape "get_cursor_shape ( Vector2 pos=Vector2(0, 0) ) const, returns int"
	get_cursor_shape(${1:Vector2 pos=Vector2(0}, ${2:0)})$0

snippet get_custom_minimum_size "get_custom_minimum_size ( ) const, returns Vector2"
	get_custom_minimum_size($1)$0

snippet get_default_cursor_shape "get_default_cursor_shape ( ) const, returns int"
	get_default_cursor_shape($1)$0

snippet get_drag_data "get_drag_data ( Vector2 pos ) virtual, returns Object"
	get_drag_data(${1:Vector2 pos})$0

snippet get_end "get_end ( ) const, returns Vector2"
	get_end($1)$0

snippet get_focus_mode "get_focus_mode ( ) const, returns int"
	get_focus_mode($1)$0

snippet get_focus_neighbour "get_focus_neighbour ( int margin ) const, returns NodePath"
	get_focus_neighbour(${1:int margin})$0

snippet get_focus_owner "get_focus_owner ( ) const, returns Control"
	get_focus_owner($1)$0

snippet get_font "get_font ( String name, String type=”” ) const, returns Font"
	get_font(${1:String name}, ${2:String type=””})$0

snippet get_global_pos "get_global_pos ( ) const, returns Vector2"
	get_global_pos($1)$0

snippet get_global_rect "get_global_rect ( ) const, returns Rect2"
	get_global_rect($1)$0

snippet get_h_size_flags "get_h_size_flags ( ) const, returns int"
	get_h_size_flags($1)$0

snippet get_icon "get_icon ( String name, String type=”” ) const, returns Texture"
	get_icon(${1:String name}, ${2:String type=””})$0

# trigger conflict with other class(es)
snippet get_margin_Control "get_margin ( int margin ) const, returns float"
	get_margin(${1:int margin})$0

# not-unique trigger detected in this class: get_minimum_size; snippet commented
#snippet get_minimum_size "get_minimum_size ( ) const, returns Vector2"
#	get_minimum_size($1)$0

snippet get_minimum_size "get_minimum_size ( ) virtual, returns Vector2"
	get_minimum_size($1)$0

snippet get_parent_area_size "get_parent_area_size ( ) const, returns Vector2"
	get_parent_area_size($1)$0

snippet get_parent_control "get_parent_control ( ) const, returns Control"
	get_parent_control($1)$0

# trigger conflict with other class(es)
snippet get_pos_Control "get_pos ( ) const, returns Vector2"
	get_pos($1)$0

# trigger conflict with other class(es)
snippet get_rect_Control "get_rect ( ) const, returns Rect2"
	get_rect($1)$0

# trigger conflict with other class(es)
snippet get_rotation_Control "get_rotation ( ) const, returns float"
	get_rotation($1)$0

snippet get_rotation_deg "get_rotation_deg ( ) const, returns float"
	get_rotation_deg($1)$0

# trigger conflict with other class(es)
snippet get_scale_Control "get_scale ( ) const, returns Vector2"
	get_scale($1)$0

# trigger conflict with other class(es)
snippet get_size_Control "get_size ( ) const, returns Vector2"
	get_size($1)$0

snippet get_stretch_ratio "get_stretch_ratio ( ) const, returns float"
	get_stretch_ratio($1)$0

snippet get_stylebox "get_stylebox ( String name, String type=”” ) const, returns StyleBox"
	get_stylebox(${1:String name}, ${2:String type=””})$0

snippet get_theme "get_theme ( ) const, returns Theme"
	get_theme($1)$0

snippet get_tooltip "get_tooltip ( Vector2 atpos=Vector2(0, 0) ) const, returns String"
	get_tooltip(${1:Vector2 atpos=Vector2(0}, ${2:0)})$0

snippet get_v_size_flags "get_v_size_flags ( ) const, returns int"
	get_v_size_flags($1)$0

snippet grab_click_focus "grab_click_focus ( ), returns void"
	grab_click_focus($1)$0

snippet grab_focus "grab_focus ( ), returns void"
	grab_focus($1)$0

snippet has_color "has_color ( String name, String type=”” ) const, returns bool"
	has_color(${1:String name}, ${2:String type=””})$0

snippet has_color_override "has_color_override ( String name ) const, returns bool"
	has_color_override(${1:String name})$0

snippet has_constant "has_constant ( String name, String type=”” ) const, returns bool"
	has_constant(${1:String name}, ${2:String type=””})$0

snippet has_constant_override "has_constant_override ( String name ) const, returns bool"
	has_constant_override(${1:String name})$0

snippet has_focus "has_focus ( ) const, returns bool"
	has_focus($1)$0

snippet has_font "has_font ( String name, String type=”” ) const, returns bool"
	has_font(${1:String name}, ${2:String type=””})$0

snippet has_font_override "has_font_override ( String name ) const, returns bool"
	has_font_override(${1:String name})$0

snippet has_icon "has_icon ( String name, String type=”” ) const, returns bool"
	has_icon(${1:String name}, ${2:String type=””})$0

snippet has_icon_override "has_icon_override ( String name ) const, returns bool"
	has_icon_override(${1:String name})$0

snippet has_stylebox "has_stylebox ( String name, String type=”” ) const, returns bool"
	has_stylebox(${1:String name}, ${2:String type=””})$0

snippet has_stylebox_override "has_stylebox_override ( String name ) const, returns bool"
	has_stylebox_override(${1:String name})$0

snippet is_ignoring_mouse "is_ignoring_mouse ( ) const, returns bool"
	is_ignoring_mouse($1)$0

snippet is_stopping_mouse "is_stopping_mouse ( ) const, returns bool"
	is_stopping_mouse($1)$0

snippet minimum_size_changed "minimum_size_changed ( ), returns void"
	minimum_size_changed($1)$0

snippet release_focus "release_focus ( ), returns void"
	release_focus($1)$0

snippet set_anchor "set_anchor ( int margin, int anchor_mode, bool keep_margin=false ), returns void"
	set_anchor(${1:int margin}, ${2:int anchor_mode}, ${3:bool keep_margin=false})$0

snippet set_anchor_and_margin "set_anchor_and_margin ( int margin, int anchor_mode, float offset ), returns void"
	set_anchor_and_margin(${1:int margin}, ${2:int anchor_mode}, ${3:float offset})$0

snippet set_area_as_parent_rect "set_area_as_parent_rect ( int margin=0 ), returns void"
	set_area_as_parent_rect(${1:int margin=0})$0

snippet set_begin "set_begin ( Vector2 pos ), returns void"
	set_begin(${1:Vector2 pos})$0

snippet set_custom_minimum_size "set_custom_minimum_size ( Vector2 size ), returns void"
	set_custom_minimum_size(${1:Vector2 size})$0

snippet set_default_cursor_shape "set_default_cursor_shape ( int shape ), returns void"
	set_default_cursor_shape(${1:int shape})$0

snippet set_drag_forwarding "set_drag_forwarding ( Control target ), returns void"
	set_drag_forwarding(${1:Control target})$0

snippet set_drag_preview "set_drag_preview ( Control control ), returns void"
	set_drag_preview(${1:Control control})$0

snippet set_end "set_end ( Vector2 pos ), returns void"
	set_end(${1:Vector2 pos})$0

snippet set_focus_mode "set_focus_mode ( int mode ), returns void"
	set_focus_mode(${1:int mode})$0

snippet set_focus_neighbour "set_focus_neighbour ( int margin, NodePath neighbour ), returns void"
	set_focus_neighbour(${1:int margin}, ${2:NodePath neighbour})$0

snippet set_global_pos "set_global_pos ( Vector2 pos ), returns void"
	set_global_pos(${1:Vector2 pos})$0

snippet set_h_size_flags "set_h_size_flags ( int flags ), returns void"
	set_h_size_flags(${1:int flags})$0

snippet set_ignore_mouse "set_ignore_mouse ( bool ignore ), returns void"
	set_ignore_mouse(${1:bool ignore})$0

# trigger conflict with other class(es)
snippet set_margin_Control "set_margin ( int margin, float offset ), returns void"
	set_margin(${1:int margin}, ${2:float offset})$0

snippet set_pos "set_pos ( Vector2 pos ), returns void"
	set_pos(${1:Vector2 pos})$0

# trigger conflict with other class(es)
snippet set_rotation_Control "set_rotation ( float radians ), returns void"
	set_rotation(${1:float radians})$0

snippet set_rotation_deg "set_rotation_deg ( float degrees ), returns void"
	set_rotation_deg(${1:float degrees})$0

# trigger conflict with other class(es)
snippet set_scale_Control "set_scale ( Vector2 scale ), returns void"
	set_scale(${1:Vector2 scale})$0

snippet set_size "set_size ( Vector2 size ), returns void"
	set_size(${1:Vector2 size})$0

snippet set_stop_mouse "set_stop_mouse ( bool stop ), returns void"
	set_stop_mouse(${1:bool stop})$0

snippet set_stretch_ratio "set_stretch_ratio ( float ratio ), returns void"
	set_stretch_ratio(${1:float ratio})$0

snippet set_theme "set_theme ( Theme theme ), returns void"
	set_theme(${1:Theme theme})$0

snippet set_tooltip "set_tooltip ( String tooltip ), returns void"
	set_tooltip(${1:String tooltip})$0

snippet set_v_size_flags "set_v_size_flags ( int flags ), returns void"
	set_v_size_flags(${1:int flags})$0

snippet show_modal "show_modal ( bool exclusive=false ), returns void"
	show_modal(${1:bool exclusive=false})$0

snippet warp_mouse "warp_mouse ( Vector2 to_pos ), returns void"
	warp_mouse(${1:Vector2 to_pos})$0


# Class: ConvexPolygonShape
snippet get_points "get_points ( ) const, returns Vector3Array"
	get_points($1)$0

snippet set_points "set_points ( Vector3Array points ), returns void"
	set_points(${1:Vector3Array points})$0


# Class: ConvexPolygonShape2D
# trigger conflict with other class(es)
snippet get_points_ConvexPolygonShape2D "get_points ( ) const, returns Vector2Array"
	get_points($1)$0

snippet set_point_cloud "set_point_cloud ( Vector2Array point_cloud ), returns void"
	set_point_cloud(${1:Vector2Array point_cloud})$0

# trigger conflict with other class(es)
snippet set_points_ConvexPolygonShape2D "set_points ( Vector2Array points ), returns void"
	set_points(${1:Vector2Array points})$0


# Class: CubeMap
snippet get_flags "get_flags ( ) const, returns int"
	get_flags($1)$0

# trigger conflict with other class(es)
snippet get_height_CubeMap "get_height ( ) const, returns int"
	get_height($1)$0

snippet get_lossy_storage_quality "get_lossy_storage_quality ( ) const, returns float"
	get_lossy_storage_quality($1)$0

# trigger conflict with other class(es)
snippet get_rid_CubeMap "get_rid ( ) const, returns RID"
	get_rid($1)$0

snippet get_side "get_side ( int side ) const, returns Image"
	get_side(${1:int side})$0

snippet get_storage "get_storage ( ) const, returns int"
	get_storage($1)$0

snippet get_width "get_width ( ) const, returns int"
	get_width($1)$0

snippet set_flags "set_flags ( int flags ), returns void"
	set_flags(${1:int flags})$0

snippet set_lossy_storage_quality "set_lossy_storage_quality ( float quality ), returns void"
	set_lossy_storage_quality(${1:float quality})$0

snippet set_side "set_side ( int side, Image image ), returns void"
	set_side(${1:int side}, ${2:Image image})$0

snippet set_storage "set_storage ( int mode ), returns void"
	set_storage(${1:int mode})$0


# Class: Curve2D
# trigger conflict with other class(es)
snippet add_point_Curve2D "add_point ( Vector2 pos, Vector2 in=Vector2(0, 0), Vector2 out=Vector2(0, 0), int atpos=-1 ), returns void"
	add_point(${1:Vector2 pos}, ${2:Vector2 in=Vector2(0}, ${3:0)}, ${4:Vector2 out=Vector2(0}, ${5:0)}, ${6:int atpos=-1})$0

snippet get_bake_interval "get_bake_interval ( ) const, returns float"
	get_bake_interval($1)$0

snippet get_baked_length "get_baked_length ( ) const, returns float"
	get_baked_length($1)$0

snippet get_baked_points "get_baked_points ( ) const, returns Vector2Array"
	get_baked_points($1)$0

# trigger conflict with other class(es)
snippet get_point_count_Curve2D "get_point_count ( ) const, returns int"
	get_point_count($1)$0

snippet get_point_in "get_point_in ( int idx ) const, returns Vector2"
	get_point_in(${1:int idx})$0

snippet get_point_out "get_point_out ( int idx ) const, returns Vector2"
	get_point_out(${1:int idx})$0

snippet get_point_pos "get_point_pos ( int idx ) const, returns Vector2"
	get_point_pos(${1:int idx})$0

# trigger conflict with other class(es)
snippet interpolate_Curve2D "interpolate ( int idx, float t ) const, returns Vector2"
	interpolate(${1:int idx}, ${2:float t})$0

snippet interpolate_baked "interpolate_baked ( float offset, bool cubic=false ) const, returns Vector2"
	interpolate_baked(${1:float offset}, ${2:bool cubic=false})$0

snippet interpolatef "interpolatef ( float fofs ) const, returns Vector2"
	interpolatef(${1:float fofs})$0

# trigger conflict with other class(es)
snippet remove_point_Curve2D "remove_point ( int idx ), returns void"
	remove_point(${1:int idx})$0

snippet set_bake_interval "set_bake_interval ( float distance ), returns void"
	set_bake_interval(${1:float distance})$0

snippet set_point_in "set_point_in ( int idx, Vector2 pos ), returns void"
	set_point_in(${1:int idx}, ${2:Vector2 pos})$0

snippet set_point_out "set_point_out ( int idx, Vector2 pos ), returns void"
	set_point_out(${1:int idx}, ${2:Vector2 pos})$0

snippet set_point_pos "set_point_pos ( int idx, Vector2 pos ), returns void"
	set_point_pos(${1:int idx}, ${2:Vector2 pos})$0

snippet tesselate "tesselate ( int max_stages=5, float tolerance_degrees=4 ) const, returns Vector2Array"
	tesselate(${1:int max_stages=5}, ${2:float tolerance_degrees=4})$0


# Class: Curve3D
# trigger conflict with other class(es)
snippet add_point_Curve3D "add_point ( Vector3 pos, Vector3 in=Vector3(0, 0, 0), Vector3 out=Vector3(0, 0, 0), int atpos=-1 ), returns void"
	add_point(${1:Vector3 pos}, ${2:Vector3 in=Vector3(0}, ${3:0, ${4:0)}, ${5:Vector3 out=Vector3(0}, ${6:0}, ${7:0)}, int atpos=-1})$0

# trigger conflict with other class(es)
snippet get_bake_interval_Curve3D "get_bake_interval ( ) const, returns float"
	get_bake_interval($1)$0

# trigger conflict with other class(es)
snippet get_baked_length_Curve3D "get_baked_length ( ) const, returns float"
	get_baked_length($1)$0

# trigger conflict with other class(es)
snippet get_baked_points_Curve3D "get_baked_points ( ) const, returns Vector3Array"
	get_baked_points($1)$0

snippet get_baked_tilts "get_baked_tilts ( ) const, returns RealArray"
	get_baked_tilts($1)$0

# trigger conflict with other class(es)
snippet get_point_count_Curve3D "get_point_count ( ) const, returns int"
	get_point_count($1)$0

# trigger conflict with other class(es)
snippet get_point_in_Curve3D "get_point_in ( int idx ) const, returns Vector3"
	get_point_in(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_point_out_Curve3D "get_point_out ( int idx ) const, returns Vector3"
	get_point_out(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_point_pos_Curve3D "get_point_pos ( int idx ) const, returns Vector3"
	get_point_pos(${1:int idx})$0

snippet get_point_tilt "get_point_tilt ( int idx ) const, returns float"
	get_point_tilt(${1:int idx})$0

# trigger conflict with other class(es)
snippet interpolate_Curve3D "interpolate ( int idx, float t ) const, returns Vector3"
	interpolate(${1:int idx}, ${2:float t})$0

# trigger conflict with other class(es)
snippet interpolate_baked_Curve3D "interpolate_baked ( float offset, bool cubic=false ) const, returns Vector3"
	interpolate_baked(${1:float offset}, ${2:bool cubic=false})$0

# trigger conflict with other class(es)
snippet interpolatef_Curve3D "interpolatef ( float fofs ) const, returns Vector3"
	interpolatef(${1:float fofs})$0

# trigger conflict with other class(es)
snippet remove_point_Curve3D "remove_point ( int idx ), returns void"
	remove_point(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_bake_interval_Curve3D "set_bake_interval ( float distance ), returns void"
	set_bake_interval(${1:float distance})$0

# trigger conflict with other class(es)
snippet set_point_in_Curve3D "set_point_in ( int idx, Vector3 pos ), returns void"
	set_point_in(${1:int idx}, ${2:Vector3 pos})$0

# trigger conflict with other class(es)
snippet set_point_out_Curve3D "set_point_out ( int idx, Vector3 pos ), returns void"
	set_point_out(${1:int idx}, ${2:Vector3 pos})$0

# trigger conflict with other class(es)
snippet set_point_pos_Curve3D "set_point_pos ( int idx, Vector3 pos ), returns void"
	set_point_pos(${1:int idx}, ${2:Vector3 pos})$0

snippet set_point_tilt "set_point_tilt ( int idx, float tilt ), returns void"
	set_point_tilt(${1:int idx}, ${2:float tilt})$0

# trigger conflict with other class(es)
snippet tesselate_Curve3D "tesselate ( int max_stages=5, float tolerance_degrees=4 ) const, returns Vector3Array"
	tesselate(${1:int max_stages=5}, ${2:float tolerance_degrees=4})$0


# Class: DampedSpringJoint2D
snippet get_damping "get_damping ( ) const, returns float"
	get_damping($1)$0

# trigger conflict with other class(es)
snippet get_length_DampedSpringJoint2D "get_length ( ) const, returns float"
	get_length($1)$0

snippet get_rest_length "get_rest_length ( ) const, returns float"
	get_rest_length($1)$0

snippet get_stiffness "get_stiffness ( ) const, returns float"
	get_stiffness($1)$0

snippet set_damping "set_damping ( float damping ), returns void"
	set_damping(${1:float damping})$0

# trigger conflict with other class(es)
snippet set_length_DampedSpringJoint2D "set_length ( float length ), returns void"
	set_length(${1:float length})$0

snippet set_rest_length "set_rest_length ( float rest_length ), returns void"
	set_rest_length(${1:float rest_length})$0

snippet set_stiffness "set_stiffness ( float stiffness ), returns void"
	set_stiffness(${1:float stiffness})$0


# Class: Dictionary
# trigger conflict with other class(es)
snippet clear_Dictionary "clear ( ), returns void"
	clear($1)$0

# trigger conflict with other class(es)
snippet empty_Dictionary "empty ( ), returns bool"
	empty($1)$0

# trigger conflict with other class(es)
snippet erase_Dictionary "erase ( var key ), returns void"
	erase(${1:var key})$0

# trigger conflict with other class(es)
snippet has_Dictionary "has ( var key ), returns bool"
	has(${1:var key})$0

snippet has_all "has_all ( Array keys ), returns bool"
	has_all(${1:Array keys})$0

# trigger conflict with other class(es)
snippet hash_Dictionary "hash ( ), returns int"
	hash($1)$0

snippet keys "keys ( ), returns Array"
	keys($1)$0

snippet parse_json "parse_json ( String json ), returns int"
	parse_json(${1:String json})$0

# trigger conflict with other class(es)
snippet size_Dictionary "size ( ), returns int"
	size($1)$0

snippet to_json "to_json ( ), returns String"
	to_json($1)$0

snippet values "values ( ), returns Array"
	values($1)$0


# Class: DirectionalLight
snippet get_shadow_mode "get_shadow_mode ( ) const, returns int"
	get_shadow_mode($1)$0

snippet get_shadow_param "get_shadow_param ( int param ) const, returns float"
	get_shadow_param(${1:int param})$0

snippet set_shadow_mode "set_shadow_mode ( int mode ), returns void"
	set_shadow_mode(${1:int mode})$0

snippet set_shadow_param "set_shadow_param ( int param, float value ), returns void"
	set_shadow_param(${1:int param}, ${2:float value})$0


# Class: Directory
snippet change_dir "change_dir ( String todir ), returns Error"
	change_dir(${1:String todir})$0

snippet copy "copy ( String from, String to ), returns Error"
	copy(${1:String from}, ${2:String to})$0

snippet current_is_dir "current_is_dir ( ) const, returns bool"
	current_is_dir($1)$0

snippet dir_exists "dir_exists ( String path ), returns bool"
	dir_exists(${1:String path})$0

snippet file_exists "file_exists ( String path ), returns bool"
	file_exists(${1:String path})$0

snippet get_current_dir "get_current_dir ( ), returns String"
	get_current_dir($1)$0

snippet get_drive "get_drive ( int idx ), returns String"
	get_drive(${1:int idx})$0

snippet get_drive_count "get_drive_count ( ), returns int"
	get_drive_count($1)$0

snippet get_next "get_next ( ), returns String"
	get_next($1)$0

snippet get_space_left "get_space_left ( ), returns int"
	get_space_left($1)$0

snippet list_dir_begin "list_dir_begin ( ), returns bool"
	list_dir_begin($1)$0

snippet list_dir_end "list_dir_end ( ), returns void"
	list_dir_end($1)$0

snippet make_dir "make_dir ( String path ), returns Error"
	make_dir(${1:String path})$0

snippet make_dir_recursive "make_dir_recursive ( String path ), returns Error"
	make_dir_recursive(${1:String path})$0

snippet open "open ( String path ), returns Error"
	open(${1:String path})$0

# trigger conflict with other class(es)
snippet remove_Directory "remove ( String path ), returns Error"
	remove(${1:String path})$0

snippet rename "rename ( String from, String to ), returns Error"
	rename(${1:String from}, ${2:String to})$0


# Class: DynamicFont
snippet add_fallback "add_fallback ( DynamicFontData data ), returns void"
	add_fallback(${1:DynamicFontData data})$0

# trigger conflict with other class(es)
snippet get_fallback_DynamicFont "get_fallback ( int idx ) const, returns DynamicFontData"
	get_fallback(${1:int idx})$0

snippet get_fallback_count "get_fallback_count ( ) const, returns int"
	get_fallback_count($1)$0

snippet get_font_data "get_font_data ( ) const, returns DynamicFontData"
	get_font_data($1)$0

# trigger conflict with other class(es)
snippet get_size_DynamicFont "get_size ( ) const, returns int"
	get_size($1)$0

snippet get_spacing "get_spacing ( int type ) const, returns int"
	get_spacing(${1:int type})$0

snippet get_use_filter "get_use_filter ( ) const, returns bool"
	get_use_filter($1)$0

snippet get_use_mipmaps "get_use_mipmaps ( ) const, returns bool"
	get_use_mipmaps($1)$0

snippet remove_fallback "remove_fallback ( int idx ), returns void"
	remove_fallback(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_fallback_DynamicFont "set_fallback ( int idx, DynamicFontData data ), returns void"
	set_fallback(${1:int idx}, ${2:DynamicFontData data})$0

snippet set_font_data "set_font_data ( DynamicFontData data ), returns void"
	set_font_data(${1:DynamicFontData data})$0

# trigger conflict with other class(es)
snippet set_size_DynamicFont "set_size ( int data ), returns void"
	set_size(${1:int data})$0

snippet set_spacing "set_spacing ( int type, int value ), returns void"
	set_spacing(${1:int type}, ${2:int value})$0

snippet set_use_filter "set_use_filter ( bool enable ), returns void"
	set_use_filter(${1:bool enable})$0

snippet set_use_mipmaps "set_use_mipmaps ( bool enable ), returns void"
	set_use_mipmaps(${1:bool enable})$0


# Class: DynamicFontData
snippet get_font_path "get_font_path ( ) const, returns String"
	get_font_path($1)$0

snippet set_font_path "set_font_path ( String path ), returns void"
	set_font_path(${1:String path})$0


# Class: EditorExportPlugin
snippet custom_export "custom_export ( String name, EditorExportPlatform platform ) virtual, returns Variant"
	custom_export(${1:String name}, ${2:EditorExportPlatform platform})$0


# Class: EditorFileDialog
snippet add_filter "add_filter ( String filter ), returns void"
	add_filter(${1:String filter})$0

snippet clear_filters "clear_filters ( ), returns void"
	clear_filters($1)$0

snippet get_access "get_access ( ) const, returns int"
	get_access($1)$0

# trigger conflict with other class(es)
snippet get_current_dir_EditorFileDialog "get_current_dir ( ) const, returns String"
	get_current_dir($1)$0

snippet get_current_file "get_current_file ( ) const, returns String"
	get_current_file($1)$0

snippet get_current_path "get_current_path ( ) const, returns String"
	get_current_path($1)$0

snippet get_display_mode "get_display_mode ( ) const, returns int"
	get_display_mode($1)$0

# trigger conflict with other class(es)
snippet get_mode_EditorFileDialog "get_mode ( ) const, returns int"
	get_mode($1)$0

snippet get_vbox "get_vbox ( ), returns VBoxContainer"
	get_vbox($1)$0

snippet invalidate "invalidate ( ), returns void"
	invalidate($1)$0

snippet is_overwrite_warning_disabled "is_overwrite_warning_disabled ( ) const, returns bool"
	is_overwrite_warning_disabled($1)$0

snippet is_showing_hidden_files "is_showing_hidden_files ( ) const, returns bool"
	is_showing_hidden_files($1)$0

snippet set_access "set_access ( int access ), returns void"
	set_access(${1:int access})$0

snippet set_current_dir "set_current_dir ( String dir ), returns void"
	set_current_dir(${1:String dir})$0

snippet set_current_file "set_current_file ( String file ), returns void"
	set_current_file(${1:String file})$0

snippet set_current_path "set_current_path ( String path ), returns void"
	set_current_path(${1:String path})$0

snippet set_disable_overwrite_warning "set_disable_overwrite_warning ( bool disable ), returns void"
	set_disable_overwrite_warning(${1:bool disable})$0

snippet set_display_mode "set_display_mode ( int mode ), returns void"
	set_display_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_mode_EditorFileDialog "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

snippet set_show_hidden_files "set_show_hidden_files ( bool show ), returns void"
	set_show_hidden_files(${1:bool show})$0


# Class: EditorImportPlugin
snippet can_reimport_multiple_files "can_reimport_multiple_files ( ) virtual, returns bool"
	can_reimport_multiple_files($1)$0

# trigger conflict with other class(es)
snippet custom_export_EditorImportPlugin "custom_export ( String path, EditorExportPlatform platform ) virtual, returns RawArray"
	custom_export(${1:String path}, ${2:EditorExportPlatform platform})$0

snippet expand_source_path "expand_source_path ( String path ), returns String"
	expand_source_path(${1:String path})$0

snippet get_name "get_name ( ) virtual, returns String"
	get_name($1)$0

snippet get_visible_name "get_visible_name ( ) virtual, returns String"
	get_visible_name($1)$0

snippet import "import ( String path, ResourceImportMetadata from ) virtual, returns int"
	import(${1:String path}, ${2:ResourceImportMetadata from})$0

snippet import_dialog "import_dialog ( String from ) virtual, returns void"
	import_dialog(${1:String from})$0

snippet import_from_drop "import_from_drop ( StringArray files, String dest_path ) virtual, returns void"
	import_from_drop(${1:StringArray files}, ${2:String dest_path})$0

snippet reimport_multiple_files "reimport_multiple_files ( StringArray files ) virtual, returns void"
	reimport_multiple_files(${1:StringArray files})$0

snippet validate_source_path "validate_source_path ( String path ), returns String"
	validate_source_path(${1:String path})$0


# Class: EditorPlugin
snippet add_control_to_bottom_panel "add_control_to_bottom_panel ( Control control, String title ), returns ToolButton"
	add_control_to_bottom_panel(${1:Control control}, ${2:String title})$0

snippet add_control_to_container "add_control_to_container ( int container, Control control ), returns void"
	add_control_to_container(${1:int container}, ${2:Control control})$0

snippet add_control_to_dock "add_control_to_dock ( int slot, Control control ), returns void"
	add_control_to_dock(${1:int slot}, ${2:Control control})$0

snippet add_custom_type "add_custom_type ( String type, String base, Script script, Texture icon ), returns void"
	add_custom_type(${1:String type}, ${2:String base}, ${3:Script script}, ${4:Texture icon})$0

snippet add_export_plugin "add_export_plugin ( EditorExportPlugin plugin ), returns void"
	add_export_plugin(${1:EditorExportPlugin plugin})$0

snippet add_import_plugin "add_import_plugin ( EditorImportPlugin plugin ), returns void"
	add_import_plugin(${1:EditorImportPlugin plugin})$0

snippet apply_changes "apply_changes ( ) virtual, returns void"
	apply_changes($1)$0

# trigger conflict with other class(es)
snippet clear_EditorPlugin "clear ( ) virtual, returns void"
	clear($1)$0

snippet create_spatial_gizmo "create_spatial_gizmo ( Spatial for_spatial ) virtual, returns EditorSpatialGizmo"
	create_spatial_gizmo(${1:Spatial for_spatial})$0

snippet edit "edit ( Object object ) virtual, returns void"
	edit(${1:Object object})$0

snippet forward_input_event "forward_input_event ( InputEvent event ) virtual, returns bool"
	forward_input_event(${1:InputEvent event})$0

snippet forward_spatial_input_event "forward_spatial_input_event ( Camera camera, InputEvent event ) virtual, returns bool"
	forward_spatial_input_event(${1:Camera camera}, ${2:InputEvent event})$0

snippet get_base_control "get_base_control ( ), returns Control"
	get_base_control($1)$0

snippet get_breakpoints "get_breakpoints ( ) virtual, returns StringArray"
	get_breakpoints($1)$0

snippet get_editor_settings "get_editor_settings ( ), returns EditorSettings"
	get_editor_settings($1)$0

# trigger conflict with other class(es)
snippet get_name_EditorPlugin "get_name ( ) virtual, returns String"
	get_name($1)$0

snippet get_selection "get_selection ( ), returns EditorSelection"
	get_selection($1)$0

snippet get_state "get_state ( ) virtual, returns Dictionary"
	get_state($1)$0

snippet get_undo_redo "get_undo_redo ( ), returns UndoRedo"
	get_undo_redo($1)$0

snippet get_window_layout "get_window_layout ( ConfigFile layout ) virtual, returns void"
	get_window_layout(${1:ConfigFile layout})$0

snippet handles "handles ( Object object ) virtual, returns bool"
	handles(${1:Object object})$0

snippet has_main_screen "has_main_screen ( ) virtual, returns bool"
	has_main_screen($1)$0

snippet make_visible "make_visible ( bool visible ) virtual, returns void"
	make_visible(${1:bool visible})$0

snippet queue_save_layout "queue_save_layout ( ) const, returns void"
	queue_save_layout($1)$0

snippet remove_control_from_bottom_panel "remove_control_from_bottom_panel ( Control control ), returns void"
	remove_control_from_bottom_panel(${1:Control control})$0

snippet remove_control_from_docks "remove_control_from_docks ( Control control ), returns void"
	remove_control_from_docks(${1:Control control})$0

snippet remove_custom_type "remove_custom_type ( String type ), returns void"
	remove_custom_type(${1:String type})$0

snippet remove_export_plugin "remove_export_plugin ( EditorExportPlugin plugin ), returns void"
	remove_export_plugin(${1:EditorExportPlugin plugin})$0

snippet remove_import_plugin "remove_import_plugin ( EditorImportPlugin plugin ), returns void"
	remove_import_plugin(${1:EditorImportPlugin plugin})$0

snippet save_external_data "save_external_data ( ) virtual, returns void"
	save_external_data($1)$0

snippet set_state "set_state ( Dictionary state ) virtual, returns void"
	set_state(${1:Dictionary state})$0

snippet set_window_layout "set_window_layout ( ConfigFile layout ) virtual, returns void"
	set_window_layout(${1:ConfigFile layout})$0


# Class: EditorScenePostImport
snippet post_import "post_import ( Object scene ) virtual, returns void"
	post_import(${1:Object scene})$0


# Class: EditorScript
snippet _run "_run ( ) virtual, returns void"
	_run($1)$0

snippet add_root_node "add_root_node ( Object node ), returns void"
	add_root_node(${1:Object node})$0

snippet get_scene "get_scene ( ), returns Object"
	get_scene($1)$0


# Class: EditorSelection
# trigger conflict with other class(es)
snippet add_node_EditorSelection "add_node ( Node node ), returns void"
	add_node(${1:Node node})$0

# trigger conflict with other class(es)
snippet clear_EditorSelection "clear ( ), returns void"
	clear($1)$0

snippet get_selected_nodes "get_selected_nodes ( ), returns Array"
	get_selected_nodes($1)$0

# trigger conflict with other class(es)
snippet remove_node_EditorSelection "remove_node ( Node node ), returns void"
	remove_node(${1:Node node})$0


# Class: EditorSettings
snippet add_property_info "add_property_info ( Dictionary info ), returns void"
	add_property_info(${1:Dictionary info})$0

# trigger conflict with other class(es)
snippet erase_EditorSettings "erase ( String property ), returns void"
	erase(${1:String property})$0

snippet get_favorite_dirs "get_favorite_dirs ( ) const, returns StringArray"
	get_favorite_dirs($1)$0

snippet get_project_settings_path "get_project_settings_path ( ) const, returns String"
	get_project_settings_path($1)$0

snippet get_recent_dirs "get_recent_dirs ( ) const, returns StringArray"
	get_recent_dirs($1)$0

snippet get_settings_path "get_settings_path ( ) const, returns String"
	get_settings_path($1)$0

snippet set_favorite_dirs "set_favorite_dirs ( StringArray dirs ), returns void"
	set_favorite_dirs(${1:StringArray dirs})$0

snippet set_recent_dirs "set_recent_dirs ( StringArray dirs ), returns void"
	set_recent_dirs(${1:StringArray dirs})$0


# Class: EditorSpatialGizmo
snippet add_collision_segments "add_collision_segments ( Vector3Array segments ), returns void"
	add_collision_segments(${1:Vector3Array segments})$0

snippet add_collision_triangles "add_collision_triangles ( TriangleMesh triangles ), returns void"
	add_collision_triangles(${1:TriangleMesh triangles})$0

snippet add_handles "add_handles ( Vector3Array handles, bool billboard=false, bool secondary=false ), returns void"
	add_handles(${1:Vector3Array handles}, ${2:bool billboard=false}, ${3:bool secondary=false})$0

snippet add_lines "add_lines ( Vector3Array lines, Material material, bool billboard=false ), returns void"
	add_lines(${1:Vector3Array lines}, ${2:Material material}, ${3:bool billboard=false})$0

snippet add_mesh "add_mesh ( Mesh mesh, bool billboard=false, RID skeleton=RID() ), returns void"
	add_mesh(${1:Mesh mesh}, ${2:bool billboard=false}, ${3:RID skeleton=RID()})$0

snippet add_unscaled_billboard "add_unscaled_billboard ( Material material, float default_scale=1 ), returns void"
	add_unscaled_billboard(${1:Material material}, ${2:float default_scale=1})$0

# trigger conflict with other class(es)
snippet clear_EditorSpatialGizmo "clear ( ), returns void"
	clear($1)$0

snippet commit_handle "commit_handle ( int index, Variant restore, bool cancel ) virtual, returns void"
	commit_handle(${1:int index}, ${2:Variant restore}, ${3:bool cancel})$0

snippet get_handle_name "get_handle_name ( int index ) virtual, returns String"
	get_handle_name(${1:int index})$0

snippet get_handle_value "get_handle_value ( int index ) virtual, returns Variant"
	get_handle_value(${1:int index})$0

snippet redraw "redraw ( ) virtual, returns void"
	redraw($1)$0

snippet set_handle "set_handle ( int index, Camera camera, Vector2 point ) virtual, returns void"
	set_handle(${1:int index}, ${2:Camera camera}, ${3:Vector2 point})$0

snippet set_spatial_node "set_spatial_node ( Spatial node ), returns void"
	set_spatial_node(${1:Spatial node})$0


# Class: Environment
snippet fx_get_param "fx_get_param ( int param ) const, returns void"
	fx_get_param(${1:int param})$0

snippet fx_set_param "fx_set_param ( int param, Variant value ), returns void"
	fx_set_param(${1:int param}, ${2:Variant value})$0

snippet get_background "get_background ( ) const, returns int"
	get_background($1)$0

snippet get_background_param "get_background_param ( int param ) const, returns void"
	get_background_param(${1:int param})$0

snippet is_fx_enabled "is_fx_enabled ( int effect ) const, returns bool"
	is_fx_enabled(${1:int effect})$0

snippet set_background "set_background ( int bgmode ), returns void"
	set_background(${1:int bgmode})$0

snippet set_background_param "set_background_param ( int param, Variant value ), returns void"
	set_background_param(${1:int param}, ${2:Variant value})$0

snippet set_enable_fx "set_enable_fx ( int effect, bool enabled ), returns void"
	set_enable_fx(${1:int effect}, ${2:bool enabled})$0


# Class: EventPlayer
snippet get_channel_last_note_time "get_channel_last_note_time ( int channel ) const, returns float"
	get_channel_last_note_time(${1:int channel})$0

snippet get_channel_volume "get_channel_volume ( int channel ) const, returns float"
	get_channel_volume(${1:int channel})$0

# trigger conflict with other class(es)
snippet get_length_EventPlayer "get_length ( ) const, returns float"
	get_length($1)$0

# trigger conflict with other class(es)
snippet get_loop_count_EventPlayer "get_loop_count ( ) const, returns int"
	get_loop_count($1)$0

snippet get_pitch_scale "get_pitch_scale ( ) const, returns float"
	get_pitch_scale($1)$0

# trigger conflict with other class(es)
snippet get_pos_EventPlayer "get_pos ( ) const, returns float"
	get_pos($1)$0

snippet get_stream "get_stream ( ) const, returns EventStream"
	get_stream($1)$0

snippet get_stream_name "get_stream_name ( ) const, returns String"
	get_stream_name($1)$0

snippet get_tempo_scale "get_tempo_scale ( ) const, returns float"
	get_tempo_scale($1)$0

snippet get_volume "get_volume ( ) const, returns float"
	get_volume($1)$0

snippet get_volume_db "get_volume_db ( ) const, returns float"
	get_volume_db($1)$0

snippet has_autoplay "has_autoplay ( ) const, returns bool"
	has_autoplay($1)$0

# trigger conflict with other class(es)
snippet has_loop_EventPlayer "has_loop ( ) const, returns bool"
	has_loop($1)$0

snippet is_paused "is_paused ( ) const, returns bool"
	is_paused($1)$0

# trigger conflict with other class(es)
snippet is_playing_EventPlayer "is_playing ( ) const, returns bool"
	is_playing($1)$0

# trigger conflict with other class(es)
snippet play_EventPlayer "play ( ), returns void"
	play($1)$0

# trigger conflict with other class(es)
snippet seek_pos_EventPlayer "seek_pos ( float time ), returns void"
	seek_pos(${1:float time})$0

# trigger conflict with other class(es)
snippet set_autoplay_EventPlayer "set_autoplay ( bool enabled ), returns void"
	set_autoplay(${1:bool enabled})$0

snippet set_channel_volume "set_channel_volume ( int channel, float channel_volume ), returns void"
	set_channel_volume(${1:int channel}, ${2:float channel_volume})$0

# trigger conflict with other class(es)
snippet set_loop_EventPlayer "set_loop ( bool enabled ), returns void"
	set_loop(${1:bool enabled})$0

snippet set_paused "set_paused ( bool paused ), returns void"
	set_paused(${1:bool paused})$0

snippet set_pitch_scale "set_pitch_scale ( float pitch_scale ), returns void"
	set_pitch_scale(${1:float pitch_scale})$0

snippet set_stream "set_stream ( EventStream stream ), returns void"
	set_stream(${1:EventStream stream})$0

snippet set_tempo_scale "set_tempo_scale ( float tempo_scale ), returns void"
	set_tempo_scale(${1:float tempo_scale})$0

snippet set_volume "set_volume ( float volume ), returns void"
	set_volume(${1:float volume})$0

snippet set_volume_db "set_volume_db ( float db ), returns void"
	set_volume_db(${1:float db})$0

# trigger conflict with other class(es)
snippet stop_EventPlayer "stop ( ), returns void"
	stop($1)$0


# Class: File
snippet close "close ( ), returns void"
	close($1)$0

snippet eof_reached "eof_reached ( ) const, returns bool"
	eof_reached($1)$0

# trigger conflict with other class(es)
snippet file_exists_File "file_exists ( String path ) const, returns bool"
	file_exists(${1:String path})$0

snippet get_16 "get_16 ( ) const, returns int"
	get_16($1)$0

snippet get_32 "get_32 ( ) const, returns int"
	get_32($1)$0

snippet get_64 "get_64 ( ) const, returns int"
	get_64($1)$0

snippet get_8 "get_8 ( ) const, returns int"
	get_8($1)$0

snippet get_as_text "get_as_text ( ) const, returns String"
	get_as_text($1)$0

snippet get_buffer "get_buffer ( int len ) const, returns RawArray"
	get_buffer(${1:int len})$0

snippet get_csv_line "get_csv_line ( String delim=”,” ) const, returns StringArray"
	get_csv_line(${1:String delim=”},”)$0

snippet get_double "get_double ( ) const, returns float"
	get_double($1)$0

snippet get_endian_swap "get_endian_swap ( ), returns bool"
	get_endian_swap($1)$0

snippet get_error "get_error ( ) const, returns Error"
	get_error($1)$0

snippet get_float "get_float ( ) const, returns float"
	get_float($1)$0

snippet get_len "get_len ( ) const, returns int"
	get_len($1)$0

snippet get_line "get_line ( ) const, returns String"
	get_line($1)$0

snippet get_md5 "get_md5 ( String path ) const, returns String"
	get_md5(${1:String path})$0

snippet get_pascal_string "get_pascal_string ( ), returns String"
	get_pascal_string($1)$0

# trigger conflict with other class(es)
snippet get_pos_File "get_pos ( ) const, returns int"
	get_pos($1)$0

snippet get_real "get_real ( ) const, returns float"
	get_real($1)$0

snippet get_sha256 "get_sha256 ( String path ) const, returns String"
	get_sha256(${1:String path})$0

snippet get_var "get_var ( ) const, returns void"
	get_var($1)$0

snippet is_open "is_open ( ) const, returns bool"
	is_open($1)$0

# trigger conflict with other class(es)
snippet open_File "open ( String path, int flags ), returns int"
	open(${1:String path}, ${2:int flags})$0

snippet open_encrypted "open_encrypted ( String path, int mode_flags, RawArray key ), returns int"
	open_encrypted(${1:String path}, ${2:int mode_flags}, ${3:RawArray key})$0

snippet open_encrypted_with_pass "open_encrypted_with_pass ( String path, int mode_flags, String pass ), returns int"
	open_encrypted_with_pass(${1:String path}, ${2:int mode_flags}, ${3:String pass})$0

# trigger conflict with other class(es)
snippet seek_File "seek ( int pos ), returns void"
	seek(${1:int pos})$0

snippet seek_end "seek_end ( int pos=0 ), returns void"
	seek_end(${1:int pos=0})$0

snippet set_endian_swap "set_endian_swap ( bool enable ), returns void"
	set_endian_swap(${1:bool enable})$0

snippet store_16 "store_16 ( int value ), returns void"
	store_16(${1:int value})$0

snippet store_32 "store_32 ( int value ), returns void"
	store_32(${1:int value})$0

snippet store_64 "store_64 ( int value ), returns void"
	store_64(${1:int value})$0

snippet store_8 "store_8 ( int value ), returns void"
	store_8(${1:int value})$0

snippet store_buffer "store_buffer ( RawArray buffer ), returns void"
	store_buffer(${1:RawArray buffer})$0

snippet store_double "store_double ( float value ), returns void"
	store_double(${1:float value})$0

snippet store_float "store_float ( float value ), returns void"
	store_float(${1:float value})$0

snippet store_line "store_line ( String line ), returns void"
	store_line(${1:String line})$0

snippet store_pascal_string "store_pascal_string ( String string ), returns void"
	store_pascal_string(${1:String string})$0

snippet store_real "store_real ( float value ), returns void"
	store_real(${1:float value})$0

snippet store_string "store_string ( String string ), returns void"
	store_string(${1:String string})$0

snippet store_var "store_var ( Variant value ), returns void"
	store_var(${1:Variant value})$0


# Class: FileDialog
# trigger conflict with other class(es)
snippet add_filter_FileDialog "add_filter ( String filter ), returns void"
	add_filter(${1:String filter})$0

# trigger conflict with other class(es)
snippet clear_filters_FileDialog "clear_filters ( ), returns void"
	clear_filters($1)$0

# trigger conflict with other class(es)
snippet get_access_FileDialog "get_access ( ) const, returns int"
	get_access($1)$0

# trigger conflict with other class(es)
snippet get_current_dir_FileDialog "get_current_dir ( ) const, returns String"
	get_current_dir($1)$0

# trigger conflict with other class(es)
snippet get_current_file_FileDialog "get_current_file ( ) const, returns String"
	get_current_file($1)$0

# trigger conflict with other class(es)
snippet get_current_path_FileDialog "get_current_path ( ) const, returns String"
	get_current_path($1)$0

snippet get_filters "get_filters ( ) const, returns StringArray"
	get_filters($1)$0

# trigger conflict with other class(es)
snippet get_mode_FileDialog "get_mode ( ) const, returns int"
	get_mode($1)$0

# trigger conflict with other class(es)
snippet get_vbox_FileDialog "get_vbox ( ), returns VBoxContainer"
	get_vbox($1)$0

# trigger conflict with other class(es)
snippet invalidate_FileDialog "invalidate ( ), returns void"
	invalidate($1)$0

# trigger conflict with other class(es)
snippet is_showing_hidden_files_FileDialog "is_showing_hidden_files ( ) const, returns bool"
	is_showing_hidden_files($1)$0

# trigger conflict with other class(es)
snippet set_access_FileDialog "set_access ( int access ), returns void"
	set_access(${1:int access})$0

# trigger conflict with other class(es)
snippet set_current_dir_FileDialog "set_current_dir ( String dir ), returns void"
	set_current_dir(${1:String dir})$0

# trigger conflict with other class(es)
snippet set_current_file_FileDialog "set_current_file ( String file ), returns void"
	set_current_file(${1:String file})$0

# trigger conflict with other class(es)
snippet set_current_path_FileDialog "set_current_path ( String path ), returns void"
	set_current_path(${1:String path})$0

snippet set_filters "set_filters ( StringArray filters ), returns void"
	set_filters(${1:StringArray filters})$0

# trigger conflict with other class(es)
snippet set_mode_FileDialog "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_show_hidden_files_FileDialog "set_show_hidden_files ( bool show ), returns void"
	set_show_hidden_files(${1:bool show})$0


# Class: FixedMaterial
snippet get_fixed_flag "get_fixed_flag ( int flag ) const, returns bool"
	get_fixed_flag(${1:int flag})$0

snippet get_light_shader "get_light_shader ( ) const, returns int"
	get_light_shader($1)$0

snippet get_parameter "get_parameter ( int param ) const, returns void"
	get_parameter(${1:int param})$0

snippet get_point_size "get_point_size ( ) const, returns float"
	get_point_size($1)$0

snippet get_texcoord_mode "get_texcoord_mode ( int param ) const, returns int"
	get_texcoord_mode(${1:int param})$0

# trigger conflict with other class(es)
snippet get_texture_FixedMaterial "get_texture ( int param ) const, returns Texture"
	get_texture(${1:int param})$0

snippet get_uv_transform "get_uv_transform ( ) const, returns Transform"
	get_uv_transform($1)$0

snippet set_fixed_flag "set_fixed_flag ( int flag, bool value ), returns void"
	set_fixed_flag(${1:int flag}, ${2:bool value})$0

snippet set_light_shader "set_light_shader ( int shader ), returns void"
	set_light_shader(${1:int shader})$0

snippet set_parameter "set_parameter ( int param, Variant value ), returns void"
	set_parameter(${1:int param}, ${2:Variant value})$0

snippet set_point_size "set_point_size ( float size ), returns void"
	set_point_size(${1:float size})$0

snippet set_texcoord_mode "set_texcoord_mode ( int param, int mode ), returns void"
	set_texcoord_mode(${1:int param}, ${2:int mode})$0

snippet set_texture "set_texture ( int param, Texture texture ), returns void"
	set_texture(${1:int param}, ${2:Texture texture})$0

snippet set_uv_transform "set_uv_transform ( Transform transform ), returns void"
	set_uv_transform(${1:Transform transform})$0


# Class: float
# not-unique trigger detected in this class: float; snippet commented
#snippet float "float ( bool from ), returns float"
#	float(bool from)$0

# not-unique trigger detected in this class: float; snippet commented
#snippet float "float ( int from ), returns float"
#	float(int from)$0

snippet float "float ( String from ), returns float"
	float(${1:String from})$0


# Class: Font
snippet draw "draw ( RID canvas_item, Vector2 pos, String string, Color modulate=Color(1,1,1,1), int clip_w=-1 ) const, returns void"
	draw(${1:RID canvas_item}, ${2:Vector2 pos}, ${3:String string}, ${4:Color modulate=Color(1},1,1,1), ${5:int clip_w=-1})$0

# trigger conflict with other class(es)
snippet draw_char_Font "draw_char ( RID canvas_item, Vector2 pos, int char, int next=-1, Color modulate=Color(1,1,1,1) ) const, returns float"
	draw_char(${1:RID canvas_item}, ${2:Vector2 pos}, ${3:int char}, ${4:int next=-1}, ${5:Color modulate=Color(1},1,1,1))$0

snippet get_ascent "get_ascent ( ) const, returns float"
	get_ascent($1)$0

snippet get_descent "get_descent ( ) const, returns float"
	get_descent($1)$0

# trigger conflict with other class(es)
snippet get_height_Font "get_height ( ) const, returns float"
	get_height($1)$0

snippet get_string_size "get_string_size ( String string ) const, returns Vector2"
	get_string_size(${1:String string})$0

snippet is_distance_field_hint "is_distance_field_hint ( ) const, returns bool"
	is_distance_field_hint($1)$0

snippet update_changes "update_changes ( ), returns void"
	update_changes($1)$0


# Class: FuncRef
snippet call_func "call_func ( Variant arg0=NULL, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL, Variant arg5=NULL, Variant arg6=NULL, Variant arg7=NULL, Variant arg8=NULL, Variant arg9=NULL ), returns void"
	call_func(${1:Variant arg0=NULL}, ${2:Variant arg1=NULL}, ${3:Variant arg2=NULL}, ${4:Variant arg3=NULL}, ${5:Variant arg4=NULL}, ${6:Variant arg5=NULL}, ${7:Variant arg6=NULL}, ${8:Variant arg7=NULL}, ${9:Variant arg8=NULL}, ${10:Variant arg9=NULL})$0

snippet set_function "set_function ( String name ), returns void"
	set_function(${1:String name})$0

snippet set_instance "set_instance ( Object instance ), returns void"
	set_instance(${1:Object instance})$0


# Class: GDFunctionState
snippet is_valid "is_valid ( ) const, returns bool"
	is_valid($1)$0

snippet resume "resume ( Variant arg=NULL ), returns Variant"
	resume(${1:Variant arg=NULL})$0


# Class: GDNativeClass
snippet new "new ( ), returns void"
	new($1)$0


# Class: GDScript
snippet get_as_byte_code "get_as_byte_code ( ) const, returns RawArray"
	get_as_byte_code($1)$0

# trigger conflict with other class(es)
snippet new_GDScript "new ( ), returns void"
	new($1)$0


# Class: 6Generic6DOFJoint
snippet get_flag_x "get_flag_x ( int flag ) const, returns bool"
	get_flag_x(${1:int flag})$0

snippet get_flag_y "get_flag_y ( int flag ) const, returns bool"
	get_flag_y(${1:int flag})$0

snippet get_flag_z "get_flag_z ( int flag ) const, returns bool"
	get_flag_z(${1:int flag})$0

snippet get_param_x "get_param_x ( int param ) const, returns float"
	get_param_x(${1:int param})$0

snippet get_param_y "get_param_y ( int param ) const, returns float"
	get_param_y(${1:int param})$0

snippet get_param_z "get_param_z ( int param ) const, returns float"
	get_param_z(${1:int param})$0

snippet set_flag_x "set_flag_x ( int flag, bool value ), returns void"
	set_flag_x(${1:int flag}, ${2:bool value})$0

snippet set_flag_y "set_flag_y ( int flag, bool value ), returns void"
	set_flag_y(${1:int flag}, ${2:bool value})$0

snippet set_flag_z "set_flag_z ( int flag, bool value ), returns void"
	set_flag_z(${1:int flag}, ${2:bool value})$0

snippet set_param_x "set_param_x ( int param, float value ), returns void"
	set_param_x(${1:int param}, ${2:float value})$0

snippet set_param_y "set_param_y ( int param, float value ), returns void"
	set_param_y(${1:int param}, ${2:float value})$0

snippet set_param_z "set_param_z ( int param, float value ), returns void"
	set_param_z(${1:int param}, ${2:float value})$0


# Class: Geometry
snippet build_box_planes "build_box_planes ( Vector3 extents ), returns Array"
	build_box_planes(${1:Vector3 extents})$0

snippet build_capsule_planes "build_capsule_planes ( float radius, float height, int sides, int lats, int axis=2 ), returns Array"
	build_capsule_planes(${1:float radius}, ${2:float height}, ${3:int sides}, ${4:int lats}, ${5:int axis=2})$0

snippet build_cylinder_planes "build_cylinder_planes ( float radius, float height, int sides, int axis=2 ), returns Array"
	build_cylinder_planes(${1:float radius}, ${2:float height}, ${3:int sides}, ${4:int axis=2})$0

snippet get_closest_point_to_segment "get_closest_point_to_segment ( Vector3 point, Vector3 s1, Vector3 s2 ), returns Vector3"
	get_closest_point_to_segment(${1:Vector3 point}, ${2:Vector3 s1}, ${3:Vector3 s2})$0

snippet get_closest_points_between_segments "get_closest_points_between_segments ( Vector3 p1, Vector3 p2, Vector3 q1, Vector3 q2 ), returns Vector3Array"
	get_closest_points_between_segments(${1:Vector3 p1}, ${2:Vector3 p2}, ${3:Vector3 q1}, ${4:Vector3 q2})$0

snippet get_closest_points_between_segments_2d "get_closest_points_between_segments_2d ( Vector2 p1, Vector2 q1, Vector2 p2, Vector2 q2 ), returns Vector2Array"
	get_closest_points_between_segments_2d(${1:Vector2 p1}, ${2:Vector2 q1}, ${3:Vector2 p2}, ${4:Vector2 q2})$0

snippet get_uv84_normal_bit "get_uv84_normal_bit ( Vector3 normal ), returns int"
	get_uv84_normal_bit(${1:Vector3 normal})$0

snippet make_atlas "make_atlas ( Vector2Array sizes ), returns Dictionary"
	make_atlas(${1:Vector2Array sizes})$0

snippet point_is_inside_triangle "point_is_inside_triangle ( Vector2 point, Vector2 a, Vector2 b, Vector2 c ) const, returns bool"
	point_is_inside_triangle(${1:Vector2 point}, ${2:Vector2 a}, ${3:Vector2 b}, ${4:Vector2 c})$0

snippet ray_intersects_triangle "ray_intersects_triangle ( Vector3 from, Vector3 dir, Vector3 a, Vector3 b, Vector3 c ), returns void"
	ray_intersects_triangle(${1:Vector3 from}, ${2:Vector3 dir}, ${3:Vector3 a}, ${4:Vector3 b}, ${5:Vector3 c})$0

snippet segment_intersects_circle "segment_intersects_circle ( Vector2 segment_from, Vector2 segment_to, Vector2 circle_pos, float circle_radius ), returns float"
	segment_intersects_circle(${1:Vector2 segment_from}, ${2:Vector2 segment_to}, ${3:Vector2 circle_pos}, ${4:float circle_radius})$0

snippet segment_intersects_convex "segment_intersects_convex ( Vector3 from, Vector3 to, Array planes ), returns Vector3Array"
	segment_intersects_convex(${1:Vector3 from}, ${2:Vector3 to}, ${3:Array planes})$0

snippet segment_intersects_cylinder "segment_intersects_cylinder ( Vector3 from, Vector3 to, float height, float radius ), returns Vector3Array"
	segment_intersects_cylinder(${1:Vector3 from}, ${2:Vector3 to}, ${3:float height}, ${4:float radius})$0

snippet segment_intersects_segment_2d "segment_intersects_segment_2d ( Vector2 from_a, Vector2 to_a, Vector2 from_b, Vector2 to_b ), returns void"
	segment_intersects_segment_2d(${1:Vector2 from_a}, ${2:Vector2 to_a}, ${3:Vector2 from_b}, ${4:Vector2 to_b})$0

snippet segment_intersects_sphere "segment_intersects_sphere ( Vector3 from, Vector3 to, Vector3 spos, float sradius ), returns Vector3Array"
	segment_intersects_sphere(${1:Vector3 from}, ${2:Vector3 to}, ${3:Vector3 spos}, ${4:float sradius})$0

snippet segment_intersects_triangle "segment_intersects_triangle ( Vector3 from, Vector3 to, Vector3 a, Vector3 b, Vector3 c ), returns void"
	segment_intersects_triangle(${1:Vector3 from}, ${2:Vector3 to}, ${3:Vector3 a}, ${4:Vector3 b}, ${5:Vector3 c})$0

snippet triangulate_polygon "triangulate_polygon ( Vector2Array polygon ), returns IntArray"
	triangulate_polygon(${1:Vector2Array polygon})$0


# Class: GeometryInstance
snippet get_baked_light_texture_id "get_baked_light_texture_id ( ) const, returns int"
	get_baked_light_texture_id($1)$0

snippet get_cast_shadows_setting "get_cast_shadows_setting ( ) const, returns int"
	get_cast_shadows_setting($1)$0

snippet get_draw_range_begin "get_draw_range_begin ( ) const, returns float"
	get_draw_range_begin($1)$0

snippet get_draw_range_end "get_draw_range_end ( ) const, returns float"
	get_draw_range_end($1)$0

snippet get_extra_cull_margin "get_extra_cull_margin ( ) const, returns float"
	get_extra_cull_margin($1)$0

snippet get_flag "get_flag ( int flag ) const, returns bool"
	get_flag(${1:int flag})$0

snippet get_material_override "get_material_override ( ) const, returns Object"
	get_material_override($1)$0

snippet set_baked_light_texture_id "set_baked_light_texture_id ( int id ), returns void"
	set_baked_light_texture_id(${1:int id})$0

snippet set_cast_shadows_setting "set_cast_shadows_setting ( int shadow_casting_setting ), returns void"
	set_cast_shadows_setting(${1:int shadow_casting_setting})$0

snippet set_draw_range_begin "set_draw_range_begin ( float mode ), returns void"
	set_draw_range_begin(${1:float mode})$0

snippet set_draw_range_end "set_draw_range_end ( float mode ), returns void"
	set_draw_range_end(${1:float mode})$0

snippet set_extra_cull_margin "set_extra_cull_margin ( float margin ), returns void"
	set_extra_cull_margin(${1:float margin})$0

snippet set_flag "set_flag ( int flag, bool value ), returns void"
	set_flag(${1:int flag}, ${2:bool value})$0

snippet set_material_override "set_material_override ( Object material ), returns void"
	set_material_override(${1:Object material})$0


# Class: Globals
# trigger conflict with other class(es)
snippet add_property_info_Globals "add_property_info ( Dictionary hint ), returns void"
	add_property_info(${1:Dictionary hint})$0

# trigger conflict with other class(es)
snippet clear_Globals "clear ( String name ), returns void"
	clear(${1:String name})$0

snippet get_order "get_order ( String name ) const, returns int"
	get_order(${1:String name})$0

snippet get_singleton "get_singleton ( String name ) const, returns Object"
	get_singleton(${1:String name})$0

snippet globalize_path "globalize_path ( String path ) const, returns String"
	globalize_path(${1:String path})$0

# trigger conflict with other class(es)
snippet has_Globals "has ( String name ) const, returns bool"
	has(${1:String name})$0

snippet has_singleton "has_singleton ( String name ) const, returns bool"
	has_singleton(${1:String name})$0

snippet is_persisting "is_persisting ( String name ) const, returns bool"
	is_persisting(${1:String name})$0

snippet load_resource_pack "load_resource_pack ( String pack ), returns bool"
	load_resource_pack(${1:String pack})$0

snippet localize_path "localize_path ( String path ) const, returns String"
	localize_path(${1:String path})$0

# trigger conflict with other class(es)
snippet save_Globals "save ( ), returns int"
	save($1)$0

snippet save_custom "save_custom ( String file ), returns int"
	save_custom(${1:String file})$0

snippet set_order "set_order ( String name, int pos ), returns void"
	set_order(${1:String name}, ${2:int pos})$0

snippet set_persisting "set_persisting ( String name, bool enable ), returns void"
	set_persisting(${1:String name}, ${2:bool enable})$0


# Class: GraphEdit
snippet connect_node "connect_node ( String from, int from_port, String to, int to_port ), returns Error"
	connect_node(${1:String from}, ${2:int from_port}, ${3:String to}, ${4:int to_port})$0

snippet disconnect_node "disconnect_node ( String from, int from_port, String to, int to_port ), returns void"
	disconnect_node(${1:String from}, ${2:int from_port}, ${3:String to}, ${4:int to_port})$0

snippet get_connection_list "get_connection_list ( ) const, returns Array"
	get_connection_list($1)$0

snippet get_scroll_ofs "get_scroll_ofs ( ) const, returns Vector2"
	get_scroll_ofs($1)$0

# trigger conflict with other class(es)
snippet get_zoom_GraphEdit "get_zoom ( ) const, returns float"
	get_zoom($1)$0

snippet is_node_connected "is_node_connected ( String from, int from_port, String to, int to_port ), returns bool"
	is_node_connected(${1:String from}, ${2:int from_port}, ${3:String to}, ${4:int to_port})$0

snippet is_right_disconnects_enabled "is_right_disconnects_enabled ( ) const, returns bool"
	is_right_disconnects_enabled($1)$0

snippet set_right_disconnects "set_right_disconnects ( bool enable ), returns void"
	set_right_disconnects(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_zoom_GraphEdit "set_zoom ( float p_zoom ), returns void"
	set_zoom(${1:float p_zoom})$0


# Class: GraphNode
snippet clear_all_slots "clear_all_slots ( ), returns void"
	clear_all_slots($1)$0

snippet clear_slot "clear_slot ( int idx ), returns void"
	clear_slot(${1:int idx})$0

snippet get_connection_input_color "get_connection_input_color ( int idx ), returns Color"
	get_connection_input_color(${1:int idx})$0

snippet get_connection_input_count "get_connection_input_count ( ), returns int"
	get_connection_input_count($1)$0

snippet get_connection_input_pos "get_connection_input_pos ( int idx ), returns Vector2"
	get_connection_input_pos(${1:int idx})$0

snippet get_connection_input_type "get_connection_input_type ( int idx ), returns int"
	get_connection_input_type(${1:int idx})$0

snippet get_connection_output_color "get_connection_output_color ( int idx ), returns Color"
	get_connection_output_color(${1:int idx})$0

snippet get_connection_output_count "get_connection_output_count ( ), returns int"
	get_connection_output_count($1)$0

snippet get_connection_output_pos "get_connection_output_pos ( int idx ), returns Vector2"
	get_connection_output_pos(${1:int idx})$0

snippet get_connection_output_type "get_connection_output_type ( int idx ), returns int"
	get_connection_output_type(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_offset_GraphNode "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

snippet get_slot_color_left "get_slot_color_left ( int idx ) const, returns Color"
	get_slot_color_left(${1:int idx})$0

snippet get_slot_color_right "get_slot_color_right ( int idx ) const, returns Color"
	get_slot_color_right(${1:int idx})$0

snippet get_slot_type_left "get_slot_type_left ( int idx ) const, returns int"
	get_slot_type_left(${1:int idx})$0

snippet get_slot_type_right "get_slot_type_right ( int idx ) const, returns int"
	get_slot_type_right(${1:int idx})$0

snippet get_title "get_title ( ) const, returns String"
	get_title($1)$0

snippet is_close_button_visible "is_close_button_visible ( ) const, returns bool"
	is_close_button_visible($1)$0

snippet is_slot_enabled_left "is_slot_enabled_left ( int idx ) const, returns bool"
	is_slot_enabled_left(${1:int idx})$0

snippet is_slot_enabled_right "is_slot_enabled_right ( int idx ) const, returns bool"
	is_slot_enabled_right(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_offset_GraphNode "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

snippet set_show_close_button "set_show_close_button ( bool show ), returns void"
	set_show_close_button(${1:bool show})$0

snippet set_slot "set_slot ( int idx, bool enable_left, int type_left, Color color_left, bool enable_right, int type_right, Color color_right ), returns void"
	set_slot(${1:int idx}, ${2:bool enable_left}, ${3:int type_left}, ${4:Color color_left}, ${5:bool enable_right}, ${6:int type_right}, ${7:Color color_right})$0

snippet set_title "set_title ( String title ), returns void"
	set_title(${1:String title})$0


# Class: GridContainer
snippet get_columns "get_columns ( ) const, returns int"
	get_columns($1)$0

snippet set_columns "set_columns ( int columns ), returns void"
	set_columns(${1:int columns})$0


# Class: GridMap
snippet area_get_bounds "area_get_bounds ( int area ) const, returns AABB"
	area_get_bounds(${1:int area})$0

snippet area_get_name "area_get_name ( int area ) const, returns String"
	area_get_name(${1:int area})$0

snippet area_get_portal_disable_color "area_get_portal_disable_color ( int area ) const, returns Color"
	area_get_portal_disable_color(${1:int area})$0

snippet area_get_portal_disable_distance "area_get_portal_disable_distance ( int area ) const, returns float"
	area_get_portal_disable_distance(${1:int area})$0

snippet area_is_exterior_portal "area_is_exterior_portal ( int area ) const, returns bool"
	area_is_exterior_portal(${1:int area})$0

snippet area_set_exterior_portal "area_set_exterior_portal ( int area, bool enable ), returns void"
	area_set_exterior_portal(${1:int area}, ${2:bool enable})$0

snippet area_set_name "area_set_name ( int area, String name ), returns void"
	area_set_name(${1:int area}, ${2:String name})$0

snippet area_set_portal_disable_color "area_set_portal_disable_color ( int area, Color color ), returns void"
	area_set_portal_disable_color(${1:int area}, ${2:Color color})$0

snippet area_set_portal_disable_distance "area_set_portal_disable_distance ( int area, float distance ), returns void"
	area_set_portal_disable_distance(${1:int area}, ${2:float distance})$0

snippet bake_geometry "bake_geometry ( ), returns void"
	bake_geometry($1)$0

# trigger conflict with other class(es)
snippet clear_GridMap "clear ( ), returns void"
	clear($1)$0

snippet create_area "create_area ( int id, AABB area ), returns int"
	create_area(${1:int id}, ${2:AABB area})$0

snippet erase_area "erase_area ( int area ), returns void"
	erase_area(${1:int area})$0

snippet get_cell_item "get_cell_item ( int x, int y, int z ) const, returns int"
	get_cell_item(${1:int x}, ${2:int y}, ${3:int z})$0

snippet get_cell_item_orientation "get_cell_item_orientation ( int x, int y, int z ) const, returns int"
	get_cell_item_orientation(${1:int x}, ${2:int y}, ${3:int z})$0

snippet get_cell_size "get_cell_size ( ) const, returns float"
	get_cell_size($1)$0

snippet get_center_x "get_center_x ( ) const, returns bool"
	get_center_x($1)$0

snippet get_center_y "get_center_y ( ) const, returns bool"
	get_center_y($1)$0

snippet get_center_z "get_center_z ( ) const, returns bool"
	get_center_z($1)$0

snippet get_octant_size "get_octant_size ( ) const, returns int"
	get_octant_size($1)$0

# trigger conflict with other class(es)
snippet get_theme_GridMap "get_theme ( ) const, returns MeshLibrary"
	get_theme($1)$0

snippet get_unused_area_id "get_unused_area_id ( ) const, returns int"
	get_unused_area_id($1)$0

snippet is_baking_enabled "is_baking_enabled ( ) const, returns bool"
	is_baking_enabled($1)$0

snippet is_using_baked_light "is_using_baked_light ( ) const, returns bool"
	is_using_baked_light($1)$0

# trigger conflict with other class(es)
snippet resource_changed_GridMap "resource_changed ( Object resource ), returns void"
	resource_changed(${1:Object resource})$0

snippet set_bake "set_bake ( bool enable ), returns void"
	set_bake(${1:bool enable})$0

snippet set_cell_item "set_cell_item ( int x, int y, int z, int item, int orientation=0 ), returns void"
	set_cell_item(${1:int x}, ${2:int y}, ${3:int z}, ${4:int item}, ${5:int orientation=0})$0

snippet set_cell_size "set_cell_size ( float size ), returns void"
	set_cell_size(${1:float size})$0

snippet set_center_x "set_center_x ( bool enable ), returns void"
	set_center_x(${1:bool enable})$0

snippet set_center_y "set_center_y ( bool enable ), returns void"
	set_center_y(${1:bool enable})$0

snippet set_center_z "set_center_z ( bool enable ), returns void"
	set_center_z(${1:bool enable})$0

snippet set_clip "set_clip ( bool enabled, bool clipabove=true, int floor=0, int axis=0 ), returns void"
	set_clip(${1:bool enabled}, ${2:bool clipabove=true}, ${3:int floor=0}, ${4:int axis=0})$0

snippet set_octant_size "set_octant_size ( int size ), returns void"
	set_octant_size(${1:int size})$0

# trigger conflict with other class(es)
snippet set_theme_GridMap "set_theme ( MeshLibrary theme ), returns void"
	set_theme(${1:MeshLibrary theme})$0

snippet set_use_baked_light "set_use_baked_light ( bool use ), returns void"
	set_use_baked_light(${1:bool use})$0


# Class: GrooveJoint2D
snippet get_initial_offset "get_initial_offset ( ) const, returns float"
	get_initial_offset($1)$0

# trigger conflict with other class(es)
snippet get_length_GrooveJoint2D "get_length ( ) const, returns float"
	get_length($1)$0

snippet set_initial_offset "set_initial_offset ( float offset ), returns void"
	set_initial_offset(${1:float offset})$0

# trigger conflict with other class(es)
snippet set_length_GrooveJoint2D "set_length ( float length ), returns void"
	set_length(${1:float length})$0


# Class: HingeJoint
# trigger conflict with other class(es)
snippet get_flag_HingeJoint "get_flag ( int flag ) const, returns bool"
	get_flag(${1:int flag})$0

# trigger conflict with other class(es)
snippet get_param_HingeJoint "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

# trigger conflict with other class(es)
snippet set_flag_HingeJoint "set_flag ( int flag, bool enabled ), returns void"
	set_flag(${1:int flag}, ${2:bool enabled})$0

# trigger conflict with other class(es)
snippet set_param_HingeJoint "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0


# Class: HTTPClient
# trigger conflict with other class(es)
snippet close_HTTPClient "close ( ), returns void"
	close($1)$0

# trigger conflict with other class(es)
snippet connect_HTTPClient "connect ( String host, int port, bool use_ssl=false, bool verify_host=true ), returns Error"
	connect(${1:String host}, ${2:int port}, ${3:bool use_ssl=false}, ${4:bool verify_host=true})$0

snippet get_connection "get_connection ( ) const, returns StreamPeer"
	get_connection($1)$0

snippet get_response_body_length "get_response_body_length ( ) const, returns int"
	get_response_body_length($1)$0

snippet get_response_code "get_response_code ( ) const, returns int"
	get_response_code($1)$0

snippet get_response_headers "get_response_headers ( ), returns StringArray"
	get_response_headers($1)$0

snippet get_response_headers_as_dictionary "get_response_headers_as_dictionary ( ), returns Dictionary"
	get_response_headers_as_dictionary($1)$0

snippet get_status "get_status ( ) const, returns int"
	get_status($1)$0

snippet has_response "has_response ( ) const, returns bool"
	has_response($1)$0

snippet is_blocking_mode_enabled "is_blocking_mode_enabled ( ) const, returns bool"
	is_blocking_mode_enabled($1)$0

snippet is_response_chunked "is_response_chunked ( ) const, returns bool"
	is_response_chunked($1)$0

snippet poll "poll ( ), returns Error"
	poll($1)$0

snippet query_string_from_dict "query_string_from_dict ( Dictionary fields ), returns String"
	query_string_from_dict(${1:Dictionary fields})$0

snippet read_response_body_chunk "read_response_body_chunk ( ), returns RawArray"
	read_response_body_chunk($1)$0

snippet request "request ( int method, String url, StringArray headers, String body=”” ), returns int"
	request(${1:int method}, ${2:String url}, ${3:StringArray headers}, ${4:String body=””})$0

snippet request_raw "request_raw ( int method, String url, StringArray headers, RawArray body ), returns int"
	request_raw(${1:int method}, ${2:String url}, ${3:StringArray headers}, ${4:RawArray body})$0

snippet send_body_data "send_body_data ( RawArray body ), returns int"
	send_body_data(${1:RawArray body})$0

snippet send_body_text "send_body_text ( String body ), returns int"
	send_body_text(${1:String body})$0

snippet set_blocking_mode "set_blocking_mode ( bool enabled ), returns void"
	set_blocking_mode(${1:bool enabled})$0

snippet set_connection "set_connection ( StreamPeer connection ), returns void"
	set_connection(${1:StreamPeer connection})$0

snippet set_read_chunk_size "set_read_chunk_size ( int bytes ), returns void"
	set_read_chunk_size(${1:int bytes})$0


# Class: HTTPRequest
snippet cancel_request "cancel_request ( ), returns void"
	cancel_request($1)$0

snippet get_body_size "get_body_size ( ) const, returns int"
	get_body_size($1)$0

snippet get_body_size_limit "get_body_size_limit ( ) const, returns int"
	get_body_size_limit($1)$0

snippet get_download_file "get_download_file ( ) const, returns String"
	get_download_file($1)$0

snippet get_downloaded_bytes "get_downloaded_bytes ( ) const, returns int"
	get_downloaded_bytes($1)$0

snippet get_http_client_status "get_http_client_status ( ) const, returns int"
	get_http_client_status($1)$0

snippet get_max_redirects "get_max_redirects ( ) const, returns int"
	get_max_redirects($1)$0

snippet is_using_threads "is_using_threads ( ) const, returns bool"
	is_using_threads($1)$0

# trigger conflict with other class(es)
snippet request_HTTPRequest "request ( String url, StringArray custom_headers=StringArray([]), bool ssl_validate_domain=true ), returns int"
	request(${1:String url}, ${2:StringArray custom_headers=StringArray([])}, ${3:bool ssl_validate_domain=true})$0

snippet set_body_size_limit "set_body_size_limit ( int bytes ), returns void"
	set_body_size_limit(${1:int bytes})$0

snippet set_download_file "set_download_file ( String path ), returns void"
	set_download_file(${1:String path})$0

snippet set_max_redirects "set_max_redirects ( int amount ), returns void"
	set_max_redirects(${1:int amount})$0

snippet set_use_threads "set_use_threads ( bool enable ), returns void"
	set_use_threads(${1:bool enable})$0


# Class: Image
snippet Image "Image ( int width, int height, bool mipmaps, int format ), returns Image"
	Image(${1:int width}, ${2:int height}, ${3:bool mipmaps}, ${4:int format})$0

snippet blit_rect "blit_rect ( Image src, Rect2 src_rect, Vector2 dest=0 ), returns void"
	blit_rect(${1:Image src}, ${2:Rect2 src_rect}, ${3:Vector2 dest=0})$0

snippet brush_transfer "brush_transfer ( Image src, Image brush, Vector2 pos=0 ), returns void"
	brush_transfer(${1:Image src}, ${2:Image brush}, ${3:Vector2 pos=0})$0

snippet brushed "brushed ( Image src, Image brush, Vector2 pos=0 ), returns Image"
	brushed(${1:Image src}, ${2:Image brush}, ${3:Vector2 pos=0})$0

snippet compressed "compressed ( int format=0 ), returns Image"
	compressed(${1:int format=0})$0

snippet converted "converted ( int format=0 ), returns Image"
	converted(${1:int format=0})$0

snippet decompressed "decompressed ( ), returns Image"
	decompressed($1)$0

# trigger conflict with other class(es)
snippet empty_Image "empty ( ), returns bool"
	empty($1)$0

snippet fix_alpha_edges "fix_alpha_edges ( ), returns void"
	fix_alpha_edges($1)$0

snippet get_data "get_data ( ), returns RawArray"
	get_data($1)$0

# trigger conflict with other class(es)
snippet get_format_Image "get_format ( ), returns int"
	get_format($1)$0

# trigger conflict with other class(es)
snippet get_height_Image "get_height ( ), returns int"
	get_height($1)$0

snippet get_pixel "get_pixel ( int x, int y, int mipmap_level=0 ), returns Color"
	get_pixel(${1:int x}, ${2:int y}, ${3:int mipmap_level=0})$0

# trigger conflict with other class(es)
snippet get_rect_Image "get_rect ( Rect2 area=0 ), returns Image"
	get_rect(${1:Rect2 area=0})$0

snippet get_used_rect "get_used_rect ( ), returns Rect2"
	get_used_rect($1)$0

# trigger conflict with other class(es)
snippet get_width_Image "get_width ( ), returns int"
	get_width($1)$0

# trigger conflict with other class(es)
snippet load_Image "load ( String path=0 ), returns int"
	load(${1:String path=0})$0

snippet put_pixel "put_pixel ( int x, int y, Color color, int mipmap_level=0 ), returns void"
	put_pixel(${1:int x}, ${2:int y}, ${3:Color color}, ${4:int mipmap_level=0})$0

snippet resized "resized ( int x, int y, int interpolation=1 ), returns Image"
	resized(${1:int x}, ${2:int y}, ${3:int interpolation=1})$0

snippet save_png "save_png ( String path=0 ), returns int"
	save_png(${1:String path=0})$0


# Class: ImageTexture
# trigger conflict with other class(es)
snippet create_ImageTexture "create ( int width, int height, int format, int flags=7 ), returns void"
	create(${1:int width}, ${2:int height}, ${3:int format}, ${4:int flags=7})$0

snippet create_from_image "create_from_image ( Image image, int flags=7 ), returns void"
	create_from_image(${1:Image image}, ${2:int flags=7})$0

# trigger conflict with other class(es)
snippet fix_alpha_edges_ImageTexture "fix_alpha_edges ( ), returns void"
	fix_alpha_edges($1)$0

# trigger conflict with other class(es)
snippet get_data_ImageTexture "get_data ( ) const, returns Image"
	get_data($1)$0

# trigger conflict with other class(es)
snippet get_format_ImageTexture "get_format ( ) const, returns int"
	get_format($1)$0

# trigger conflict with other class(es)
snippet get_lossy_storage_quality_ImageTexture "get_lossy_storage_quality ( ) const, returns float"
	get_lossy_storage_quality($1)$0

# trigger conflict with other class(es)
snippet get_storage_ImageTexture "get_storage ( ) const, returns int"
	get_storage($1)$0

# trigger conflict with other class(es)
snippet load_ImageTexture "load ( String path ), returns void"
	load(${1:String path})$0

snippet normal_to_xy "normal_to_xy ( ), returns void"
	normal_to_xy($1)$0

snippet premultiply_alpha "premultiply_alpha ( ), returns void"
	premultiply_alpha($1)$0

snippet set_data "set_data ( Image image ), returns void"
	set_data(${1:Image image})$0

# trigger conflict with other class(es)
snippet set_lossy_storage_quality_ImageTexture "set_lossy_storage_quality ( float quality ), returns void"
	set_lossy_storage_quality(${1:float quality})$0

snippet set_size_override "set_size_override ( Vector2 size ), returns void"
	set_size_override(${1:Vector2 size})$0

# trigger conflict with other class(es)
snippet set_storage_ImageTexture "set_storage ( int mode ), returns void"
	set_storage(${1:int mode})$0

snippet shrink_x2_and_keep_size "shrink_x2_and_keep_size ( ), returns void"
	shrink_x2_and_keep_size($1)$0


# Class: ImmediateGeometry
snippet add_sphere "add_sphere ( int lats, int lons, float radius ), returns void"
	add_sphere(${1:int lats}, ${2:int lons}, ${3:float radius})$0

snippet add_vertex "add_vertex ( Vector3 pos ), returns void"
	add_vertex(${1:Vector3 pos})$0

snippet begin "begin ( int primitive, Texture texture=NULL ), returns void"
	begin(${1:int primitive}, ${2:Texture texture=NULL})$0

# trigger conflict with other class(es)
snippet clear_ImmediateGeometry "clear ( ), returns void"
	clear($1)$0

snippet end "end ( ), returns void"
	end($1)$0

# trigger conflict with other class(es)
snippet set_color_ImmediateGeometry "set_color ( Color color ), returns void"
	set_color(${1:Color color})$0

snippet set_normal "set_normal ( Vector3 normal ), returns void"
	set_normal(${1:Vector3 normal})$0

snippet set_tangent "set_tangent ( Plane tangent ), returns void"
	set_tangent(${1:Plane tangent})$0

snippet set_uv "set_uv ( Vector2 uv ), returns void"
	set_uv(${1:Vector2 uv})$0

snippet set_uv2 "set_uv2 ( Vector2 uv ), returns void"
	set_uv2(${1:Vector2 uv})$0


# Class: Input
snippet action_press "action_press ( String action ), returns void"
	action_press(${1:String action})$0

snippet action_release "action_release ( String action ), returns void"
	action_release(${1:String action})$0

snippet add_joy_mapping "add_joy_mapping ( String mapping, bool update_existing=false ), returns void"
	add_joy_mapping(${1:String mapping}, ${2:bool update_existing=false})$0

snippet get_accelerometer "get_accelerometer ( ), returns Vector3"
	get_accelerometer($1)$0

snippet get_connected_joysticks "get_connected_joysticks ( ), returns Array"
	get_connected_joysticks($1)$0

snippet get_gyroscope "get_gyroscope ( ), returns Vector3"
	get_gyroscope($1)$0

snippet get_joy_axis "get_joy_axis ( int device, int axis ), returns float"
	get_joy_axis(${1:int device}, ${2:int axis})$0

snippet get_joy_guid "get_joy_guid ( int device ) const, returns String"
	get_joy_guid(${1:int device})$0

snippet get_joy_name "get_joy_name ( int device ), returns String"
	get_joy_name(${1:int device})$0

snippet get_joy_vibration_duration "get_joy_vibration_duration ( int device ), returns float"
	get_joy_vibration_duration(${1:int device})$0

snippet get_joy_vibration_strength "get_joy_vibration_strength ( int device ), returns Vector2"
	get_joy_vibration_strength(${1:int device})$0

snippet get_magnetometer "get_magnetometer ( ), returns Vector3"
	get_magnetometer($1)$0

snippet get_mouse_button_mask "get_mouse_button_mask ( ) const, returns int"
	get_mouse_button_mask($1)$0

snippet get_mouse_mode "get_mouse_mode ( ) const, returns int"
	get_mouse_mode($1)$0

snippet get_mouse_speed "get_mouse_speed ( ) const, returns Vector2"
	get_mouse_speed($1)$0

snippet is_action_pressed "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

snippet is_joy_button_pressed "is_joy_button_pressed ( int device, int button ), returns bool"
	is_joy_button_pressed(${1:int device}, ${2:int button})$0

snippet is_joy_known "is_joy_known ( int device ), returns bool"
	is_joy_known(${1:int device})$0

snippet is_key_pressed "is_key_pressed ( int scancode ), returns bool"
	is_key_pressed(${1:int scancode})$0

snippet is_mouse_button_pressed "is_mouse_button_pressed ( int button ), returns bool"
	is_mouse_button_pressed(${1:int button})$0

snippet remove_joy_mapping "remove_joy_mapping ( String guid ), returns void"
	remove_joy_mapping(${1:String guid})$0

snippet set_custom_mouse_cursor "set_custom_mouse_cursor ( Texture image, Vector2 hotspot=Vector2(0, 0) ), returns void"
	set_custom_mouse_cursor(${1:Texture image}, ${2:Vector2 hotspot=Vector2(0}, ${3:0)})$0

snippet set_mouse_mode "set_mouse_mode ( int mode ), returns void"
	set_mouse_mode(${1:int mode})$0

snippet start_joy_vibration "start_joy_vibration ( int device, float weak_magnitude, float strong_magnitude, float duration=0 ), returns void"
	start_joy_vibration(${1:int device}, ${2:float weak_magnitude}, ${3:float strong_magnitude}, ${4:float duration=0})$0

snippet stop_joy_vibration "stop_joy_vibration ( int device ), returns void"
	stop_joy_vibration(${1:int device})$0

snippet warp_mouse_pos "warp_mouse_pos ( Vector2 to ), returns void"
	warp_mouse_pos(${1:Vector2 to})$0


# Class: InputEvent
snippet is_action "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEvent "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

snippet is_action_released "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

snippet is_echo "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEvent "is_pressed ( ), returns bool"
	is_pressed($1)$0

snippet set_as_action "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventAction
# trigger conflict with other class(es)
snippet is_action_InputEventAction "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventAction "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventAction "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventAction "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventAction "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventAction "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventJoystickButton
# trigger conflict with other class(es)
snippet is_action_InputEventJoystickButton "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventJoystickButton "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventJoystickButton "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventJoystickButton "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventJoystickButton "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventJoystickButton "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventJoystickMotion
# trigger conflict with other class(es)
snippet is_action_InputEventJoystickMotion "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventJoystickMotion "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventJoystickMotion "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventJoystickMotion "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventJoystickMotion "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventJoystickMotion "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventKey
# trigger conflict with other class(es)
snippet is_action_InputEventKey "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventKey "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventKey "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventKey "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventKey "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventKey "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventMouseButton
# trigger conflict with other class(es)
snippet is_action_InputEventMouseButton "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventMouseButton "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventMouseButton "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventMouseButton "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventMouseButton "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventMouseButton "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventMouseMotion
# trigger conflict with other class(es)
snippet is_action_InputEventMouseMotion "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventMouseMotion "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventMouseMotion "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventMouseMotion "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventMouseMotion "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventMouseMotion "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventScreenDrag
# trigger conflict with other class(es)
snippet is_action_InputEventScreenDrag "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventScreenDrag "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventScreenDrag "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventScreenDrag "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventScreenDrag "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventScreenDrag "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputEventScreenTouch
# trigger conflict with other class(es)
snippet is_action_InputEventScreenTouch "is_action ( String action ), returns bool"
	is_action(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_pressed_InputEventScreenTouch "is_action_pressed ( String action ), returns bool"
	is_action_pressed(${1:String action})$0

# trigger conflict with other class(es)
snippet is_action_released_InputEventScreenTouch "is_action_released ( String action ), returns bool"
	is_action_released(${1:String action})$0

# trigger conflict with other class(es)
snippet is_echo_InputEventScreenTouch "is_echo ( ), returns bool"
	is_echo($1)$0

# trigger conflict with other class(es)
snippet is_pressed_InputEventScreenTouch "is_pressed ( ), returns bool"
	is_pressed($1)$0

# trigger conflict with other class(es)
snippet set_as_action_InputEventScreenTouch "set_as_action ( String action, bool pressed ), returns void"
	set_as_action(${1:String action}, ${2:bool pressed})$0


# Class: InputMap
snippet action_add_event "action_add_event ( String action, InputEvent event ), returns void"
	action_add_event(${1:String action}, ${2:InputEvent event})$0

snippet action_erase_event "action_erase_event ( String action, InputEvent event ), returns void"
	action_erase_event(${1:String action}, ${2:InputEvent event})$0

snippet action_has_event "action_has_event ( String action, InputEvent event ), returns bool"
	action_has_event(${1:String action}, ${2:InputEvent event})$0

snippet add_action "add_action ( String action ), returns void"
	add_action(${1:String action})$0

snippet erase_action "erase_action ( String action ), returns void"
	erase_action(${1:String action})$0

snippet event_is_action "event_is_action ( InputEvent event, String action ) const, returns bool"
	event_is_action(${1:InputEvent event}, ${2:String action})$0

snippet get_action_from_id "get_action_from_id ( int id ) const, returns String"
	get_action_from_id(${1:int id})$0

snippet get_action_id "get_action_id ( String action ) const, returns int"
	get_action_id(${1:String action})$0

snippet get_action_list "get_action_list ( String action ), returns Array"
	get_action_list(${1:String action})$0

snippet get_actions "get_actions ( ), returns Array"
	get_actions($1)$0

snippet has_action "has_action ( String action ) const, returns bool"
	has_action(${1:String action})$0

snippet load_from_globals "load_from_globals ( ), returns void"
	load_from_globals($1)$0


# Class: InstancePlaceholder
snippet get_instance_path "get_instance_path ( ) const, returns String"
	get_instance_path($1)$0

snippet replace_by_instance "replace_by_instance ( PackedScene custom_scene=NULL ), returns void"
	replace_by_instance(${1:PackedScene custom_scene=NULL})$0


# Class: int
# not-unique trigger detected in this class: int; snippet commented
#snippet int "int ( bool from ), returns int"
#	int(bool from)$0

# not-unique trigger detected in this class: int; snippet commented
#snippet int "int ( float from ), returns int"
#	int(float from)$0

snippet int "int ( String from ), returns int"
	int(${1:String from})$0


# Class: IntArray
snippet IntArray "IntArray ( Array from ), returns IntArray"
	IntArray(${1:Array from})$0

# trigger conflict with other class(es)
snippet append_IntArray "append ( int integer ), returns void"
	append(${1:int integer})$0

# trigger conflict with other class(es)
snippet append_array_IntArray "append_array ( IntArray array ), returns void"
	append_array(${1:IntArray array})$0

# trigger conflict with other class(es)
snippet insert_IntArray "insert ( int idx, int integer ), returns int"
	insert(${1:int idx}, ${2:int integer})$0

# trigger conflict with other class(es)
snippet invert_IntArray "invert ( ), returns void"
	invert($1)$0

# trigger conflict with other class(es)
snippet push_back_IntArray "push_back ( int integer ), returns void"
	push_back(${1:int integer})$0

# trigger conflict with other class(es)
snippet remove_IntArray "remove ( int idx ), returns void"
	remove(${1:int idx})$0

# trigger conflict with other class(es)
snippet resize_IntArray "resize ( int idx ), returns void"
	resize(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_IntArray "set ( int idx, int integer ), returns void"
	set(${1:int idx}, ${2:int integer})$0

# trigger conflict with other class(es)
snippet size_IntArray "size ( ), returns int"
	size($1)$0


# Class: InterpolatedCamera
# trigger conflict with other class(es)
snippet get_speed_InterpolatedCamera "get_speed ( ) const, returns float"
	get_speed($1)$0

snippet get_target_path "get_target_path ( ) const, returns NodePath"
	get_target_path($1)$0

snippet is_interpolation_enabled "is_interpolation_enabled ( ) const, returns bool"
	is_interpolation_enabled($1)$0

snippet set_interpolation_enabled "set_interpolation_enabled ( bool target_path ), returns void"
	set_interpolation_enabled(${1:bool target_path})$0

# trigger conflict with other class(es)
snippet set_speed_InterpolatedCamera "set_speed ( float speed ), returns void"
	set_speed(${1:float speed})$0

snippet set_target "set_target ( Camera target ), returns void"
	set_target(${1:Camera target})$0

snippet set_target_path "set_target_path ( NodePath target_path ), returns void"
	set_target_path(${1:NodePath target_path})$0


# Class: InverseKinematics
snippet get_bone_name "get_bone_name ( ) const, returns String"
	get_bone_name($1)$0

snippet get_chain_size "get_chain_size ( ) const, returns int"
	get_chain_size($1)$0

snippet get_iterations "get_iterations ( ) const, returns int"
	get_iterations($1)$0

snippet get_precision "get_precision ( ) const, returns float"
	get_precision($1)$0

# trigger conflict with other class(es)
snippet get_speed_InverseKinematics "get_speed ( ) const, returns float"
	get_speed($1)$0

snippet set_bone_name "set_bone_name ( String ik_bone ), returns void"
	set_bone_name(${1:String ik_bone})$0

snippet set_chain_size "set_chain_size ( int chain_size ), returns void"
	set_chain_size(${1:int chain_size})$0

snippet set_iterations "set_iterations ( int iterations ), returns void"
	set_iterations(${1:int iterations})$0

snippet set_precision "set_precision ( float precision ), returns void"
	set_precision(${1:float precision})$0

# trigger conflict with other class(es)
snippet set_speed_InverseKinematics "set_speed ( float speed ), returns void"
	set_speed(${1:float speed})$0


# Class: IP
snippet erase_resolve_item "erase_resolve_item ( int id ), returns void"
	erase_resolve_item(${1:int id})$0

snippet get_local_addresses "get_local_addresses ( ) const, returns Array"
	get_local_addresses($1)$0

snippet get_resolve_item_address "get_resolve_item_address ( int id ) const, returns String"
	get_resolve_item_address(${1:int id})$0

snippet get_resolve_item_status "get_resolve_item_status ( int id ) const, returns int"
	get_resolve_item_status(${1:int id})$0

snippet resolve_hostname "resolve_hostname ( String host ), returns String"
	resolve_hostname(${1:String host})$0

snippet resolve_hostname_queue_item "resolve_hostname_queue_item ( String host ), returns int"
	resolve_hostname_queue_item(${1:String host})$0


# Class: ItemList
snippet add_icon_item "add_icon_item ( Texture icon, bool selectable=true ), returns void"
	add_icon_item(${1:Texture icon}, ${2:bool selectable=true})$0

snippet add_item "add_item ( String text, Texture icon=NULL, bool selectable=true ), returns void"
	add_item(${1:String text}, ${2:Texture icon=NULL}, ${3:bool selectable=true})$0

# trigger conflict with other class(es)
snippet clear_ItemList "clear ( ), returns void"
	clear($1)$0

snippet ensure_current_is_visible "ensure_current_is_visible ( ), returns void"
	ensure_current_is_visible($1)$0

snippet get_allow_rmb_select "get_allow_rmb_select ( ) const, returns bool"
	get_allow_rmb_select($1)$0

snippet get_fixed_column_width "get_fixed_column_width ( ) const, returns int"
	get_fixed_column_width($1)$0

snippet get_fixed_icon_size "get_fixed_icon_size ( ) const, returns Vector2"
	get_fixed_icon_size($1)$0

snippet get_icon_mode "get_icon_mode ( ) const, returns int"
	get_icon_mode($1)$0

snippet get_icon_scale "get_icon_scale ( ) const, returns float"
	get_icon_scale($1)$0

snippet get_item_at_pos "get_item_at_pos ( Vector2 pos, bool exact=false ) const, returns int"
	get_item_at_pos(${1:Vector2 pos}, ${2:bool exact=false})$0

snippet get_item_count "get_item_count ( ) const, returns int"
	get_item_count($1)$0

snippet get_item_custom_bg_color "get_item_custom_bg_color ( int idx ) const, returns Color"
	get_item_custom_bg_color(${1:int idx})$0

snippet get_item_icon "get_item_icon ( int idx ) const, returns Texture"
	get_item_icon(${1:int idx})$0

snippet get_item_icon_region "get_item_icon_region ( int idx ) const, returns Rect2"
	get_item_icon_region(${1:int idx})$0

snippet get_item_metadata "get_item_metadata ( int idx ) const, returns void"
	get_item_metadata(${1:int idx})$0

snippet get_item_text "get_item_text ( int idx ) const, returns String"
	get_item_text(${1:int idx})$0

snippet get_item_tooltip "get_item_tooltip ( int idx ) const, returns String"
	get_item_tooltip(${1:int idx})$0

snippet get_max_columns "get_max_columns ( ) const, returns int"
	get_max_columns($1)$0

snippet get_max_text_lines "get_max_text_lines ( ) const, returns int"
	get_max_text_lines($1)$0

snippet get_select_mode "get_select_mode ( ) const, returns int"
	get_select_mode($1)$0

snippet get_selected_items "get_selected_items ( ), returns IntArray"
	get_selected_items($1)$0

snippet is_item_disabled "is_item_disabled ( int idx ) const, returns bool"
	is_item_disabled(${1:int idx})$0

snippet is_item_selectable "is_item_selectable ( int idx ) const, returns bool"
	is_item_selectable(${1:int idx})$0

snippet is_same_column_width "is_same_column_width ( ) const, returns int"
	is_same_column_width($1)$0

snippet is_selected "is_selected ( int idx ) const, returns bool"
	is_selected(${1:int idx})$0

snippet remove_item "remove_item ( int idx ), returns void"
	remove_item(${1:int idx})$0

snippet select "select ( int idx, bool single=true ), returns void"
	select(${1:int idx}, ${2:bool single=true})$0

snippet set_allow_rmb_select "set_allow_rmb_select ( bool allow ), returns void"
	set_allow_rmb_select(${1:bool allow})$0

snippet set_fixed_column_width "set_fixed_column_width ( int width ), returns void"
	set_fixed_column_width(${1:int width})$0

snippet set_fixed_icon_size "set_fixed_icon_size ( Vector2 size ), returns void"
	set_fixed_icon_size(${1:Vector2 size})$0

snippet set_icon_mode "set_icon_mode ( int mode ), returns void"
	set_icon_mode(${1:int mode})$0

snippet set_icon_scale "set_icon_scale ( float scale ), returns void"
	set_icon_scale(${1:float scale})$0

snippet set_item_custom_bg_color "set_item_custom_bg_color ( int idx, Color custom_bg_color ), returns void"
	set_item_custom_bg_color(${1:int idx}, ${2:Color custom_bg_color})$0

snippet set_item_disabled "set_item_disabled ( int idx, bool disabled ), returns void"
	set_item_disabled(${1:int idx}, ${2:bool disabled})$0

snippet set_item_icon "set_item_icon ( int idx, Texture icon ), returns void"
	set_item_icon(${1:int idx}, ${2:Texture icon})$0

snippet set_item_icon_region "set_item_icon_region ( int idx, Rect2 rect ), returns void"
	set_item_icon_region(${1:int idx}, ${2:Rect2 rect})$0

snippet set_item_metadata "set_item_metadata ( int idx, Variant metadata ), returns void"
	set_item_metadata(${1:int idx}, ${2:Variant metadata})$0

snippet set_item_selectable "set_item_selectable ( int idx, bool selectable ), returns void"
	set_item_selectable(${1:int idx}, ${2:bool selectable})$0

snippet set_item_text "set_item_text ( int idx, String text ), returns void"
	set_item_text(${1:int idx}, ${2:String text})$0

snippet set_item_tooltip "set_item_tooltip ( int idx, String tooltip ), returns void"
	set_item_tooltip(${1:int idx}, ${2:String tooltip})$0

snippet set_max_columns "set_max_columns ( int amount ), returns void"
	set_max_columns(${1:int amount})$0

snippet set_max_text_lines "set_max_text_lines ( int lines ), returns void"
	set_max_text_lines(${1:int lines})$0

snippet set_same_column_width "set_same_column_width ( bool enable ), returns void"
	set_same_column_width(${1:bool enable})$0

snippet set_select_mode "set_select_mode ( int mode ), returns void"
	set_select_mode(${1:int mode})$0

snippet sort_items_by_text "sort_items_by_text ( ), returns void"
	sort_items_by_text($1)$0

snippet unselect "unselect ( int idx ), returns void"
	unselect(${1:int idx})$0


# Class: Joint
snippet get_exclude_nodes_from_collision "get_exclude_nodes_from_collision ( ) const, returns bool"
	get_exclude_nodes_from_collision($1)$0

snippet get_node_a "get_node_a ( ) const, returns NodePath"
	get_node_a($1)$0

snippet get_node_b "get_node_b ( ) const, returns NodePath"
	get_node_b($1)$0

snippet get_solver_priority "get_solver_priority ( ) const, returns int"
	get_solver_priority($1)$0

snippet set_exclude_nodes_from_collision "set_exclude_nodes_from_collision ( bool enable ), returns void"
	set_exclude_nodes_from_collision(${1:bool enable})$0

snippet set_node_a "set_node_a ( NodePath node ), returns void"
	set_node_a(${1:NodePath node})$0

snippet set_node_b "set_node_b ( NodePath node ), returns void"
	set_node_b(${1:NodePath node})$0

snippet set_solver_priority "set_solver_priority ( int priority ), returns void"
	set_solver_priority(${1:int priority})$0


# Class: Joint2D
snippet get_bias "get_bias ( ) const, returns float"
	get_bias($1)$0

# trigger conflict with other class(es)
snippet get_exclude_nodes_from_collision_Joint2D "get_exclude_nodes_from_collision ( ) const, returns bool"
	get_exclude_nodes_from_collision($1)$0

# trigger conflict with other class(es)
snippet get_node_a_Joint2D "get_node_a ( ) const, returns NodePath"
	get_node_a($1)$0

# trigger conflict with other class(es)
snippet get_node_b_Joint2D "get_node_b ( ) const, returns NodePath"
	get_node_b($1)$0

snippet set_bias "set_bias ( float bias ), returns void"
	set_bias(${1:float bias})$0

# trigger conflict with other class(es)
snippet set_exclude_nodes_from_collision_Joint2D "set_exclude_nodes_from_collision ( bool enable ), returns void"
	set_exclude_nodes_from_collision(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_node_a_Joint2D "set_node_a ( NodePath node ), returns void"
	set_node_a(${1:NodePath node})$0

# trigger conflict with other class(es)
snippet set_node_b_Joint2D "set_node_b ( NodePath node ), returns void"
	set_node_b(${1:NodePath node})$0


# Class: KinematicBody
snippet can_collide_with_character_bodies "can_collide_with_character_bodies ( ) const, returns bool"
	can_collide_with_character_bodies($1)$0

snippet can_collide_with_kinematic_bodies "can_collide_with_kinematic_bodies ( ) const, returns bool"
	can_collide_with_kinematic_bodies($1)$0

snippet can_collide_with_rigid_bodies "can_collide_with_rigid_bodies ( ) const, returns bool"
	can_collide_with_rigid_bodies($1)$0

snippet can_collide_with_static_bodies "can_collide_with_static_bodies ( ) const, returns bool"
	can_collide_with_static_bodies($1)$0

snippet can_teleport_to "can_teleport_to ( Vector3 position ), returns bool"
	can_teleport_to(${1:Vector3 position})$0

snippet get_collider "get_collider ( ) const, returns Object"
	get_collider($1)$0

snippet get_collider_shape "get_collider_shape ( ) const, returns int"
	get_collider_shape($1)$0

snippet get_collider_velocity "get_collider_velocity ( ) const, returns Vector3"
	get_collider_velocity($1)$0

snippet get_collision_margin "get_collision_margin ( ) const, returns float"
	get_collision_margin($1)$0

snippet get_collision_normal "get_collision_normal ( ) const, returns Vector3"
	get_collision_normal($1)$0

snippet get_collision_pos "get_collision_pos ( ) const, returns Vector3"
	get_collision_pos($1)$0

snippet is_colliding "is_colliding ( ) const, returns bool"
	is_colliding($1)$0

snippet move "move ( Vector3 rel_vec ), returns Vector3"
	move(${1:Vector3 rel_vec})$0

snippet move_to "move_to ( Vector3 position ), returns Vector3"
	move_to(${1:Vector3 position})$0

snippet set_collide_with_character_bodies "set_collide_with_character_bodies ( bool enable ), returns void"
	set_collide_with_character_bodies(${1:bool enable})$0

snippet set_collide_with_kinematic_bodies "set_collide_with_kinematic_bodies ( bool enable ), returns void"
	set_collide_with_kinematic_bodies(${1:bool enable})$0

snippet set_collide_with_rigid_bodies "set_collide_with_rigid_bodies ( bool enable ), returns void"
	set_collide_with_rigid_bodies(${1:bool enable})$0

snippet set_collide_with_static_bodies "set_collide_with_static_bodies ( bool enable ), returns void"
	set_collide_with_static_bodies(${1:bool enable})$0

snippet set_collision_margin "set_collision_margin ( float pixels ), returns void"
	set_collision_margin(${1:float pixels})$0


# Class: KinematicBody2D
# trigger conflict with other class(es)
snippet get_collider_KinematicBody2D "get_collider ( ) const, returns Object"
	get_collider($1)$0

snippet get_collider_metadata "get_collider_metadata ( ) const, returns Variant"
	get_collider_metadata($1)$0

# trigger conflict with other class(es)
snippet get_collider_shape_KinematicBody2D "get_collider_shape ( ) const, returns int"
	get_collider_shape($1)$0

# trigger conflict with other class(es)
snippet get_collider_velocity_KinematicBody2D "get_collider_velocity ( ) const, returns Vector2"
	get_collider_velocity($1)$0

# trigger conflict with other class(es)
snippet get_collision_margin_KinematicBody2D "get_collision_margin ( ) const, returns float"
	get_collision_margin($1)$0

# trigger conflict with other class(es)
snippet get_collision_normal_KinematicBody2D "get_collision_normal ( ) const, returns Vector2"
	get_collision_normal($1)$0

# trigger conflict with other class(es)
snippet get_collision_pos_KinematicBody2D "get_collision_pos ( ) const, returns Vector2"
	get_collision_pos($1)$0

snippet get_travel "get_travel ( ) const, returns Vector2"
	get_travel($1)$0

# trigger conflict with other class(es)
snippet is_colliding_KinematicBody2D "is_colliding ( ) const, returns bool"
	is_colliding($1)$0

# trigger conflict with other class(es)
snippet move_KinematicBody2D "move ( Vector2 rel_vec ), returns Vector2"
	move(${1:Vector2 rel_vec})$0

# trigger conflict with other class(es)
snippet move_to_KinematicBody2D "move_to ( Vector2 position ), returns Vector2"
	move_to(${1:Vector2 position})$0

snippet revert_motion "revert_motion ( ), returns void"
	revert_motion($1)$0

# trigger conflict with other class(es)
snippet set_collision_margin_KinematicBody2D "set_collision_margin ( float pixels ), returns void"
	set_collision_margin(${1:float pixels})$0

snippet test_move "test_move ( Vector2 rel_vec ), returns bool"
	test_move(${1:Vector2 rel_vec})$0


# Class: Label
snippet get_align "get_align ( ) const, returns int"
	get_align($1)$0

snippet get_line_count "get_line_count ( ) const, returns int"
	get_line_count($1)$0

snippet get_line_height "get_line_height ( ) const, returns int"
	get_line_height($1)$0

snippet get_lines_skipped "get_lines_skipped ( ) const, returns int"
	get_lines_skipped($1)$0

snippet get_max_lines_visible "get_max_lines_visible ( ) const, returns int"
	get_max_lines_visible($1)$0

snippet get_percent_visible "get_percent_visible ( ) const, returns float"
	get_percent_visible($1)$0

# trigger conflict with other class(es)
snippet get_text_Label "get_text ( ) const, returns String"
	get_text($1)$0

snippet get_total_character_count "get_total_character_count ( ) const, returns int"
	get_total_character_count($1)$0

snippet get_valign "get_valign ( ) const, returns int"
	get_valign($1)$0

snippet get_visible_characters "get_visible_characters ( ) const, returns int"
	get_visible_characters($1)$0

snippet get_visible_line_count "get_visible_line_count ( ) const, returns int"
	get_visible_line_count($1)$0

snippet has_autowrap "has_autowrap ( ) const, returns bool"
	has_autowrap($1)$0

snippet is_clipping_text "is_clipping_text ( ) const, returns bool"
	is_clipping_text($1)$0

snippet is_uppercase "is_uppercase ( ) const, returns bool"
	is_uppercase($1)$0

snippet set_align "set_align ( int align ), returns void"
	set_align(${1:int align})$0

snippet set_autowrap "set_autowrap ( bool enable ), returns void"
	set_autowrap(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_clip_text_Label "set_clip_text ( bool enable ), returns void"
	set_clip_text(${1:bool enable})$0

snippet set_lines_skipped "set_lines_skipped ( int lines_skipped ), returns void"
	set_lines_skipped(${1:int lines_skipped})$0

snippet set_max_lines_visible "set_max_lines_visible ( int lines_visible ), returns void"
	set_max_lines_visible(${1:int lines_visible})$0

snippet set_percent_visible "set_percent_visible ( float percent_visible ), returns void"
	set_percent_visible(${1:float percent_visible})$0

# trigger conflict with other class(es)
snippet set_text_Label "set_text ( String text ), returns void"
	set_text(${1:String text})$0

snippet set_uppercase "set_uppercase ( bool enable ), returns void"
	set_uppercase(${1:bool enable})$0

snippet set_valign "set_valign ( int valign ), returns void"
	set_valign(${1:int valign})$0

snippet set_visible_characters "set_visible_characters ( int amount ), returns void"
	set_visible_characters(${1:int amount})$0


# Class: LargeTexture
snippet add_piece "add_piece ( Vector2 ofs, Texture texture ), returns int"
	add_piece(${1:Vector2 ofs}, ${2:Texture texture})$0

# trigger conflict with other class(es)
snippet clear_LargeTexture "clear ( ), returns void"
	clear($1)$0

snippet get_piece_count "get_piece_count ( ) const, returns int"
	get_piece_count($1)$0

snippet get_piece_offset "get_piece_offset ( int idx ) const, returns Vector2"
	get_piece_offset(${1:int idx})$0

snippet get_piece_texture "get_piece_texture ( int idx ) const, returns Texture"
	get_piece_texture(${1:int idx})$0

snippet set_piece_offset "set_piece_offset ( int idx, Vector2 ofs ), returns void"
	set_piece_offset(${1:int idx}, ${2:Vector2 ofs})$0

snippet set_piece_texture "set_piece_texture ( int idx, Texture texture ), returns void"
	set_piece_texture(${1:int idx}, ${2:Texture texture})$0

# trigger conflict with other class(es)
snippet set_size_LargeTexture "set_size ( Vector2 size ), returns void"
	set_size(${1:Vector2 size})$0


# Class: Light
snippet get_bake_mode "get_bake_mode ( ) const, returns int"
	get_bake_mode($1)$0

# trigger conflict with other class(es)
snippet get_color_Light "get_color ( int color ) const, returns Color"
	get_color(${1:int color})$0

snippet get_operator "get_operator ( ) const, returns int"
	get_operator($1)$0

# trigger conflict with other class(es)
snippet get_parameter_Light "get_parameter ( int variable ) const, returns float"
	get_parameter(${1:int variable})$0

snippet get_projector "get_projector ( ) const, returns Texture"
	get_projector($1)$0

snippet has_project_shadows "has_project_shadows ( ) const, returns bool"
	has_project_shadows($1)$0

snippet is_editor_only "is_editor_only ( ) const, returns bool"
	is_editor_only($1)$0

snippet is_enabled "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

snippet set_bake_mode "set_bake_mode ( int bake_mode ), returns void"
	set_bake_mode(${1:int bake_mode})$0

# trigger conflict with other class(es)
snippet set_color_Light "set_color ( int color, Color value ), returns void"
	set_color(${1:int color}, ${2:Color value})$0

snippet set_editor_only "set_editor_only ( bool editor_only ), returns void"
	set_editor_only(${1:bool editor_only})$0

snippet set_enabled "set_enabled ( bool enabled ), returns void"
	set_enabled(${1:bool enabled})$0

snippet set_operator "set_operator ( int operator ), returns void"
	set_operator(${1:int operator})$0

# trigger conflict with other class(es)
snippet set_parameter_Light "set_parameter ( int variable, float value ), returns void"
	set_parameter(${1:int variable}, ${2:float value})$0

snippet set_project_shadows "set_project_shadows ( bool enable ), returns void"
	set_project_shadows(${1:bool enable})$0

snippet set_projector "set_projector ( Texture projector ), returns void"
	set_projector(${1:Texture projector})$0


# Class: Light2D
# trigger conflict with other class(es)
snippet get_color_Light2D "get_color ( ) const, returns Color"
	get_color($1)$0

snippet get_energy "get_energy ( ) const, returns float"
	get_energy($1)$0

# trigger conflict with other class(es)
snippet get_height_Light2D "get_height ( ) const, returns float"
	get_height($1)$0

snippet get_item_mask "get_item_mask ( ) const, returns int"
	get_item_mask($1)$0

snippet get_item_shadow_mask "get_item_shadow_mask ( ) const, returns int"
	get_item_shadow_mask($1)$0

snippet get_layer_range_max "get_layer_range_max ( ) const, returns int"
	get_layer_range_max($1)$0

snippet get_layer_range_min "get_layer_range_min ( ) const, returns int"
	get_layer_range_min($1)$0

# trigger conflict with other class(es)
snippet get_mode_Light2D "get_mode ( ) const, returns int"
	get_mode($1)$0

snippet get_shadow_buffer_size "get_shadow_buffer_size ( ) const, returns int"
	get_shadow_buffer_size($1)$0

snippet get_shadow_color "get_shadow_color ( ) const, returns Color"
	get_shadow_color($1)$0

snippet get_shadow_esm_multiplier "get_shadow_esm_multiplier ( ) const, returns float"
	get_shadow_esm_multiplier($1)$0

# trigger conflict with other class(es)
snippet get_texture_Light2D "get_texture ( ) const, returns Object"
	get_texture($1)$0

snippet get_texture_offset "get_texture_offset ( ) const, returns Vector2"
	get_texture_offset($1)$0

snippet get_texture_scale "get_texture_scale ( ) const, returns float"
	get_texture_scale($1)$0

snippet get_z_range_max "get_z_range_max ( ) const, returns int"
	get_z_range_max($1)$0

snippet get_z_range_min "get_z_range_min ( ) const, returns int"
	get_z_range_min($1)$0

# trigger conflict with other class(es)
snippet is_enabled_Light2D "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

snippet is_shadow_enabled "is_shadow_enabled ( ) const, returns bool"
	is_shadow_enabled($1)$0

# trigger conflict with other class(es)
snippet set_color_Light2D "set_color ( Color color ), returns void"
	set_color(${1:Color color})$0

# trigger conflict with other class(es)
snippet set_enabled_Light2D "set_enabled ( bool enabled ), returns void"
	set_enabled(${1:bool enabled})$0

snippet set_energy "set_energy ( float energy ), returns void"
	set_energy(${1:float energy})$0

# trigger conflict with other class(es)
snippet set_height_Light2D "set_height ( float height ), returns void"
	set_height(${1:float height})$0

snippet set_item_mask "set_item_mask ( int item_mask ), returns void"
	set_item_mask(${1:int item_mask})$0

snippet set_item_shadow_mask "set_item_shadow_mask ( int item_shadow_mask ), returns void"
	set_item_shadow_mask(${1:int item_shadow_mask})$0

snippet set_layer_range_max "set_layer_range_max ( int layer ), returns void"
	set_layer_range_max(${1:int layer})$0

snippet set_layer_range_min "set_layer_range_min ( int layer ), returns void"
	set_layer_range_min(${1:int layer})$0

# trigger conflict with other class(es)
snippet set_mode_Light2D "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

snippet set_shadow_buffer_size "set_shadow_buffer_size ( int size ), returns void"
	set_shadow_buffer_size(${1:int size})$0

snippet set_shadow_color "set_shadow_color ( Color shadow_color ), returns void"
	set_shadow_color(${1:Color shadow_color})$0

snippet set_shadow_enabled "set_shadow_enabled ( bool enabled ), returns void"
	set_shadow_enabled(${1:bool enabled})$0

snippet set_shadow_esm_multiplier "set_shadow_esm_multiplier ( float multiplier ), returns void"
	set_shadow_esm_multiplier(${1:float multiplier})$0

# trigger conflict with other class(es)
snippet set_texture_Light2D "set_texture ( Object texture ), returns void"
	set_texture(${1:Object texture})$0

snippet set_texture_offset "set_texture_offset ( Vector2 texture_offset ), returns void"
	set_texture_offset(${1:Vector2 texture_offset})$0

snippet set_texture_scale "set_texture_scale ( float texture_scale ), returns void"
	set_texture_scale(${1:float texture_scale})$0

snippet set_z_range_max "set_z_range_max ( int z ), returns void"
	set_z_range_max(${1:int z})$0

snippet set_z_range_min "set_z_range_min ( int z ), returns void"
	set_z_range_min(${1:int z})$0


# Class: LightOccluder2D
snippet get_occluder_light_mask "get_occluder_light_mask ( ) const, returns int"
	get_occluder_light_mask($1)$0

snippet get_occluder_polygon "get_occluder_polygon ( ) const, returns OccluderPolygon2D"
	get_occluder_polygon($1)$0

snippet set_occluder_light_mask "set_occluder_light_mask ( int mask ), returns void"
	set_occluder_light_mask(${1:int mask})$0

snippet set_occluder_polygon "set_occluder_polygon ( OccluderPolygon2D polygon ), returns void"
	set_occluder_polygon(${1:OccluderPolygon2D polygon})$0


# Class: LineEdit
snippet append_at_cursor "append_at_cursor ( String text ), returns void"
	append_at_cursor(${1:String text})$0

# trigger conflict with other class(es)
snippet clear_LineEdit "clear ( ), returns void"
	clear($1)$0

snippet cursor_get_blink_enabled "cursor_get_blink_enabled ( ) const, returns bool"
	cursor_get_blink_enabled($1)$0

snippet cursor_get_blink_speed "cursor_get_blink_speed ( ) const, returns float"
	cursor_get_blink_speed($1)$0

snippet cursor_set_blink_enabled "cursor_set_blink_enabled ( bool enable ), returns void"
	cursor_set_blink_enabled(${1:bool enable})$0

snippet cursor_set_blink_speed "cursor_set_blink_speed ( float blink_speed ), returns void"
	cursor_set_blink_speed(${1:float blink_speed})$0

# trigger conflict with other class(es)
snippet get_align_LineEdit "get_align ( ) const, returns int"
	get_align($1)$0

snippet get_cursor_pos "get_cursor_pos ( ) const, returns int"
	get_cursor_pos($1)$0

snippet get_max_length "get_max_length ( ) const, returns int"
	get_max_length($1)$0

snippet get_menu "get_menu ( ) const, returns PopupMenu"
	get_menu($1)$0

snippet get_placeholder "get_placeholder ( ) const, returns String"
	get_placeholder($1)$0

snippet get_placeholder_alpha "get_placeholder_alpha ( ) const, returns float"
	get_placeholder_alpha($1)$0

# trigger conflict with other class(es)
snippet get_text_LineEdit "get_text ( ) const, returns String"
	get_text($1)$0

snippet is_editable "is_editable ( ) const, returns bool"
	is_editable($1)$0

snippet is_secret "is_secret ( ) const, returns bool"
	is_secret($1)$0

snippet menu_option "menu_option ( int option ), returns void"
	menu_option(${1:int option})$0

# trigger conflict with other class(es)
snippet select_LineEdit "select ( int from=0, int to=-1 ), returns void"
	select(${1:int from=0}, ${2:int to=-1})$0

snippet select_all "select_all ( ), returns void"
	select_all($1)$0

# trigger conflict with other class(es)
snippet set_align_LineEdit "set_align ( int align ), returns void"
	set_align(${1:int align})$0

snippet set_cursor_pos "set_cursor_pos ( int pos ), returns void"
	set_cursor_pos(${1:int pos})$0

snippet set_editable "set_editable ( bool enabled ), returns void"
	set_editable(${1:bool enabled})$0

snippet set_max_length "set_max_length ( int chars ), returns void"
	set_max_length(${1:int chars})$0

snippet set_placeholder "set_placeholder ( String text ), returns void"
	set_placeholder(${1:String text})$0

snippet set_placeholder_alpha "set_placeholder_alpha ( float alpha ), returns void"
	set_placeholder_alpha(${1:float alpha})$0

snippet set_secret "set_secret ( bool enabled ), returns void"
	set_secret(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_text_LineEdit "set_text ( String text ), returns void"
	set_text(${1:String text})$0


# Class: LineShape2D
snippet get_d "get_d ( ) const, returns float"
	get_d($1)$0

snippet get_normal "get_normal ( ) const, returns Vector2"
	get_normal($1)$0

snippet set_d "set_d ( float d ), returns void"
	set_d(${1:float d})$0

# trigger conflict with other class(es)
snippet set_normal_LineShape2D "set_normal ( Vector2 normal ), returns void"
	set_normal(${1:Vector2 normal})$0


# Class: LinkButton
# trigger conflict with other class(es)
snippet get_text_LinkButton "get_text ( ) const, returns String"
	get_text($1)$0

snippet get_underline_mode "get_underline_mode ( ) const, returns int"
	get_underline_mode($1)$0

# trigger conflict with other class(es)
snippet set_text_LinkButton "set_text ( String text ), returns void"
	set_text(${1:String text})$0

snippet set_underline_mode "set_underline_mode ( int underline_mode ), returns void"
	set_underline_mode(${1:int underline_mode})$0


# Class: Listener
# trigger conflict with other class(es)
snippet clear_current_Listener "clear_current ( ), returns void"
	clear_current($1)$0

snippet get_listener_transform "get_listener_transform ( ) const, returns Transform"
	get_listener_transform($1)$0

# trigger conflict with other class(es)
snippet is_current_Listener "is_current ( ) const, returns bool"
	is_current($1)$0

# trigger conflict with other class(es)
snippet make_current_Listener "make_current ( ), returns void"
	make_current($1)$0


# Class: MainLoop
snippet _drop_files "_drop_files ( StringArray files, int screen ) virtual, returns void"
	_drop_files(${1:StringArray files}, ${2:int screen})$0

snippet _finalize "_finalize ( ) virtual, returns void"
	_finalize($1)$0

snippet _idle "_idle ( float delta ) virtual, returns void"
	_idle(${1:float delta})$0

snippet _initialize "_initialize ( ) virtual, returns void"
	_initialize($1)$0

# trigger conflict with other class(es)
snippet _input_event_MainLoop "_input_event ( InputEvent ev ) virtual, returns void"
	_input_event(${1:InputEvent ev})$0

snippet _input_text "_input_text ( String text ) virtual, returns void"
	_input_text(${1:String text})$0

snippet _iteration "_iteration ( float delta ) virtual, returns void"
	_iteration(${1:float delta})$0

snippet finish "finish ( ), returns void"
	finish($1)$0

snippet idle "idle ( float delta ), returns bool"
	idle(${1:float delta})$0

snippet init "init ( ), returns void"
	init($1)$0

snippet input_event "input_event ( InputEvent ev ), returns void"
	input_event(${1:InputEvent ev})$0

snippet input_text "input_text ( String text ), returns void"
	input_text(${1:String text})$0

snippet iteration "iteration ( float delta ), returns bool"
	iteration(${1:float delta})$0


# Class: Marshalls
snippet base64_to_raw "base64_to_raw ( String base64_str ), returns RawArray"
	base64_to_raw(${1:String base64_str})$0

snippet base64_to_utf8 "base64_to_utf8 ( String base64_str ), returns String"
	base64_to_utf8(${1:String base64_str})$0

snippet base64_to_variant "base64_to_variant ( String base64_str ), returns Variant"
	base64_to_variant(${1:String base64_str})$0

snippet raw_to_base64 "raw_to_base64 ( RawArray array ), returns String"
	raw_to_base64(${1:RawArray array})$0

snippet utf8_to_base64 "utf8_to_base64 ( String utf8_str ), returns String"
	utf8_to_base64(${1:String utf8_str})$0

snippet variant_to_base64 "variant_to_base64 ( Variant variant ), returns String"
	variant_to_base64(${1:Variant variant})$0


# Class: Material
# trigger conflict with other class(es)
snippet get_blend_mode_Material "get_blend_mode ( ) const, returns int"
	get_blend_mode($1)$0

snippet get_depth_draw_mode "get_depth_draw_mode ( ) const, returns int"
	get_depth_draw_mode($1)$0

# trigger conflict with other class(es)
snippet get_flag_Material "get_flag ( int flag ) const, returns bool"
	get_flag(${1:int flag})$0

snippet get_line_width "get_line_width ( ) const, returns float"
	get_line_width($1)$0

# trigger conflict with other class(es)
snippet set_blend_mode_Material "set_blend_mode ( int mode ), returns void"
	set_blend_mode(${1:int mode})$0

snippet set_depth_draw_mode "set_depth_draw_mode ( int mode ), returns void"
	set_depth_draw_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_flag_Material "set_flag ( int flag, bool enable ), returns void"
	set_flag(${1:int flag}, ${2:bool enable})$0

snippet set_line_width "set_line_width ( float width ), returns void"
	set_line_width(${1:float width})$0


# Class: Matrix3
# not-unique trigger detected in this class: Matrix3; snippet commented
#snippet Matrix3 "Matrix3 ( Quat from ), returns Matrix3"
#	Matrix3(Quat from)$0

# not-unique trigger detected in this class: Matrix3; snippet commented
#snippet Matrix3 "Matrix3 ( Vector3 axis, float phi ), returns Matrix3"
#	Matrix3(Vector3 axis, float phi)$0

snippet Matrix3 "Matrix3 ( Vector3 x_axis, Vector3 y_axis, Vector3 z_axis ), returns Matrix3"
	Matrix3(${1:Vector3 x_axis}, ${2:Vector3 y_axis}, ${3:Vector3 z_axis})$0

snippet determinant "determinant ( ), returns float"
	determinant($1)$0

snippet get_euler "get_euler ( ), returns Vector3"
	get_euler($1)$0

snippet get_orthogonal_index "get_orthogonal_index ( ), returns int"
	get_orthogonal_index($1)$0

# trigger conflict with other class(es)
snippet get_scale_Matrix3 "get_scale ( ), returns Vector3"
	get_scale($1)$0

snippet inverse "inverse ( ), returns Matrix3"
	inverse($1)$0

snippet orthonormalized "orthonormalized ( ), returns Matrix3"
	orthonormalized($1)$0

snippet rotated "rotated ( Vector3 axis, float phi ), returns Matrix3"
	rotated(${1:Vector3 axis}, ${2:float phi})$0

snippet scaled "scaled ( Vector3 scale ), returns Matrix3"
	scaled(${1:Vector3 scale})$0

snippet tdotx "tdotx ( Vector3 with ), returns float"
	tdotx(${1:Vector3 with})$0

snippet tdoty "tdoty ( Vector3 with ), returns float"
	tdoty(${1:Vector3 with})$0

snippet tdotz "tdotz ( Vector3 with ), returns float"
	tdotz(${1:Vector3 with})$0

snippet transposed "transposed ( ), returns Matrix3"
	transposed($1)$0

snippet xform "xform ( Vector3 v ), returns Vector3"
	xform(${1:Vector3 v})$0

snippet xform_inv "xform_inv ( Vector3 v ), returns Vector3"
	xform_inv(${1:Vector3 v})$0


# Class: Matrix32
# not-unique trigger detected in this class: Matrix32; snippet commented
#snippet Matrix32 "Matrix32 ( Transform from ), returns Matrix32"
#	Matrix32(Transform from)$0

# not-unique trigger detected in this class: Matrix32; snippet commented
#snippet Matrix32 "Matrix32 ( Vector2 x_axis, Vector2 y_axis, Vector2 origin ), returns Matrix32"
#	Matrix32(Vector2 x_axis, Vector2 y_axis, Vector2 origin)$0

snippet Matrix32 "Matrix32 ( float rot, Vector2 pos ), returns Matrix32"
	Matrix32(${1:float rot}, ${2:Vector2 pos})$0

snippet affine_inverse "affine_inverse ( ), returns Matrix32"
	affine_inverse($1)$0

snippet basis_xform "basis_xform ( var v ), returns Matrix32"
	basis_xform(${1:var v})$0

snippet basis_xform_inv "basis_xform_inv ( var v ), returns Matrix32"
	basis_xform_inv(${1:var v})$0

snippet get_origin "get_origin ( ), returns Vector2"
	get_origin($1)$0

# trigger conflict with other class(es)
snippet get_rotation_Matrix32 "get_rotation ( ), returns float"
	get_rotation($1)$0

# trigger conflict with other class(es)
snippet get_scale_Matrix32 "get_scale ( ), returns Vector2"
	get_scale($1)$0

snippet interpolate_with "interpolate_with ( Matrix32 m, float c ), returns Matrix32"
	interpolate_with(${1:Matrix32 m}, ${2:float c})$0

# trigger conflict with other class(es)
snippet inverse_Matrix32 "inverse ( ), returns Matrix32"
	inverse($1)$0

# trigger conflict with other class(es)
snippet orthonormalized_Matrix32 "orthonormalized ( ), returns Matrix32"
	orthonormalized($1)$0

# trigger conflict with other class(es)
snippet rotated_Matrix32 "rotated ( float phi ), returns Matrix32"
	rotated(${1:float phi})$0

# trigger conflict with other class(es)
snippet scaled_Matrix32 "scaled ( Vector2 scale ), returns Matrix32"
	scaled(${1:Vector2 scale})$0

snippet translated "translated ( Vector2 offset ), returns Matrix32"
	translated(${1:Vector2 offset})$0

# trigger conflict with other class(es)
snippet xform_Matrix32 "xform ( var v ), returns Matrix32"
	xform(${1:var v})$0

# trigger conflict with other class(es)
snippet xform_inv_Matrix32 "xform_inv ( var v ), returns Matrix32"
	xform_inv(${1:var v})$0


# Class: MenuButton
snippet get_popup "get_popup ( ), returns PopupMenu"
	get_popup($1)$0


# Class: Mesh
snippet add_morph_target "add_morph_target ( String name ), returns void"
	add_morph_target(${1:String name})$0

snippet add_surface "add_surface ( int primitive, Array arrays, Array morph_arrays=Array(), bool alphasort=false ), returns void"
	add_surface(${1:int primitive}, ${2:Array arrays}, ${3:Array morph_arrays=Array()}, ${4:bool alphasort=false})$0

snippet center_geometry "center_geometry ( ), returns void"
	center_geometry($1)$0

snippet clear_morph_targets "clear_morph_targets ( ), returns void"
	clear_morph_targets($1)$0

snippet get_custom_aabb "get_custom_aabb ( ) const, returns AABB"
	get_custom_aabb($1)$0

snippet get_morph_target_count "get_morph_target_count ( ) const, returns int"
	get_morph_target_count($1)$0

snippet get_morph_target_mode "get_morph_target_mode ( ) const, returns int"
	get_morph_target_mode($1)$0

snippet get_morph_target_name "get_morph_target_name ( int index ) const, returns String"
	get_morph_target_name(${1:int index})$0

snippet get_surface_count "get_surface_count ( ) const, returns int"
	get_surface_count($1)$0

snippet regen_normalmaps "regen_normalmaps ( ), returns void"
	regen_normalmaps($1)$0

snippet set_custom_aabb "set_custom_aabb ( AABB aabb ), returns void"
	set_custom_aabb(${1:AABB aabb})$0

snippet set_morph_target_mode "set_morph_target_mode ( int mode ), returns void"
	set_morph_target_mode(${1:int mode})$0

snippet surface_get_array_index_len "surface_get_array_index_len ( int surf_idx ) const, returns int"
	surface_get_array_index_len(${1:int surf_idx})$0

snippet surface_get_array_len "surface_get_array_len ( int surf_idx ) const, returns int"
	surface_get_array_len(${1:int surf_idx})$0

snippet surface_get_format "surface_get_format ( int surf_idx ) const, returns int"
	surface_get_format(${1:int surf_idx})$0

snippet surface_get_material "surface_get_material ( int surf_idx ) const, returns Material"
	surface_get_material(${1:int surf_idx})$0

snippet surface_get_name "surface_get_name ( int surf_idx ) const, returns String"
	surface_get_name(${1:int surf_idx})$0

snippet surface_get_primitive_type "surface_get_primitive_type ( int surf_idx ) const, returns int"
	surface_get_primitive_type(${1:int surf_idx})$0

snippet surface_remove "surface_remove ( int surf_idx ), returns void"
	surface_remove(${1:int surf_idx})$0

snippet surface_set_material "surface_set_material ( int surf_idx, Material material ), returns void"
	surface_set_material(${1:int surf_idx}, ${2:Material material})$0

snippet surface_set_name "surface_set_name ( int surf_idx, String name ), returns void"
	surface_set_name(${1:int surf_idx}, ${2:String name})$0


# Class: MeshDataTool
# trigger conflict with other class(es)
snippet clear_MeshDataTool "clear ( ), returns void"
	clear($1)$0

snippet commit_to_surface "commit_to_surface ( Object mesh ), returns int"
	commit_to_surface(${1:Object mesh})$0

snippet create_from_surface "create_from_surface ( Object mesh, int surface ), returns int"
	create_from_surface(${1:Object mesh}, ${2:int surface})$0

snippet get_edge_count "get_edge_count ( ) const, returns int"
	get_edge_count($1)$0

snippet get_edge_faces "get_edge_faces ( int idx ) const, returns IntArray"
	get_edge_faces(${1:int idx})$0

snippet get_edge_meta "get_edge_meta ( int idx ) const, returns void"
	get_edge_meta(${1:int idx})$0

snippet get_edge_vertex "get_edge_vertex ( int idx, int vertex ) const, returns int"
	get_edge_vertex(${1:int idx}, ${2:int vertex})$0

snippet get_face_count "get_face_count ( ) const, returns int"
	get_face_count($1)$0

snippet get_face_edge "get_face_edge ( int idx, int edge ) const, returns int"
	get_face_edge(${1:int idx}, ${2:int edge})$0

snippet get_face_meta "get_face_meta ( int idx ) const, returns void"
	get_face_meta(${1:int idx})$0

snippet get_face_normal "get_face_normal ( int idx ) const, returns Vector3"
	get_face_normal(${1:int idx})$0

snippet get_face_vertex "get_face_vertex ( int idx, int vertex ) const, returns int"
	get_face_vertex(${1:int idx}, ${2:int vertex})$0

# trigger conflict with other class(es)
snippet get_format_MeshDataTool "get_format ( ) const, returns int"
	get_format($1)$0

# trigger conflict with other class(es)
snippet get_material_MeshDataTool "get_material ( ) const, returns Object"
	get_material($1)$0

snippet get_vertex "get_vertex ( int idx ) const, returns Vector3"
	get_vertex(${1:int idx})$0

snippet get_vertex_bones "get_vertex_bones ( int idx ) const, returns IntArray"
	get_vertex_bones(${1:int idx})$0

snippet get_vertex_color "get_vertex_color ( int idx ) const, returns Color"
	get_vertex_color(${1:int idx})$0

snippet get_vertex_count "get_vertex_count ( ) const, returns int"
	get_vertex_count($1)$0

snippet get_vertex_edges "get_vertex_edges ( int idx ) const, returns IntArray"
	get_vertex_edges(${1:int idx})$0

snippet get_vertex_faces "get_vertex_faces ( int idx ) const, returns IntArray"
	get_vertex_faces(${1:int idx})$0

snippet get_vertex_meta "get_vertex_meta ( int idx ) const, returns void"
	get_vertex_meta(${1:int idx})$0

snippet get_vertex_normal "get_vertex_normal ( int idx ) const, returns Vector3"
	get_vertex_normal(${1:int idx})$0

snippet get_vertex_tangent "get_vertex_tangent ( int idx ) const, returns Plane"
	get_vertex_tangent(${1:int idx})$0

snippet get_vertex_uv "get_vertex_uv ( int idx ) const, returns Vector2"
	get_vertex_uv(${1:int idx})$0

snippet get_vertex_uv2 "get_vertex_uv2 ( int idx ) const, returns Vector2"
	get_vertex_uv2(${1:int idx})$0

snippet get_vertex_weights "get_vertex_weights ( int idx ) const, returns RealArray"
	get_vertex_weights(${1:int idx})$0

snippet set_edge_meta "set_edge_meta ( int idx, Variant meta ), returns void"
	set_edge_meta(${1:int idx}, ${2:Variant meta})$0

snippet set_face_meta "set_face_meta ( int idx, Variant meta ), returns void"
	set_face_meta(${1:int idx}, ${2:Variant meta})$0

# trigger conflict with other class(es)
snippet set_material_MeshDataTool "set_material ( Material material ), returns void"
	set_material(${1:Material material})$0

snippet set_vertex "set_vertex ( int idx, Vector3 vertex ), returns void"
	set_vertex(${1:int idx}, ${2:Vector3 vertex})$0

snippet set_vertex_bones "set_vertex_bones ( int idx, IntArray bones ), returns void"
	set_vertex_bones(${1:int idx}, ${2:IntArray bones})$0

snippet set_vertex_color "set_vertex_color ( int idx, Color color ), returns void"
	set_vertex_color(${1:int idx}, ${2:Color color})$0

snippet set_vertex_meta "set_vertex_meta ( int idx, Variant meta ), returns void"
	set_vertex_meta(${1:int idx}, ${2:Variant meta})$0

snippet set_vertex_normal "set_vertex_normal ( int idx, Vector3 normal ), returns void"
	set_vertex_normal(${1:int idx}, ${2:Vector3 normal})$0

snippet set_vertex_tangent "set_vertex_tangent ( int idx, Plane tangent ), returns void"
	set_vertex_tangent(${1:int idx}, ${2:Plane tangent})$0

snippet set_vertex_uv "set_vertex_uv ( int idx, Vector2 uv ), returns void"
	set_vertex_uv(${1:int idx}, ${2:Vector2 uv})$0

snippet set_vertex_uv2 "set_vertex_uv2 ( int idx, Vector2 uv2 ), returns void"
	set_vertex_uv2(${1:int idx}, ${2:Vector2 uv2})$0

snippet set_vertex_weights "set_vertex_weights ( int idx, RealArray weights ), returns void"
	set_vertex_weights(${1:int idx}, ${2:RealArray weights})$0


# Class: MeshInstance
snippet create_convex_collision "create_convex_collision ( ), returns void"
	create_convex_collision($1)$0

snippet create_trimesh_collision "create_trimesh_collision ( ), returns void"
	create_trimesh_collision($1)$0

snippet get_aabb "get_aabb ( ) const, returns AABB"
	get_aabb($1)$0

snippet get_mesh "get_mesh ( ) const, returns Mesh"
	get_mesh($1)$0

snippet get_skeleton_path "get_skeleton_path ( ), returns NodePath"
	get_skeleton_path($1)$0

snippet set_mesh "set_mesh ( Mesh mesh ), returns void"
	set_mesh(${1:Mesh mesh})$0

snippet set_skeleton_path "set_skeleton_path ( NodePath skeleton_path ), returns void"
	set_skeleton_path(${1:NodePath skeleton_path})$0


# Class: MeshLibrary
# trigger conflict with other class(es)
snippet clear_MeshLibrary "clear ( ), returns void"
	clear($1)$0

snippet create_item "create_item ( int id ), returns void"
	create_item(${1:int id})$0

snippet get_item_list "get_item_list ( ) const, returns IntArray"
	get_item_list($1)$0

snippet get_item_mesh "get_item_mesh ( int id ) const, returns Mesh"
	get_item_mesh(${1:int id})$0

snippet get_item_name "get_item_name ( int id ) const, returns String"
	get_item_name(${1:int id})$0

snippet get_item_navmesh "get_item_navmesh ( int id ) const, returns NavigationMesh"
	get_item_navmesh(${1:int id})$0

snippet get_item_shape "get_item_shape ( int id ) const, returns Shape"
	get_item_shape(${1:int id})$0

snippet get_last_unused_item_id "get_last_unused_item_id ( ) const, returns int"
	get_last_unused_item_id($1)$0

# trigger conflict with other class(es)
snippet remove_item_MeshLibrary "remove_item ( int id ), returns void"
	remove_item(${1:int id})$0

snippet set_item_mesh "set_item_mesh ( int id, Mesh mesh ), returns void"
	set_item_mesh(${1:int id}, ${2:Mesh mesh})$0

snippet set_item_name "set_item_name ( int id, String name ), returns void"
	set_item_name(${1:int id}, ${2:String name})$0

snippet set_item_navmesh "set_item_navmesh ( int id, NavigationMesh navmesh ), returns void"
	set_item_navmesh(${1:int id}, ${2:NavigationMesh navmesh})$0

snippet set_item_shape "set_item_shape ( int id, Shape shape ), returns void"
	set_item_shape(${1:int id}, ${2:Shape shape})$0


# Class: MultiMesh
snippet generate_aabb "generate_aabb ( ), returns void"
	generate_aabb($1)$0

# trigger conflict with other class(es)
snippet get_aabb_MultiMesh "get_aabb ( ) const, returns AABB"
	get_aabb($1)$0

snippet get_instance_color "get_instance_color ( int instance ) const, returns Color"
	get_instance_color(${1:int instance})$0

snippet get_instance_count "get_instance_count ( ) const, returns int"
	get_instance_count($1)$0

snippet get_instance_transform "get_instance_transform ( int instance ) const, returns Transform"
	get_instance_transform(${1:int instance})$0

# trigger conflict with other class(es)
snippet get_mesh_MultiMesh "get_mesh ( ) const, returns Mesh"
	get_mesh($1)$0

snippet set_aabb "set_aabb ( AABB visibility_aabb ), returns void"
	set_aabb(${1:AABB visibility_aabb})$0

snippet set_instance_color "set_instance_color ( int instance, Color color ), returns void"
	set_instance_color(${1:int instance}, ${2:Color color})$0

snippet set_instance_count "set_instance_count ( int count ), returns void"
	set_instance_count(${1:int count})$0

snippet set_instance_transform "set_instance_transform ( int instance, Transform transform ), returns void"
	set_instance_transform(${1:int instance}, ${2:Transform transform})$0

# trigger conflict with other class(es)
snippet set_mesh_MultiMesh "set_mesh ( Mesh mesh ), returns void"
	set_mesh(${1:Mesh mesh})$0


# Class: MultiMeshInstance
snippet get_multimesh "get_multimesh ( ) const, returns Object"
	get_multimesh($1)$0

snippet set_multimesh "set_multimesh ( Object multimesh ), returns void"
	set_multimesh(${1:Object multimesh})$0


# Class: Mutex
snippet lock "lock ( ), returns void"
	lock($1)$0

snippet try_lock "try_lock ( ), returns Error"
	try_lock($1)$0

snippet unlock "unlock ( ), returns void"
	unlock($1)$0


# Class: Navigation
snippet get_closest_point "get_closest_point ( Vector3 to_point ), returns Vector3"
	get_closest_point(${1:Vector3 to_point})$0

snippet get_closest_point_normal "get_closest_point_normal ( Vector3 to_point ), returns Vector3"
	get_closest_point_normal(${1:Vector3 to_point})$0

snippet get_closest_point_owner "get_closest_point_owner ( Vector3 to_point ), returns Object"
	get_closest_point_owner(${1:Vector3 to_point})$0

# trigger conflict with other class(es)
snippet get_closest_point_to_segment_Navigation "get_closest_point_to_segment ( Vector3 start, Vector3 end, bool use_collision=false ), returns Vector3"
	get_closest_point_to_segment(${1:Vector3 start}, ${2:Vector3 end}, ${3:bool use_collision=false})$0

snippet get_simple_path "get_simple_path ( Vector3 start, Vector3 end, bool optimize=true ), returns Vector3Array"
	get_simple_path(${1:Vector3 start}, ${2:Vector3 end}, ${3:bool optimize=true})$0

snippet get_up_vector "get_up_vector ( ) const, returns Vector3"
	get_up_vector($1)$0

snippet navmesh_create "navmesh_create ( NavigationMesh mesh, Transform xform, Object owner=NULL ), returns int"
	navmesh_create(${1:NavigationMesh mesh}, ${2:Transform xform}, ${3:Object owner=NULL})$0

snippet navmesh_remove "navmesh_remove ( int id ), returns void"
	navmesh_remove(${1:int id})$0

snippet navmesh_set_transform "navmesh_set_transform ( int id, Transform xform ), returns void"
	navmesh_set_transform(${1:int id}, ${2:Transform xform})$0

snippet set_up_vector "set_up_vector ( Vector3 up ), returns void"
	set_up_vector(${1:Vector3 up})$0


# Class: Navigation2D
# trigger conflict with other class(es)
snippet get_closest_point_Navigation2D "get_closest_point ( Vector2 to_point ), returns Vector2"
	get_closest_point(${1:Vector2 to_point})$0

# trigger conflict with other class(es)
snippet get_closest_point_owner_Navigation2D "get_closest_point_owner ( Vector2 to_point ), returns Object"
	get_closest_point_owner(${1:Vector2 to_point})$0

# trigger conflict with other class(es)
snippet get_simple_path_Navigation2D "get_simple_path ( Vector2 start, Vector2 end, bool optimize=true ), returns Vector2Array"
	get_simple_path(${1:Vector2 start}, ${2:Vector2 end}, ${3:bool optimize=true})$0

snippet navpoly_create "navpoly_create ( NavigationPolygon mesh, Matrix32 xform, Object owner=NULL ), returns int"
	navpoly_create(${1:NavigationPolygon mesh}, ${2:Matrix32 xform}, ${3:Object owner=NULL})$0

snippet navpoly_remove "navpoly_remove ( int id ), returns void"
	navpoly_remove(${1:int id})$0

snippet navpoly_set_transform "navpoly_set_transform ( int id, Matrix32 xform ), returns void"
	navpoly_set_transform(${1:int id}, ${2:Matrix32 xform})$0


# Class: NavigationMesh
snippet add_polygon "add_polygon ( IntArray polygon ), returns void"
	add_polygon(${1:IntArray polygon})$0

snippet clear_polygons "clear_polygons ( ), returns void"
	clear_polygons($1)$0

# trigger conflict with other class(es)
snippet get_polygon_NavigationMesh "get_polygon ( int idx ), returns IntArray"
	get_polygon(${1:int idx})$0

snippet get_polygon_count "get_polygon_count ( ) const, returns int"
	get_polygon_count($1)$0

snippet get_vertices "get_vertices ( ) const, returns Vector3Array"
	get_vertices($1)$0

snippet set_vertices "set_vertices ( Vector3Array vertices ), returns void"
	set_vertices(${1:Vector3Array vertices})$0


# Class: NavigationMeshInstance
snippet get_navigation_mesh "get_navigation_mesh ( ) const, returns Object"
	get_navigation_mesh($1)$0

# trigger conflict with other class(es)
snippet is_enabled_NavigationMeshInstance "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

# trigger conflict with other class(es)
snippet set_enabled_NavigationMeshInstance "set_enabled ( bool enabled ), returns void"
	set_enabled(${1:bool enabled})$0

snippet set_navigation_mesh "set_navigation_mesh ( Object navmesh ), returns void"
	set_navigation_mesh(${1:Object navmesh})$0


# Class: NavigationPolygon
snippet add_outline "add_outline ( Vector2Array outline ), returns void"
	add_outline(${1:Vector2Array outline})$0

snippet add_outline_at_index "add_outline_at_index ( Vector2Array outline, int index ), returns void"
	add_outline_at_index(${1:Vector2Array outline}, ${2:int index})$0

# trigger conflict with other class(es)
snippet add_polygon_NavigationPolygon "add_polygon ( IntArray polygon ), returns void"
	add_polygon(${1:IntArray polygon})$0

snippet clear_outlines "clear_outlines ( ), returns void"
	clear_outlines($1)$0

# trigger conflict with other class(es)
snippet clear_polygons_NavigationPolygon "clear_polygons ( ), returns void"
	clear_polygons($1)$0

snippet get_outline "get_outline ( int idx ) const, returns Vector2Array"
	get_outline(${1:int idx})$0

snippet get_outline_count "get_outline_count ( ) const, returns int"
	get_outline_count($1)$0

# trigger conflict with other class(es)
snippet get_polygon_NavigationPolygon "get_polygon ( int idx ), returns IntArray"
	get_polygon(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_polygon_count_NavigationPolygon "get_polygon_count ( ) const, returns int"
	get_polygon_count($1)$0

# trigger conflict with other class(es)
snippet get_vertices_NavigationPolygon "get_vertices ( ) const, returns Vector2Array"
	get_vertices($1)$0

snippet make_polygons_from_outlines "make_polygons_from_outlines ( ), returns void"
	make_polygons_from_outlines($1)$0

snippet remove_outline "remove_outline ( int idx ), returns void"
	remove_outline(${1:int idx})$0

snippet set_outline "set_outline ( int idx, Vector2Array outline ), returns void"
	set_outline(${1:int idx}, ${2:Vector2Array outline})$0

# trigger conflict with other class(es)
snippet set_vertices_NavigationPolygon "set_vertices ( Vector2Array vertices ), returns void"
	set_vertices(${1:Vector2Array vertices})$0


# Class: NavigationPolygonInstance
snippet get_navigation_polygon "get_navigation_polygon ( ) const, returns NavigationPolygon"
	get_navigation_polygon($1)$0

# trigger conflict with other class(es)
snippet is_enabled_NavigationPolygonInstance "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

# trigger conflict with other class(es)
snippet set_enabled_NavigationPolygonInstance "set_enabled ( bool enabled ), returns void"
	set_enabled(${1:bool enabled})$0

snippet set_navigation_polygon "set_navigation_polygon ( NavigationPolygon navpoly ), returns void"
	set_navigation_polygon(${1:NavigationPolygon navpoly})$0


# Class: Nil
# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( ColorArray from ), returns void"
#	Nil(ColorArray from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Vector3Array from ), returns void"
#	Nil(Vector3Array from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Vector2Array from ), returns void"
#	Nil(Vector2Array from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( StringArray from ), returns void"
#	Nil(StringArray from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( RealArray from ), returns void"
#	Nil(RealArray from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( IntArray from ), returns void"
#	Nil(IntArray from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( RawArray from ), returns void"
#	Nil(RawArray from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Array from ), returns void"
#	Nil(Array from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Dictionary from ), returns void"
#	Nil(Dictionary from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( InputEvent from ), returns void"
#	Nil(InputEvent from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Object from ), returns void"
#	Nil(Object from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( RID from ), returns void"
#	Nil(RID from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( NodePath from ), returns void"
#	Nil(NodePath from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Image from ), returns void"
#	Nil(Image from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Color from ), returns void"
#	Nil(Color from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Transform from ), returns void"
#	Nil(Transform from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Matrix3 from ), returns void"
#	Nil(Matrix3 from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( AABB from ), returns void"
#	Nil(AABB from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Quat from ), returns void"
#	Nil(Quat from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Plane from ), returns void"
#	Nil(Plane from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Matrix32 from ), returns void"
#	Nil(Matrix32 from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Vector3 from ), returns void"
#	Nil(Vector3 from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Rect2 from ), returns void"
#	Nil(Rect2 from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( Vector2 from ), returns void"
#	Nil(Vector2 from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( String from ), returns void"
#	Nil(String from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( float from ), returns void"
#	Nil(float from)$0

# not-unique trigger detected in this class: Nil; snippet commented
#snippet Nil "Nil ( int from ), returns void"
#	Nil(int from)$0

snippet Nil "Nil ( bool from ), returns void"
	Nil(${1:bool from})$0


# Class: Node
snippet _enter_tree "_enter_tree ( ) virtual, returns void"
	_enter_tree($1)$0

snippet _exit_tree "_exit_tree ( ) virtual, returns void"
	_exit_tree($1)$0

snippet _fixed_process "_fixed_process ( float delta ) virtual, returns void"
	_fixed_process(${1:float delta})$0

snippet _input "_input ( InputEvent event ) virtual, returns void"
	_input(${1:InputEvent event})$0

snippet _process "_process ( float delta ) virtual, returns void"
	_process(${1:float delta})$0

snippet _ready "_ready ( ) virtual, returns void"
	_ready($1)$0

snippet _unhandled_input "_unhandled_input ( InputEvent event ) virtual, returns void"
	_unhandled_input(${1:InputEvent event})$0

snippet _unhandled_key_input "_unhandled_key_input ( InputEvent key_event ) virtual, returns void"
	_unhandled_key_input(${1:InputEvent key_event})$0

snippet add_child "add_child ( Node node, bool legible_unique_name=false ), returns void"
	add_child(${1:Node node}, ${2:bool legible_unique_name=false})$0

snippet add_to_group "add_to_group ( String group, bool persistent=false ), returns void"
	add_to_group(${1:String group}, ${2:bool persistent=false})$0

snippet can_process "can_process ( ) const, returns bool"
	can_process($1)$0

snippet duplicate "duplicate ( bool use_instancing=false ) const, returns Node"
	duplicate(${1:bool use_instancing=false})$0

snippet find_node "find_node ( String mask, bool recursive=true, bool owned=true ) const, returns Node"
	find_node(${1:String mask}, ${2:bool recursive=true}, ${3:bool owned=true})$0

snippet get_child "get_child ( int idx ) const, returns Node"
	get_child(${1:int idx})$0

snippet get_child_count "get_child_count ( ) const, returns int"
	get_child_count($1)$0

snippet get_children "get_children ( ) const, returns Array"
	get_children($1)$0

snippet get_filename "get_filename ( ) const, returns String"
	get_filename($1)$0

snippet get_fixed_process_delta_time "get_fixed_process_delta_time ( ) const, returns float"
	get_fixed_process_delta_time($1)$0

snippet get_groups "get_groups ( ) const, returns Array"
	get_groups($1)$0

snippet get_index "get_index ( ) const, returns int"
	get_index($1)$0

# trigger conflict with other class(es)
snippet get_name_Node "get_name ( ) const, returns String"
	get_name($1)$0

snippet get_node "get_node ( NodePath path ) const, returns Node"
	get_node(${1:NodePath path})$0

snippet get_node_and_resource "get_node_and_resource ( NodePath path ), returns Array"
	get_node_and_resource(${1:NodePath path})$0

snippet get_owner "get_owner ( ) const, returns Node"
	get_owner($1)$0

snippet get_parent "get_parent ( ) const, returns Node"
	get_parent($1)$0

snippet get_path "get_path ( ) const, returns NodePath"
	get_path($1)$0

snippet get_path_to "get_path_to ( Node node ) const, returns NodePath"
	get_path_to(${1:Node node})$0

snippet get_pause_mode "get_pause_mode ( ) const, returns int"
	get_pause_mode($1)$0

snippet get_position_in_parent "get_position_in_parent ( ) const, returns int"
	get_position_in_parent($1)$0

snippet get_process_delta_time "get_process_delta_time ( ) const, returns float"
	get_process_delta_time($1)$0

snippet get_scene_instance_load_placeholder "get_scene_instance_load_placeholder ( ) const, returns bool"
	get_scene_instance_load_placeholder($1)$0

snippet get_tree "get_tree ( ) const, returns SceneTree"
	get_tree($1)$0

# trigger conflict with other class(es)
snippet get_viewport_Node "get_viewport ( ) const, returns Object"
	get_viewport($1)$0

snippet has_node "has_node ( NodePath path ) const, returns bool"
	has_node(${1:NodePath path})$0

snippet has_node_and_resource "has_node_and_resource ( NodePath path ) const, returns bool"
	has_node_and_resource(${1:NodePath path})$0

snippet is_a_parent_of "is_a_parent_of ( Node node ) const, returns bool"
	is_a_parent_of(${1:Node node})$0

snippet is_displayed_folded "is_displayed_folded ( ) const, returns bool"
	is_displayed_folded($1)$0

snippet is_fixed_processing "is_fixed_processing ( ) const, returns bool"
	is_fixed_processing($1)$0

snippet is_greater_than "is_greater_than ( Node node ) const, returns bool"
	is_greater_than(${1:Node node})$0

snippet is_in_group "is_in_group ( String group ) const, returns bool"
	is_in_group(${1:String group})$0

snippet is_inside_tree "is_inside_tree ( ) const, returns bool"
	is_inside_tree($1)$0

snippet is_processing "is_processing ( ) const, returns bool"
	is_processing($1)$0

snippet is_processing_input "is_processing_input ( ) const, returns bool"
	is_processing_input($1)$0

snippet is_processing_unhandled_input "is_processing_unhandled_input ( ) const, returns bool"
	is_processing_unhandled_input($1)$0

snippet is_processing_unhandled_key_input "is_processing_unhandled_key_input ( ) const, returns bool"
	is_processing_unhandled_key_input($1)$0

snippet move_child "move_child ( Node child_node, int to_pos ), returns void"
	move_child(${1:Node child_node}, ${2:int to_pos})$0

snippet print_stray_nodes "print_stray_nodes ( ), returns void"
	print_stray_nodes($1)$0

snippet print_tree "print_tree ( ), returns void"
	print_tree($1)$0

snippet propagate_notification "propagate_notification ( int what ), returns void"
	propagate_notification(${1:int what})$0

snippet queue_free "queue_free ( ), returns void"
	queue_free($1)$0

snippet raise "raise ( ), returns void"
	raise($1)$0

snippet remove_and_skip "remove_and_skip ( ), returns void"
	remove_and_skip($1)$0

snippet remove_child "remove_child ( Node node ), returns void"
	remove_child(${1:Node node})$0

snippet remove_from_group "remove_from_group ( String group ), returns void"
	remove_from_group(${1:String group})$0

snippet replace_by "replace_by ( Node node, bool keep_data=false ), returns void"
	replace_by(${1:Node node}, ${2:bool keep_data=false})$0

snippet set_display_folded "set_display_folded ( bool fold ), returns void"
	set_display_folded(${1:bool fold})$0

snippet set_filename "set_filename ( String filename ), returns void"
	set_filename(${1:String filename})$0

snippet set_fixed_process "set_fixed_process ( bool enable ), returns void"
	set_fixed_process(${1:bool enable})$0

snippet set_name "set_name ( String name ), returns void"
	set_name(${1:String name})$0

snippet set_owner "set_owner ( Node owner ), returns void"
	set_owner(${1:Node owner})$0

snippet set_pause_mode "set_pause_mode ( int mode ), returns void"
	set_pause_mode(${1:int mode})$0

snippet set_process "set_process ( bool enable ), returns void"
	set_process(${1:bool enable})$0

snippet set_process_input "set_process_input ( bool enable ), returns void"
	set_process_input(${1:bool enable})$0

snippet set_process_unhandled_input "set_process_unhandled_input ( bool enable ), returns void"
	set_process_unhandled_input(${1:bool enable})$0

snippet set_process_unhandled_key_input "set_process_unhandled_key_input ( bool enable ), returns void"
	set_process_unhandled_key_input(${1:bool enable})$0

snippet set_scene_instance_load_placeholder "set_scene_instance_load_placeholder ( bool load_placeholder ), returns void"
	set_scene_instance_load_placeholder(${1:bool load_placeholder})$0


# Class: Node2D
snippet edit_set_pivot "edit_set_pivot ( Vector2 pivot ), returns void"
	edit_set_pivot(${1:Vector2 pivot})$0

snippet get_angle_to "get_angle_to ( Vector2 point ) const, returns float"
	get_angle_to(${1:Vector2 point})$0

# trigger conflict with other class(es)
snippet get_global_pos_Node2D "get_global_pos ( ) const, returns Vector2"
	get_global_pos($1)$0

# trigger conflict with other class(es)
snippet get_pos_Node2D "get_pos ( ) const, returns Vector2"
	get_pos($1)$0

snippet get_relative_transform_to_parent "get_relative_transform_to_parent ( Object parent ) const, returns Matrix32"
	get_relative_transform_to_parent(${1:Object parent})$0

snippet get_rot "get_rot ( ) const, returns float"
	get_rot($1)$0

snippet get_rotd "get_rotd ( ) const, returns float"
	get_rotd($1)$0

# trigger conflict with other class(es)
snippet get_scale_Node2D "get_scale ( ) const, returns Vector2"
	get_scale($1)$0

snippet get_z "get_z ( ) const, returns int"
	get_z($1)$0

snippet global_translate "global_translate ( Vector2 offset ), returns void"
	global_translate(${1:Vector2 offset})$0

snippet is_z_relative "is_z_relative ( ) const, returns bool"
	is_z_relative($1)$0

snippet look_at "look_at ( Vector2 point ), returns void"
	look_at(${1:Vector2 point})$0

snippet move_local_x "move_local_x ( float delta, bool scaled=false ), returns void"
	move_local_x(${1:float delta}, ${2:bool scaled=false})$0

snippet move_local_y "move_local_y ( float delta, bool scaled=false ), returns void"
	move_local_y(${1:float delta}, ${2:bool scaled=false})$0

snippet rotate "rotate ( float radians ), returns void"
	rotate(${1:float radians})$0

snippet scale "scale ( Vector2 ratio ), returns void"
	scale(${1:Vector2 ratio})$0

# trigger conflict with other class(es)
snippet set_global_pos_Node2D "set_global_pos ( Vector2 pos ), returns void"
	set_global_pos(${1:Vector2 pos})$0

snippet set_global_transform "set_global_transform ( Matrix32 xform ), returns void"
	set_global_transform(${1:Matrix32 xform})$0

# trigger conflict with other class(es)
snippet set_pos_Node2D "set_pos ( Vector2 pos ), returns void"
	set_pos(${1:Vector2 pos})$0

snippet set_rot "set_rot ( float radians ), returns void"
	set_rot(${1:float radians})$0

snippet set_rotd "set_rotd ( float degrees ), returns void"
	set_rotd(${1:float degrees})$0

# trigger conflict with other class(es)
snippet set_scale_Node2D "set_scale ( Vector2 scale ), returns void"
	set_scale(${1:Vector2 scale})$0

# trigger conflict with other class(es)
snippet set_transform_Node2D "set_transform ( Matrix32 xform ), returns void"
	set_transform(${1:Matrix32 xform})$0

snippet set_z "set_z ( int z ), returns void"
	set_z(${1:int z})$0

snippet set_z_as_relative "set_z_as_relative ( bool enable ), returns void"
	set_z_as_relative(${1:bool enable})$0

snippet translate "translate ( Vector2 offset ), returns void"
	translate(${1:Vector2 offset})$0


# Class: NodePath
snippet NodePath "NodePath ( String from ), returns NodePath"
	NodePath(${1:String from})$0

# trigger conflict with other class(es)
snippet get_name_NodePath "get_name ( int idx ), returns String"
	get_name(${1:int idx})$0

snippet get_name_count "get_name_count ( ), returns int"
	get_name_count($1)$0

snippet get_property "get_property ( ), returns String"
	get_property($1)$0

snippet get_subname "get_subname ( int idx ), returns String"
	get_subname(${1:int idx})$0

snippet get_subname_count "get_subname_count ( ), returns int"
	get_subname_count($1)$0

snippet is_absolute "is_absolute ( ), returns bool"
	is_absolute($1)$0

snippet is_empty "is_empty ( ), returns bool"
	is_empty($1)$0


# Class: Object
snippet XL_MESSAGE "XL_MESSAGE ( String message ) const, returns String"
	XL_MESSAGE(${1:String message})$0

snippet _get "_get ( String property ) virtual, returns void"
	_get(${1:String property})$0

snippet _get_property_list "_get_property_list ( ) virtual, returns Array"
	_get_property_list($1)$0

snippet _init "_init ( ) virtual, returns void"
	_init($1)$0

snippet _notification "_notification ( int what ) virtual, returns void"
	_notification(${1:int what})$0

snippet _set "_set ( String property, Variant value ) virtual, returns void"
	_set(${1:String property}, ${2:Variant value})$0

snippet add_user_signal "add_user_signal ( String signal, Array arguments=Array() ), returns void"
	add_user_signal(${1:String signal}, ${2:Array arguments=Array()})$0

snippet call "call ( String method, Variant arg0=NULL, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL, Variant arg5=NULL, Variant arg6=NULL, Variant arg7=NULL, Variant arg8=NULL, Variant arg9=NULL ), returns void"
	call(${1:String method}, ${2:Variant arg0=NULL}, ${3:Variant arg1=NULL}, ${4:Variant arg2=NULL}, ${5:Variant arg3=NULL}, ${6:Variant arg4=NULL}, ${7:Variant arg5=NULL}, ${8:Variant arg6=NULL}, ${9:Variant arg7=NULL}, ${10:Variant arg8=NULL}, ${11:Variant arg9=NULL})$0

snippet call_deferred "call_deferred ( String method, Variant arg0=NULL, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL ), returns void"
	call_deferred(${1:String method}, ${2:Variant arg0=NULL}, ${3:Variant arg1=NULL}, ${4:Variant arg2=NULL}, ${5:Variant arg3=NULL}, ${6:Variant arg4=NULL})$0

snippet callv "callv ( String method, Array arg_array ), returns Variant"
	callv(${1:String method}, ${2:Array arg_array})$0

snippet can_translate_messages "can_translate_messages ( ) const, returns bool"
	can_translate_messages($1)$0

# trigger conflict with other class(es)
snippet connect_Object "connect ( String signal, Object target, String method, Array binds=Array(), int flags=0 ), returns int"
	connect(${1:String signal}, ${2:Object target}, ${3:String method}, ${4:Array binds=Array()}, ${5:int flags=0})$0

# trigger conflict with other class(es)
snippet disconnect_Object "disconnect ( String signal, Object target, String method ), returns void"
	disconnect(${1:String signal}, ${2:Object target}, ${3:String method})$0

snippet emit_signal "emit_signal ( String signal, Variant arg0=NULL, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL ), returns void"
	emit_signal(${1:String signal}, ${2:Variant arg0=NULL}, ${3:Variant arg1=NULL}, ${4:Variant arg2=NULL}, ${5:Variant arg3=NULL}, ${6:Variant arg4=NULL})$0

snippet free "free ( ), returns void"
	free($1)$0

snippet get "get ( String property ) const, returns void"
	get(${1:String property})$0

snippet get_instance_ID "get_instance_ID ( ) const, returns int"
	get_instance_ID($1)$0

snippet get_meta "get_meta ( String name ) const, returns void"
	get_meta(${1:String name})$0

snippet get_meta_list "get_meta_list ( ) const, returns StringArray"
	get_meta_list($1)$0

snippet get_method_list "get_method_list ( ) const, returns Array"
	get_method_list($1)$0

snippet get_property_list "get_property_list ( ) const, returns Array"
	get_property_list($1)$0

snippet get_script "get_script ( ) const, returns Script"
	get_script($1)$0

snippet get_signal_connection_list "get_signal_connection_list ( String signal ) const, returns Array"
	get_signal_connection_list(${1:String signal})$0

snippet get_signal_list "get_signal_list ( ) const, returns Array"
	get_signal_list($1)$0

snippet get_type "get_type ( ) const, returns String"
	get_type($1)$0

snippet has_meta "has_meta ( String name ) const, returns bool"
	has_meta(${1:String name})$0

snippet has_method "has_method ( String method ) const, returns bool"
	has_method(${1:String method})$0

snippet has_user_signal "has_user_signal ( String signal ) const, returns bool"
	has_user_signal(${1:String signal})$0

snippet is_blocking_signals "is_blocking_signals ( ) const, returns bool"
	is_blocking_signals($1)$0

# trigger conflict with other class(es)
snippet is_connected_Object "is_connected ( String signal, Object target, String method ) const, returns bool"
	is_connected(${1:String signal}, ${2:Object target}, ${3:String method})$0

snippet is_queued_for_deletion "is_queued_for_deletion ( ) const, returns bool"
	is_queued_for_deletion($1)$0

snippet is_type "is_type ( String type ) const, returns bool"
	is_type(${1:String type})$0

snippet notification "notification ( int what, bool reversed=false ), returns void"
	notification(${1:int what}, ${2:bool reversed=false})$0

snippet property_list_changed_notify "property_list_changed_notify ( ), returns void"
	property_list_changed_notify($1)$0

# trigger conflict with other class(es)
snippet set_Object "set ( String property, Variant value ), returns void"
	set(${1:String property}, ${2:Variant value})$0

snippet set_block_signals "set_block_signals ( bool enable ), returns void"
	set_block_signals(${1:bool enable})$0

snippet set_message_translation "set_message_translation ( bool enable ), returns void"
	set_message_translation(${1:bool enable})$0

snippet set_meta "set_meta ( String name, Variant value ), returns void"
	set_meta(${1:String name}, ${2:Variant value})$0

snippet set_script "set_script ( Script script ), returns void"
	set_script(${1:Script script})$0

snippet tr "tr ( String message ) const, returns String"
	tr(${1:String message})$0


# Class: OccluderPolygon2D
snippet get_cull_mode "get_cull_mode ( ) const, returns int"
	get_cull_mode($1)$0

# trigger conflict with other class(es)
snippet get_polygon_OccluderPolygon2D "get_polygon ( ) const, returns Vector2Array"
	get_polygon($1)$0

snippet is_closed "is_closed ( ) const, returns bool"
	is_closed($1)$0

snippet set_closed "set_closed ( bool closed ), returns void"
	set_closed(${1:bool closed})$0

snippet set_cull_mode "set_cull_mode ( int cull_mode ), returns void"
	set_cull_mode(${1:int cull_mode})$0

# trigger conflict with other class(es)
snippet set_polygon_OccluderPolygon2D "set_polygon ( Vector2Array polygon ), returns void"
	set_polygon(${1:Vector2Array polygon})$0


# Class: OptionButton
# trigger conflict with other class(es)
snippet add_icon_item_OptionButton "add_icon_item ( Texture texture, String label, int id ), returns void"
	add_icon_item(${1:Texture texture}, ${2:String label}, ${3:int id})$0

# trigger conflict with other class(es)
snippet add_item_OptionButton "add_item ( String label, int id=-1 ), returns void"
	add_item(${1:String label}, ${2:int id=-1})$0

snippet add_separator "add_separator ( ), returns void"
	add_separator($1)$0

# trigger conflict with other class(es)
snippet clear_OptionButton "clear ( ), returns void"
	clear($1)$0

snippet get_item_ID "get_item_ID ( int idx ) const, returns int"
	get_item_ID(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_item_count_OptionButton "get_item_count ( ) const, returns int"
	get_item_count($1)$0

# trigger conflict with other class(es)
snippet get_item_icon_OptionButton "get_item_icon ( int idx ) const, returns Texture"
	get_item_icon(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_item_metadata_OptionButton "get_item_metadata ( int idx ) const, returns void"
	get_item_metadata(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_item_text_OptionButton "get_item_text ( int idx ) const, returns String"
	get_item_text(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_selected_OptionButton "get_selected ( ) const, returns int"
	get_selected($1)$0

snippet get_selected_ID "get_selected_ID ( ) const, returns int"
	get_selected_ID($1)$0

snippet get_selected_metadata "get_selected_metadata ( ) const, returns void"
	get_selected_metadata($1)$0

# trigger conflict with other class(es)
snippet is_item_disabled_OptionButton "is_item_disabled ( int idx ) const, returns bool"
	is_item_disabled(${1:int idx})$0

# trigger conflict with other class(es)
snippet remove_item_OptionButton "remove_item ( int idx ), returns void"
	remove_item(${1:int idx})$0

# trigger conflict with other class(es)
snippet select_OptionButton "select ( int idx ), returns void"
	select(${1:int idx})$0

snippet set_item_ID "set_item_ID ( int idx, int id ), returns void"
	set_item_ID(${1:int idx}, ${2:int id})$0

# trigger conflict with other class(es)
snippet set_item_disabled_OptionButton "set_item_disabled ( int idx, bool disabled ), returns void"
	set_item_disabled(${1:int idx}, ${2:bool disabled})$0

# trigger conflict with other class(es)
snippet set_item_icon_OptionButton "set_item_icon ( int idx, Texture texture ), returns void"
	set_item_icon(${1:int idx}, ${2:Texture texture})$0

# trigger conflict with other class(es)
snippet set_item_metadata_OptionButton "set_item_metadata ( int idx, Variant metadata ), returns void"
	set_item_metadata(${1:int idx}, ${2:Variant metadata})$0

# trigger conflict with other class(es)
snippet set_item_text_OptionButton "set_item_text ( int idx, String text ), returns void"
	set_item_text(${1:int idx}, ${2:String text})$0


# Class: OS
snippet alert "alert ( String text, String title=”Alert!” ), returns void"
	alert(${1:String text}, ${2:String title=”Alert!”})$0

snippet can_draw "can_draw ( ) const, returns bool"
	can_draw($1)$0

snippet can_use_threads "can_use_threads ( ) const, returns bool"
	can_use_threads($1)$0

snippet delay_msec "delay_msec ( int msec ) const, returns void"
	delay_msec(${1:int msec})$0

snippet delay_usec "delay_usec ( int usec ) const, returns void"
	delay_usec(${1:int usec})$0

snippet dump_memory_to_file "dump_memory_to_file ( String file ), returns void"
	dump_memory_to_file(${1:String file})$0

snippet dump_resources_to_file "dump_resources_to_file ( String file ), returns void"
	dump_resources_to_file(${1:String file})$0

snippet execute "execute ( String path, StringArray arguments, bool blocking, Array output=Array() ), returns int"
	execute(${1:String path}, ${2:StringArray arguments}, ${3:bool blocking}, ${4:Array output=Array()})$0

snippet find_scancode_from_string "find_scancode_from_string ( String string ) const, returns int"
	find_scancode_from_string(${1:String string})$0

snippet get_borderless_window "get_borderless_window ( ) const, returns bool"
	get_borderless_window($1)$0

snippet get_clipboard "get_clipboard ( ) const, returns String"
	get_clipboard($1)$0

snippet get_cmdline_args "get_cmdline_args ( ), returns StringArray"
	get_cmdline_args($1)$0

snippet get_current_screen "get_current_screen ( ) const, returns int"
	get_current_screen($1)$0

snippet get_custom_level "get_custom_level ( ) const, returns String"
	get_custom_level($1)$0

snippet get_data_dir "get_data_dir ( ) const, returns String"
	get_data_dir($1)$0

snippet get_date "get_date ( bool utc=false ) const, returns Dictionary"
	get_date(${1:bool utc=false})$0

snippet get_datetime "get_datetime ( bool utc=false ) const, returns Dictionary"
	get_datetime(${1:bool utc=false})$0

snippet get_datetime_from_unix_time "get_datetime_from_unix_time ( int unix_time_val ) const, returns Dictionary"
	get_datetime_from_unix_time(${1:int unix_time_val})$0

snippet get_dynamic_memory_usage "get_dynamic_memory_usage ( ) const, returns int"
	get_dynamic_memory_usage($1)$0

snippet get_engine_version "get_engine_version ( ) const, returns Dictionary"
	get_engine_version($1)$0

# trigger conflict with other class(es)
snippet get_environment_OS "get_environment ( String environment ) const, returns String"
	get_environment(${1:String environment})$0

snippet get_executable_path "get_executable_path ( ) const, returns String"
	get_executable_path($1)$0

snippet get_frames_drawn "get_frames_drawn ( ), returns int"
	get_frames_drawn($1)$0

snippet get_frames_per_second "get_frames_per_second ( ) const, returns float"
	get_frames_per_second($1)$0

snippet get_fullscreen_mode_list "get_fullscreen_mode_list ( int screen=0 ) const, returns Array"
	get_fullscreen_mode_list(${1:int screen=0})$0

snippet get_iterations_per_second "get_iterations_per_second ( ) const, returns int"
	get_iterations_per_second($1)$0

snippet get_latin_keyboard_variant "get_latin_keyboard_variant ( ) const, returns String"
	get_latin_keyboard_variant($1)$0

snippet get_locale "get_locale ( ) const, returns String"
	get_locale($1)$0

snippet get_main_loop "get_main_loop ( ) const, returns Object"
	get_main_loop($1)$0

snippet get_model_name "get_model_name ( ) const, returns String"
	get_model_name($1)$0

# trigger conflict with other class(es)
snippet get_name_OS "get_name ( ) const, returns String"
	get_name($1)$0

snippet get_process_ID "get_process_ID ( ) const, returns int"
	get_process_ID($1)$0

snippet get_processor_count "get_processor_count ( ) const, returns int"
	get_processor_count($1)$0

snippet get_scancode_string "get_scancode_string ( int code ) const, returns String"
	get_scancode_string(${1:int code})$0

snippet get_screen_count "get_screen_count ( ) const, returns int"
	get_screen_count($1)$0

snippet get_screen_dpi "get_screen_dpi ( int screen=0 ) const, returns int"
	get_screen_dpi(${1:int screen=0})$0

snippet get_screen_orientation "get_screen_orientation ( ) const, returns int"
	get_screen_orientation($1)$0

snippet get_screen_position "get_screen_position ( int screen=0 ) const, returns Vector2"
	get_screen_position(${1:int screen=0})$0

snippet get_screen_size "get_screen_size ( int screen=0 ) const, returns Vector2"
	get_screen_size(${1:int screen=0})$0

snippet get_splash_tick_msec "get_splash_tick_msec ( ) const, returns int"
	get_splash_tick_msec($1)$0

snippet get_static_memory_peak_usage "get_static_memory_peak_usage ( ) const, returns int"
	get_static_memory_peak_usage($1)$0

snippet get_static_memory_usage "get_static_memory_usage ( ) const, returns int"
	get_static_memory_usage($1)$0

snippet get_system_dir "get_system_dir ( int dir ) const, returns String"
	get_system_dir(${1:int dir})$0

snippet get_system_time_secs "get_system_time_secs ( ) const, returns int"
	get_system_time_secs($1)$0

snippet get_target_fps "get_target_fps ( ) const, returns float"
	get_target_fps($1)$0

snippet get_ticks_msec "get_ticks_msec ( ) const, returns int"
	get_ticks_msec($1)$0

snippet get_time "get_time ( bool utc=false ) const, returns Dictionary"
	get_time(${1:bool utc=false})$0

snippet get_time_scale "get_time_scale ( ), returns float"
	get_time_scale($1)$0

snippet get_time_zone_info "get_time_zone_info ( ) const, returns Dictionary"
	get_time_zone_info($1)$0

snippet get_unique_ID "get_unique_ID ( ) const, returns String"
	get_unique_ID($1)$0

snippet get_unix_time "get_unix_time ( ) const, returns int"
	get_unix_time($1)$0

snippet get_unix_time_from_datetime "get_unix_time_from_datetime ( Dictionary datetime ) const, returns int"
	get_unix_time_from_datetime(${1:Dictionary datetime})$0

snippet get_video_mode_size "get_video_mode_size ( int screen=0 ) const, returns Vector2"
	get_video_mode_size(${1:int screen=0})$0

snippet get_window_position "get_window_position ( ) const, returns Vector2"
	get_window_position($1)$0

snippet get_window_size "get_window_size ( ) const, returns Vector2"
	get_window_size($1)$0

snippet has_environment "has_environment ( String environment ) const, returns bool"
	has_environment(${1:String environment})$0

snippet has_touchscreen_ui_hint "has_touchscreen_ui_hint ( ) const, returns bool"
	has_touchscreen_ui_hint($1)$0

snippet has_virtual_keyboard "has_virtual_keyboard ( ) const, returns bool"
	has_virtual_keyboard($1)$0

snippet hide_virtual_keyboard "hide_virtual_keyboard ( ), returns void"
	hide_virtual_keyboard($1)$0

snippet is_debug_build "is_debug_build ( ) const, returns bool"
	is_debug_build($1)$0

snippet is_in_low_processor_usage_mode "is_in_low_processor_usage_mode ( ) const, returns bool"
	is_in_low_processor_usage_mode($1)$0

snippet is_keep_screen_on "is_keep_screen_on ( ) const, returns bool"
	is_keep_screen_on($1)$0

snippet is_ok_left_and_cancel_right "is_ok_left_and_cancel_right ( ) const, returns bool"
	is_ok_left_and_cancel_right($1)$0

snippet is_scancode_unicode "is_scancode_unicode ( int code ) const, returns bool"
	is_scancode_unicode(${1:int code})$0

snippet is_stdout_verbose "is_stdout_verbose ( ) const, returns bool"
	is_stdout_verbose($1)$0

snippet is_video_mode_fullscreen "is_video_mode_fullscreen ( int screen=0 ) const, returns bool"
	is_video_mode_fullscreen(${1:int screen=0})$0

snippet is_video_mode_resizable "is_video_mode_resizable ( int screen=0 ) const, returns bool"
	is_video_mode_resizable(${1:int screen=0})$0

snippet is_vsnc_enabled "is_vsnc_enabled ( ) const, returns bool"
	is_vsnc_enabled($1)$0

snippet is_window_fullscreen "is_window_fullscreen ( ) const, returns bool"
	is_window_fullscreen($1)$0

snippet is_window_maximized "is_window_maximized ( ) const, returns bool"
	is_window_maximized($1)$0

snippet is_window_minimized "is_window_minimized ( ) const, returns bool"
	is_window_minimized($1)$0

snippet is_window_resizable "is_window_resizable ( ) const, returns bool"
	is_window_resizable($1)$0

snippet kill "kill ( int pid ), returns int"
	kill(${1:int pid})$0

snippet native_video_is_playing "native_video_is_playing ( ), returns bool"
	native_video_is_playing($1)$0

snippet native_video_pause "native_video_pause ( ), returns void"
	native_video_pause($1)$0

snippet native_video_play "native_video_play ( String path, float volume, String audio_track, String subtitle_track ), returns int"
	native_video_play(${1:String path}, ${2:float volume}, ${3:String audio_track}, ${4:String subtitle_track})$0

snippet native_video_stop "native_video_stop ( ), returns void"
	native_video_stop($1)$0

snippet native_video_unpause "native_video_unpause ( ), returns void"
	native_video_unpause($1)$0

snippet print_all_resources "print_all_resources ( String tofile=”” ), returns void"
	print_all_resources(${1:String tofile=””})$0

snippet print_all_textures_by_size "print_all_textures_by_size ( ), returns void"
	print_all_textures_by_size($1)$0

snippet print_resources_by_type "print_resources_by_type ( StringArray types ), returns void"
	print_resources_by_type(${1:StringArray types})$0

snippet print_resources_in_use "print_resources_in_use ( bool short=false ), returns void"
	print_resources_in_use(${1:bool short=false})$0

snippet request_attention "request_attention ( ), returns void"
	request_attention($1)$0

snippet set_borderless_window "set_borderless_window ( bool borderless ), returns void"
	set_borderless_window(${1:bool borderless})$0

snippet set_clipboard "set_clipboard ( String clipboard ), returns void"
	set_clipboard(${1:String clipboard})$0

snippet set_current_screen "set_current_screen ( int screen ), returns void"
	set_current_screen(${1:int screen})$0

snippet set_icon "set_icon ( Image icon ), returns void"
	set_icon(${1:Image icon})$0

snippet set_iterations_per_second "set_iterations_per_second ( int iterations_per_second ), returns void"
	set_iterations_per_second(${1:int iterations_per_second})$0

snippet set_keep_screen_on "set_keep_screen_on ( bool enabled ), returns void"
	set_keep_screen_on(${1:bool enabled})$0

snippet set_low_processor_usage_mode "set_low_processor_usage_mode ( bool enable ), returns void"
	set_low_processor_usage_mode(${1:bool enable})$0

snippet set_screen_orientation "set_screen_orientation ( int orientation ), returns void"
	set_screen_orientation(${1:int orientation})$0

snippet set_target_fps "set_target_fps ( int target_fps ), returns void"
	set_target_fps(${1:int target_fps})$0

snippet set_thread_name "set_thread_name ( String name ), returns int"
	set_thread_name(${1:String name})$0

snippet set_time_scale "set_time_scale ( float time_scale ), returns void"
	set_time_scale(${1:float time_scale})$0

snippet set_use_file_access_save_and_swap "set_use_file_access_save_and_swap ( bool enabled ), returns void"
	set_use_file_access_save_and_swap(${1:bool enabled})$0

snippet set_use_vsync "set_use_vsync ( bool enable ), returns void"
	set_use_vsync(${1:bool enable})$0

snippet set_video_mode "set_video_mode ( Vector2 size, bool fullscreen, bool resizable, int screen=0 ), returns void"
	set_video_mode(${1:Vector2 size}, ${2:bool fullscreen}, ${3:bool resizable}, ${4:int screen=0})$0

snippet set_window_fullscreen "set_window_fullscreen ( bool enabled ), returns void"
	set_window_fullscreen(${1:bool enabled})$0

snippet set_window_maximized "set_window_maximized ( bool enabled ), returns void"
	set_window_maximized(${1:bool enabled})$0

snippet set_window_minimized "set_window_minimized ( bool enabled ), returns void"
	set_window_minimized(${1:bool enabled})$0

snippet set_window_position "set_window_position ( Vector2 position ), returns void"
	set_window_position(${1:Vector2 position})$0

snippet set_window_resizable "set_window_resizable ( bool enabled ), returns void"
	set_window_resizable(${1:bool enabled})$0

snippet set_window_size "set_window_size ( Vector2 size ), returns void"
	set_window_size(${1:Vector2 size})$0

snippet set_window_title "set_window_title ( String title ), returns void"
	set_window_title(${1:String title})$0

snippet shell_open "shell_open ( String uri ), returns int"
	shell_open(${1:String uri})$0

snippet show_virtual_keyboard "show_virtual_keyboard ( String existing_text=”” ), returns void"
	show_virtual_keyboard(${1:String existing_text=””})$0


# Class: PackedDataContainer
snippet pack "pack ( Variant value ), returns Error"
	pack(${1:Variant value})$0

# trigger conflict with other class(es)
snippet size_PackedDataContainer "size ( ) const, returns int"
	size($1)$0


# Class: PackedDataContainerRef
# trigger conflict with other class(es)
snippet size_PackedDataContainerRef "size ( ) const, returns int"
	size($1)$0


# Class: PackedScene
snippet can_instance "can_instance ( ) const, returns bool"
	can_instance($1)$0

# trigger conflict with other class(es)
snippet get_state_PackedScene "get_state ( ), returns SceneState"
	get_state($1)$0

snippet instance "instance ( bool gen_edit_state=false ) const, returns Node"
	instance(${1:bool gen_edit_state=false})$0

# trigger conflict with other class(es)
snippet pack_PackedScene "pack ( Node path ), returns int"
	pack(${1:Node path})$0


# Class: PacketPeer
snippet get_available_packet_count "get_available_packet_count ( ) const, returns int"
	get_available_packet_count($1)$0

snippet get_packet "get_packet ( ) const, returns RawArray"
	get_packet($1)$0

snippet get_packet_error "get_packet_error ( ) const, returns Error"
	get_packet_error($1)$0

# trigger conflict with other class(es)
snippet get_var_PacketPeer "get_var ( ) const, returns Variant"
	get_var($1)$0

snippet put_packet "put_packet ( RawArray buffer ), returns Error"
	put_packet(${1:RawArray buffer})$0

snippet put_var "put_var ( Variant var ), returns int"
	put_var(${1:Variant var})$0


# Class: PacketPeerStream
snippet set_stream_peer "set_stream_peer ( StreamPeer peer ), returns void"
	set_stream_peer(${1:StreamPeer peer})$0


# Class: PacketPeerUDP
# trigger conflict with other class(es)
snippet close_PacketPeerUDP "close ( ), returns void"
	close($1)$0

snippet get_packet_address "get_packet_address ( ) const, returns int"
	get_packet_address($1)$0

snippet get_packet_ip "get_packet_ip ( ) const, returns String"
	get_packet_ip($1)$0

snippet get_packet_port "get_packet_port ( ) const, returns int"
	get_packet_port($1)$0

snippet is_listening "is_listening ( ) const, returns bool"
	is_listening($1)$0

snippet listen "listen ( int port, int recv_buf_size=65536 ), returns Error"
	listen(${1:int port}, ${2:int recv_buf_size=65536})$0

snippet set_send_address "set_send_address ( String host, int port ), returns int"
	set_send_address(${1:String host}, ${2:int port})$0

snippet wait "wait ( ), returns Error"
	wait($1)$0


# Class: ParallaxBackground
snippet get_limit_begin "get_limit_begin ( ) const, returns Vector2"
	get_limit_begin($1)$0

snippet get_limit_end "get_limit_end ( ) const, returns Vector2"
	get_limit_end($1)$0

snippet get_scroll_base_offset "get_scroll_base_offset ( ) const, returns Vector2"
	get_scroll_base_offset($1)$0

snippet get_scroll_base_scale "get_scroll_base_scale ( ) const, returns Vector2"
	get_scroll_base_scale($1)$0

snippet get_scroll_offset "get_scroll_offset ( ) const, returns Vector2"
	get_scroll_offset($1)$0

snippet is_ignore_camera_zoom "is_ignore_camera_zoom ( ), returns bool"
	is_ignore_camera_zoom($1)$0

snippet set_ignore_camera_zoom "set_ignore_camera_zoom ( bool ignore ), returns void"
	set_ignore_camera_zoom(${1:bool ignore})$0

snippet set_limit_begin "set_limit_begin ( Vector2 ofs ), returns void"
	set_limit_begin(${1:Vector2 ofs})$0

snippet set_limit_end "set_limit_end ( Vector2 ofs ), returns void"
	set_limit_end(${1:Vector2 ofs})$0

snippet set_scroll_base_offset "set_scroll_base_offset ( Vector2 ofs ), returns void"
	set_scroll_base_offset(${1:Vector2 ofs})$0

snippet set_scroll_base_scale "set_scroll_base_scale ( Vector2 scale ), returns void"
	set_scroll_base_scale(${1:Vector2 scale})$0

snippet set_scroll_offset "set_scroll_offset ( Vector2 ofs ), returns void"
	set_scroll_offset(${1:Vector2 ofs})$0


# Class: ParallaxLayer
snippet get_mirroring "get_mirroring ( ) const, returns Vector2"
	get_mirroring($1)$0

snippet get_motion_offset "get_motion_offset ( ) const, returns Vector2"
	get_motion_offset($1)$0

snippet get_motion_scale "get_motion_scale ( ) const, returns Vector2"
	get_motion_scale($1)$0

snippet set_mirroring "set_mirroring ( Vector2 mirror ), returns void"
	set_mirroring(${1:Vector2 mirror})$0

snippet set_motion_offset "set_motion_offset ( Vector2 offset ), returns void"
	set_motion_offset(${1:Vector2 offset})$0

snippet set_motion_scale "set_motion_scale ( Vector2 scale ), returns void"
	set_motion_scale(${1:Vector2 scale})$0


# Class: ParticleAttractor2D
snippet get_absorption "get_absorption ( ) const, returns float"
	get_absorption($1)$0

snippet get_disable_radius "get_disable_radius ( ) const, returns float"
	get_disable_radius($1)$0

# trigger conflict with other class(es)
snippet get_gravity_ParticleAttractor2D "get_gravity ( ) const, returns float"
	get_gravity($1)$0

snippet get_particles_path "get_particles_path ( ) const, returns NodePath"
	get_particles_path($1)$0

# trigger conflict with other class(es)
snippet get_radius_ParticleAttractor2D "get_radius ( ) const, returns float"
	get_radius($1)$0

# trigger conflict with other class(es)
snippet is_enabled_ParticleAttractor2D "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

snippet set_absorption "set_absorption ( float absorption ), returns void"
	set_absorption(${1:float absorption})$0

snippet set_disable_radius "set_disable_radius ( float radius ), returns void"
	set_disable_radius(${1:float radius})$0

# trigger conflict with other class(es)
snippet set_enabled_ParticleAttractor2D "set_enabled ( bool enabled ), returns void"
	set_enabled(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_gravity_ParticleAttractor2D "set_gravity ( float gravity ), returns void"
	set_gravity(${1:float gravity})$0

snippet set_particles_path "set_particles_path ( NodePath path ), returns void"
	set_particles_path(${1:NodePath path})$0

# trigger conflict with other class(es)
snippet set_radius_ParticleAttractor2D "set_radius ( float radius ), returns void"
	set_radius(${1:float radius})$0


# Class: Particles
snippet get_amount "get_amount ( ) const, returns int"
	get_amount($1)$0

snippet get_color_phase_color "get_color_phase_color ( int phase ) const, returns Color"
	get_color_phase_color(${1:int phase})$0

snippet get_color_phase_pos "get_color_phase_pos ( int phase ) const, returns float"
	get_color_phase_pos(${1:int phase})$0

snippet get_color_phases "get_color_phases ( ) const, returns int"
	get_color_phases($1)$0

snippet get_emission_base_velocity "get_emission_base_velocity ( ) const, returns Vector3"
	get_emission_base_velocity($1)$0

snippet get_emission_half_extents "get_emission_half_extents ( ) const, returns Vector3"
	get_emission_half_extents($1)$0

snippet get_emission_points "get_emission_points ( ) const, returns Vector3Array"
	get_emission_points($1)$0

snippet get_emit_timeout "get_emit_timeout ( ) const, returns float"
	get_emit_timeout($1)$0

snippet get_gravity_normal "get_gravity_normal ( ) const, returns Vector3"
	get_gravity_normal($1)$0

# trigger conflict with other class(es)
snippet get_material_Particles "get_material ( ) const, returns Material"
	get_material($1)$0

snippet get_randomness "get_randomness ( int variable ) const, returns float"
	get_randomness(${1:int variable})$0

snippet get_variable "get_variable ( int variable ) const, returns float"
	get_variable(${1:int variable})$0

snippet get_visibility_aabb "get_visibility_aabb ( ) const, returns AABB"
	get_visibility_aabb($1)$0

snippet has_height_from_velocity "has_height_from_velocity ( ) const, returns bool"
	has_height_from_velocity($1)$0

snippet is_emitting "is_emitting ( ) const, returns bool"
	is_emitting($1)$0

snippet is_using_local_coordinates "is_using_local_coordinates ( ) const, returns bool"
	is_using_local_coordinates($1)$0

snippet set_amount "set_amount ( int amount ), returns void"
	set_amount(${1:int amount})$0

snippet set_color_phase_color "set_color_phase_color ( int phase, Color color ), returns void"
	set_color_phase_color(${1:int phase}, ${2:Color color})$0

snippet set_color_phase_pos "set_color_phase_pos ( int phase, float pos ), returns void"
	set_color_phase_pos(${1:int phase}, ${2:float pos})$0

snippet set_color_phases "set_color_phases ( int count ), returns void"
	set_color_phases(${1:int count})$0

snippet set_emission_base_velocity "set_emission_base_velocity ( Vector3 base_velocity ), returns void"
	set_emission_base_velocity(${1:Vector3 base_velocity})$0

snippet set_emission_half_extents "set_emission_half_extents ( Vector3 half_extents ), returns void"
	set_emission_half_extents(${1:Vector3 half_extents})$0

snippet set_emission_points "set_emission_points ( Vector3Array points ), returns void"
	set_emission_points(${1:Vector3Array points})$0

snippet set_emit_timeout "set_emit_timeout ( float timeout ), returns void"
	set_emit_timeout(${1:float timeout})$0

snippet set_emitting "set_emitting ( bool enabled ), returns void"
	set_emitting(${1:bool enabled})$0

snippet set_gravity_normal "set_gravity_normal ( Vector3 normal ), returns void"
	set_gravity_normal(${1:Vector3 normal})$0

snippet set_height_from_velocity "set_height_from_velocity ( bool enable ), returns void"
	set_height_from_velocity(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_material_Particles "set_material ( Material material ), returns void"
	set_material(${1:Material material})$0

snippet set_randomness "set_randomness ( int variable, float randomness ), returns void"
	set_randomness(${1:int variable}, ${2:float randomness})$0

snippet set_use_local_coordinates "set_use_local_coordinates ( bool enable ), returns void"
	set_use_local_coordinates(${1:bool enable})$0

snippet set_variable "set_variable ( int variable, float value ), returns void"
	set_variable(${1:int variable}, ${2:float value})$0

snippet set_visibility_aabb "set_visibility_aabb ( AABB aabb ), returns void"
	set_visibility_aabb(${1:AABB aabb})$0


# Class: Particles2D
# trigger conflict with other class(es)
snippet get_amount_Particles2D "get_amount ( ) const, returns int"
	get_amount($1)$0

# trigger conflict with other class(es)
snippet get_color_Particles2D "get_color ( ) const, returns Color"
	get_color($1)$0

# trigger conflict with other class(es)
snippet get_color_phase_color_Particles2D "get_color_phase_color ( int phase ) const, returns Color"
	get_color_phase_color(${1:int phase})$0

# trigger conflict with other class(es)
snippet get_color_phase_pos_Particles2D "get_color_phase_pos ( int phase ) const, returns float"
	get_color_phase_pos(${1:int phase})$0

# trigger conflict with other class(es)
snippet get_color_phases_Particles2D "get_color_phases ( ) const, returns int"
	get_color_phases($1)$0

snippet get_color_ramp "get_color_ramp ( ) const, returns ColorRamp"
	get_color_ramp($1)$0

# trigger conflict with other class(es)
snippet get_emission_half_extents_Particles2D "get_emission_half_extents ( ) const, returns Vector2"
	get_emission_half_extents($1)$0

# trigger conflict with other class(es)
snippet get_emission_points_Particles2D "get_emission_points ( ) const, returns Vector2Array"
	get_emission_points($1)$0

snippet get_emissor_offset "get_emissor_offset ( ) const, returns Vector2"
	get_emissor_offset($1)$0

# trigger conflict with other class(es)
snippet get_emit_timeout_Particles2D "get_emit_timeout ( ) const, returns float"
	get_emit_timeout($1)$0

snippet get_explosiveness "get_explosiveness ( ) const, returns float"
	get_explosiveness($1)$0

snippet get_h_frames "get_h_frames ( ) const, returns int"
	get_h_frames($1)$0

snippet get_initial_velocity "get_initial_velocity ( ) const, returns Vector2"
	get_initial_velocity($1)$0

snippet get_lifetime "get_lifetime ( ) const, returns float"
	get_lifetime($1)$0

# trigger conflict with other class(es)
snippet get_param_Particles2D "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

snippet get_pre_process_time "get_pre_process_time ( ) const, returns float"
	get_pre_process_time($1)$0

# trigger conflict with other class(es)
snippet get_randomness_Particles2D "get_randomness ( int param ) const, returns float"
	get_randomness(${1:int param})$0

# trigger conflict with other class(es)
snippet get_texture_Particles2D "get_texture ( ) const, returns Texture"
	get_texture($1)$0

# trigger conflict with other class(es)
snippet get_time_scale_Particles2D "get_time_scale ( ) const, returns float"
	get_time_scale($1)$0

snippet get_v_frames "get_v_frames ( ) const, returns int"
	get_v_frames($1)$0

# trigger conflict with other class(es)
snippet is_emitting_Particles2D "is_emitting ( ) const, returns bool"
	is_emitting($1)$0

# trigger conflict with other class(es)
snippet is_flipped_h_Particles2D "is_flipped_h ( ) const, returns bool"
	is_flipped_h($1)$0

# trigger conflict with other class(es)
snippet is_flipped_v_Particles2D "is_flipped_v ( ) const, returns bool"
	is_flipped_v($1)$0

snippet is_using_local_space "is_using_local_space ( ) const, returns bool"
	is_using_local_space($1)$0

snippet pre_process "pre_process ( float time ), returns void"
	pre_process(${1:float time})$0

# trigger conflict with other class(es)
snippet reset_Particles2D "reset ( ), returns void"
	reset($1)$0

# trigger conflict with other class(es)
snippet set_amount_Particles2D "set_amount ( int amount ), returns void"
	set_amount(${1:int amount})$0

# trigger conflict with other class(es)
snippet set_color_Particles2D "set_color ( Color color ), returns void"
	set_color(${1:Color color})$0

# trigger conflict with other class(es)
snippet set_color_phase_color_Particles2D "set_color_phase_color ( int phase, Color color ), returns void"
	set_color_phase_color(${1:int phase}, ${2:Color color})$0

# trigger conflict with other class(es)
snippet set_color_phase_pos_Particles2D "set_color_phase_pos ( int phase, float pos ), returns void"
	set_color_phase_pos(${1:int phase}, ${2:float pos})$0

# trigger conflict with other class(es)
snippet set_color_phases_Particles2D "set_color_phases ( int phases ), returns void"
	set_color_phases(${1:int phases})$0

snippet set_color_ramp "set_color_ramp ( Object color_ramp ), returns ColorRamp"
	set_color_ramp(${1:Object color_ramp})$0

# trigger conflict with other class(es)
snippet set_emission_half_extents_Particles2D "set_emission_half_extents ( Vector2 extents ), returns void"
	set_emission_half_extents(${1:Vector2 extents})$0

# trigger conflict with other class(es)
snippet set_emission_points_Particles2D "set_emission_points ( Vector2Array points ), returns void"
	set_emission_points(${1:Vector2Array points})$0

snippet set_emissor_offset "set_emissor_offset ( Vector2 offset ), returns void"
	set_emissor_offset(${1:Vector2 offset})$0

# trigger conflict with other class(es)
snippet set_emit_timeout_Particles2D "set_emit_timeout ( float value ), returns void"
	set_emit_timeout(${1:float value})$0

# trigger conflict with other class(es)
snippet set_emitting_Particles2D "set_emitting ( bool active ), returns void"
	set_emitting(${1:bool active})$0

snippet set_explosiveness "set_explosiveness ( float amount ), returns void"
	set_explosiveness(${1:float amount})$0

# trigger conflict with other class(es)
snippet set_flip_h_Particles2D "set_flip_h ( bool enable ), returns void"
	set_flip_h(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_flip_v_Particles2D "set_flip_v ( bool enable ), returns void"
	set_flip_v(${1:bool enable})$0

snippet set_h_frames "set_h_frames ( int enable ), returns void"
	set_h_frames(${1:int enable})$0

snippet set_initial_velocity "set_initial_velocity ( Vector2 velocity ), returns void"
	set_initial_velocity(${1:Vector2 velocity})$0

snippet set_lifetime "set_lifetime ( float lifetime ), returns void"
	set_lifetime(${1:float lifetime})$0

# trigger conflict with other class(es)
snippet set_param_Particles2D "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0

snippet set_pre_process_time "set_pre_process_time ( float time ), returns void"
	set_pre_process_time(${1:float time})$0

# trigger conflict with other class(es)
snippet set_randomness_Particles2D "set_randomness ( int param, float value ), returns void"
	set_randomness(${1:int param}, ${2:float value})$0

# trigger conflict with other class(es)
snippet set_texture_Particles2D "set_texture ( Object texture ), returns Texture"
	set_texture(${1:Object texture})$0

# trigger conflict with other class(es)
snippet set_time_scale_Particles2D "set_time_scale ( float time_scale ), returns void"
	set_time_scale(${1:float time_scale})$0

snippet set_use_local_space "set_use_local_space ( bool enable ), returns void"
	set_use_local_space(${1:bool enable})$0

snippet set_v_frames "set_v_frames ( int enable ), returns void"
	set_v_frames(${1:int enable})$0


# Class: Patch9Frame
snippet get_draw_center "get_draw_center ( ) const, returns bool"
	get_draw_center($1)$0

# trigger conflict with other class(es)
snippet get_modulate_Patch9Frame "get_modulate ( ) const, returns Color"
	get_modulate($1)$0

snippet get_patch_margin "get_patch_margin ( int margin ) const, returns int"
	get_patch_margin(${1:int margin})$0

snippet get_region_rect "get_region_rect ( ) const, returns Rect2"
	get_region_rect($1)$0

# trigger conflict with other class(es)
snippet get_texture_Patch9Frame "get_texture ( ) const, returns Object"
	get_texture($1)$0

snippet set_draw_center "set_draw_center ( bool draw_center ), returns void"
	set_draw_center(${1:bool draw_center})$0

# trigger conflict with other class(es)
snippet set_modulate_Patch9Frame "set_modulate ( Color modulate ), returns void"
	set_modulate(${1:Color modulate})$0

snippet set_patch_margin "set_patch_margin ( int margin, int value ), returns void"
	set_patch_margin(${1:int margin}, ${2:int value})$0

snippet set_region_rect "set_region_rect ( Rect2 rect ), returns void"
	set_region_rect(${1:Rect2 rect})$0

# trigger conflict with other class(es)
snippet set_texture_Patch9Frame "set_texture ( Object texture ), returns void"
	set_texture(${1:Object texture})$0


# Class: Path
snippet get_curve "get_curve ( ) const, returns Curve3D"
	get_curve($1)$0

snippet set_curve "set_curve ( Curve3D curve ), returns void"
	set_curve(${1:Curve3D curve})$0


# Class: Path2D
# trigger conflict with other class(es)
snippet get_curve_Path2D "get_curve ( ) const, returns Curve2D"
	get_curve($1)$0

# trigger conflict with other class(es)
snippet set_curve_Path2D "set_curve ( Curve2D curve ), returns void"
	set_curve(${1:Curve2D curve})$0


# Class: PathFollow
snippet get_cubic_interpolation "get_cubic_interpolation ( ) const, returns bool"
	get_cubic_interpolation($1)$0

# trigger conflict with other class(es)
snippet get_h_offset_PathFollow "get_h_offset ( ) const, returns float"
	get_h_offset($1)$0

# trigger conflict with other class(es)
snippet get_offset_PathFollow "get_offset ( ) const, returns float"
	get_offset($1)$0

snippet get_rotation_mode "get_rotation_mode ( ) const, returns int"
	get_rotation_mode($1)$0

snippet get_unit_offset "get_unit_offset ( ) const, returns float"
	get_unit_offset($1)$0

# trigger conflict with other class(es)
snippet get_v_offset_PathFollow "get_v_offset ( ) const, returns float"
	get_v_offset($1)$0

# trigger conflict with other class(es)
snippet has_loop_PathFollow "has_loop ( ) const, returns bool"
	has_loop($1)$0

snippet set_cubic_interpolation "set_cubic_interpolation ( bool enable ), returns void"
	set_cubic_interpolation(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_h_offset_PathFollow "set_h_offset ( float h_offset ), returns void"
	set_h_offset(${1:float h_offset})$0

# trigger conflict with other class(es)
snippet set_loop_PathFollow "set_loop ( bool loop ), returns void"
	set_loop(${1:bool loop})$0

# trigger conflict with other class(es)
snippet set_offset_PathFollow "set_offset ( float offset ), returns void"
	set_offset(${1:float offset})$0

snippet set_rotation_mode "set_rotation_mode ( int rotation_mode ), returns void"
	set_rotation_mode(${1:int rotation_mode})$0

snippet set_unit_offset "set_unit_offset ( float unit_offset ), returns void"
	set_unit_offset(${1:float unit_offset})$0

# trigger conflict with other class(es)
snippet set_v_offset_PathFollow "set_v_offset ( float v_offset ), returns void"
	set_v_offset(${1:float v_offset})$0


# Class: PathFollow2D
# trigger conflict with other class(es)
snippet get_cubic_interpolation_PathFollow2D "get_cubic_interpolation ( ) const, returns bool"
	get_cubic_interpolation($1)$0

# trigger conflict with other class(es)
snippet get_h_offset_PathFollow2D "get_h_offset ( ) const, returns float"
	get_h_offset($1)$0

# trigger conflict with other class(es)
snippet get_offset_PathFollow2D "get_offset ( ) const, returns float"
	get_offset($1)$0

# trigger conflict with other class(es)
snippet get_unit_offset_PathFollow2D "get_unit_offset ( ) const, returns float"
	get_unit_offset($1)$0

# trigger conflict with other class(es)
snippet get_v_offset_PathFollow2D "get_v_offset ( ) const, returns float"
	get_v_offset($1)$0

# trigger conflict with other class(es)
snippet has_loop_PathFollow2D "has_loop ( ) const, returns bool"
	has_loop($1)$0

# trigger conflict with other class(es)
snippet is_rotating_PathFollow2D "is_rotating ( ) const, returns bool"
	is_rotating($1)$0

# trigger conflict with other class(es)
snippet set_cubic_interpolation_PathFollow2D "set_cubic_interpolation ( bool enable ), returns void"
	set_cubic_interpolation(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_h_offset_PathFollow2D "set_h_offset ( float h_offset ), returns void"
	set_h_offset(${1:float h_offset})$0

# trigger conflict with other class(es)
snippet set_loop_PathFollow2D "set_loop ( bool loop ), returns void"
	set_loop(${1:bool loop})$0

# trigger conflict with other class(es)
snippet set_offset_PathFollow2D "set_offset ( float offset ), returns void"
	set_offset(${1:float offset})$0

snippet set_rotate "set_rotate ( bool enable ), returns void"
	set_rotate(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_unit_offset_PathFollow2D "set_unit_offset ( float unit_offset ), returns void"
	set_unit_offset(${1:float unit_offset})$0

# trigger conflict with other class(es)
snippet set_v_offset_PathFollow2D "set_v_offset ( float v_offset ), returns void"
	set_v_offset(${1:float v_offset})$0


# Class: PathRemap
snippet add_remap "add_remap ( String from, String to, String locale=”” ), returns void"
	add_remap(${1:String from}, ${2:String to}, ${3:String locale=””})$0

snippet clear_remaps "clear_remaps ( ), returns void"
	clear_remaps($1)$0

snippet erase_remap "erase_remap ( String path ), returns void"
	erase_remap(${1:String path})$0

snippet get_remap "get_remap ( String path ) const, returns String"
	get_remap(${1:String path})$0

snippet has_remap "has_remap ( String path ) const, returns bool"
	has_remap(${1:String path})$0


# Class: PCKPacker
snippet add_file "add_file ( String pck_path, String source_path ), returns int"
	add_file(${1:String pck_path}, ${2:String source_path})$0

snippet flush "flush ( bool verbose ), returns int"
	flush(${1:bool verbose})$0

snippet pck_start "pck_start ( String pck_name, int alignment ), returns int"
	pck_start(${1:String pck_name}, ${2:int alignment})$0


# Class: Performance
snippet get_monitor "get_monitor ( int monitor ) const, returns float"
	get_monitor(${1:int monitor})$0


# Class: PHashTranslation
snippet generate "generate ( Translation from ), returns void"
	generate(${1:Translation from})$0


# Class: PhysicsDirectBodyState
snippet get_angular_velocity "get_angular_velocity ( ) const, returns float"
	get_angular_velocity($1)$0

snippet get_contact_collider "get_contact_collider ( int contact_idx ) const, returns RID"
	get_contact_collider(${1:int contact_idx})$0

snippet get_contact_collider_id "get_contact_collider_id ( int contact_idx ) const, returns int"
	get_contact_collider_id(${1:int contact_idx})$0

snippet get_contact_collider_object "get_contact_collider_object ( int contact_idx ) const, returns Object"
	get_contact_collider_object(${1:int contact_idx})$0

snippet get_contact_collider_pos "get_contact_collider_pos ( int contact_idx ) const, returns Vector2"
	get_contact_collider_pos(${1:int contact_idx})$0

snippet get_contact_collider_shape "get_contact_collider_shape ( int contact_idx ) const, returns int"
	get_contact_collider_shape(${1:int contact_idx})$0

snippet get_contact_collider_shape_metadata "get_contact_collider_shape_metadata ( int contact_idx ) const, returns Variant"
	get_contact_collider_shape_metadata(${1:int contact_idx})$0

snippet get_contact_collider_velocity_at_pos "get_contact_collider_velocity_at_pos ( int contact_idx ) const, returns Vector2"
	get_contact_collider_velocity_at_pos(${1:int contact_idx})$0

snippet get_contact_count "get_contact_count ( ) const, returns int"
	get_contact_count($1)$0

snippet get_contact_local_normal "get_contact_local_normal ( int contact_idx ) const, returns Vector2"
	get_contact_local_normal(${1:int contact_idx})$0

snippet get_contact_local_pos "get_contact_local_pos ( int contact_idx ) const, returns Vector2"
	get_contact_local_pos(${1:int contact_idx})$0

snippet get_contact_local_shape "get_contact_local_shape ( int contact_idx ) const, returns int"
	get_contact_local_shape(${1:int contact_idx})$0

snippet get_inverse_inertia "get_inverse_inertia ( ) const, returns float"
	get_inverse_inertia($1)$0

snippet get_inverse_mass "get_inverse_mass ( ) const, returns float"
	get_inverse_mass($1)$0

snippet get_linear_velocity "get_linear_velocity ( ) const, returns Vector2"
	get_linear_velocity($1)$0

snippet get_space_state "get_space_state ( ), returns Physics2DDirectSpaceState"
	get_space_state($1)$0

# trigger conflict with other class(es)
snippet get_step_PhysicsDirectBodyState "get_step ( ) const, returns float"
	get_step($1)$0

snippet get_total_angular_damp "get_total_angular_damp ( ) const, returns float"
	get_total_angular_damp($1)$0

snippet get_total_gravity "get_total_gravity ( ) const, returns Vector2"
	get_total_gravity($1)$0

snippet get_total_linear_damp "get_total_linear_damp ( ) const, returns float"
	get_total_linear_damp($1)$0

# trigger conflict with other class(es)
snippet get_transform_PhysicsDirectBodyState "get_transform ( ) const, returns Matrix32"
	get_transform($1)$0

snippet integrate_forces "integrate_forces ( ), returns void"
	integrate_forces($1)$0

snippet is_sleeping "is_sleeping ( ) const, returns bool"
	is_sleeping($1)$0

snippet set_angular_velocity "set_angular_velocity ( float velocity ), returns void"
	set_angular_velocity(${1:float velocity})$0

snippet set_linear_velocity "set_linear_velocity ( Vector2 velocity ), returns void"
	set_linear_velocity(${1:Vector2 velocity})$0

snippet set_sleep_state "set_sleep_state ( bool enabled ), returns void"
	set_sleep_state(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_transform_PhysicsDirectBodyState "set_transform ( Matrix32 transform ), returns void"
	set_transform(${1:Matrix32 transform})$0


# Class: Physics2DDirectSpaceState
snippet cast_motion "cast_motion ( Physics2DShapeQueryParameters shape ), returns Array"
	cast_motion(${1:Physics2DShapeQueryParameters shape})$0

snippet collide_shape "collide_shape ( Physics2DShapeQueryParameters shape, int max_results=32 ), returns Array"
	collide_shape(${1:Physics2DShapeQueryParameters shape}, ${2:int max_results=32})$0

snippet get_rest_info "get_rest_info ( Physics2DShapeQueryParameters shape ), returns Dictionary"
	get_rest_info(${1:Physics2DShapeQueryParameters shape})$0

snippet intersect_point "intersect_point ( Vector2 point, int max_results=32, Array exclude=Array(), int layer_mask=2147483647, int type_mask=15 ), returns Array"
	intersect_point(${1:Vector2 point}, ${2:int max_results=32}, ${3:Array exclude=Array()}, ${4:int layer_mask=2147483647}, ${5:int type_mask=15})$0

snippet intersect_ray "intersect_ray ( Vector2 from, Vector2 to, Array exclude=Array(), int layer_mask=2147483647, int type_mask=15 ), returns Dictionary"
	intersect_ray(${1:Vector2 from}, ${2:Vector2 to}, ${3:Array exclude=Array()}, ${4:int layer_mask=2147483647}, ${5:int type_mask=15})$0

snippet intersect_shape "intersect_shape ( Physics2DShapeQueryParameters shape, int max_results=32 ), returns Array"
	intersect_shape(${1:Physics2DShapeQueryParameters shape}, ${2:int max_results=32})$0


# Class: Physics2DServer
snippet area_add_shape "area_add_shape ( RID area, RID shape, Matrix32 transform=((1, 0), (0, 1), (0, 0)) ), returns void"
	area_add_shape(${1:RID area}, ${2:RID shape}, ${3:Matrix32 transform=((1}, ${4:0)}, ${5:(0}, ${6:1)}, ${7:(0}, ${8:0))})$0

snippet area_attach_object_instance_ID "area_attach_object_instance_ID ( RID area, int id ), returns void"
	area_attach_object_instance_ID(${1:RID area}, ${2:int id})$0

snippet area_clear_shapes "area_clear_shapes ( RID area ), returns void"
	area_clear_shapes(${1:RID area})$0

snippet area_create "area_create ( ), returns RID"
	area_create($1)$0

snippet area_get_object_instance_ID "area_get_object_instance_ID ( RID area ) const, returns int"
	area_get_object_instance_ID(${1:RID area})$0

snippet area_get_param "area_get_param ( RID area, int param ) const, returns void"
	area_get_param(${1:RID area}, ${2:int param})$0

snippet area_get_shape "area_get_shape ( RID area, int shape_idx ) const, returns RID"
	area_get_shape(${1:RID area}, ${2:int shape_idx})$0

snippet area_get_shape_count "area_get_shape_count ( RID area ) const, returns int"
	area_get_shape_count(${1:RID area})$0

snippet area_get_shape_transform "area_get_shape_transform ( RID area, int shape_idx ) const, returns Matrix32"
	area_get_shape_transform(${1:RID area}, ${2:int shape_idx})$0

snippet area_get_space "area_get_space ( RID area ) const, returns RID"
	area_get_space(${1:RID area})$0

snippet area_get_space_override_mode "area_get_space_override_mode ( RID area ) const, returns int"
	area_get_space_override_mode(${1:RID area})$0

snippet area_get_transform "area_get_transform ( RID area ) const, returns Matrix32"
	area_get_transform(${1:RID area})$0

snippet area_remove_shape "area_remove_shape ( RID area, int shape_idx ), returns void"
	area_remove_shape(${1:RID area}, ${2:int shape_idx})$0

snippet area_set_collision_mask "area_set_collision_mask ( RID area, int mask ), returns void"
	area_set_collision_mask(${1:RID area}, ${2:int mask})$0

snippet area_set_layer_mask "area_set_layer_mask ( RID area, int mask ), returns void"
	area_set_layer_mask(${1:RID area}, ${2:int mask})$0

snippet area_set_monitor_callback "area_set_monitor_callback ( RID area, Object receiver, String method ), returns void"
	area_set_monitor_callback(${1:RID area}, ${2:Object receiver}, ${3:String method})$0

snippet area_set_param "area_set_param ( RID area, int param, Variant value ), returns void"
	area_set_param(${1:RID area}, ${2:int param}, ${3:Variant value})$0

snippet area_set_shape "area_set_shape ( RID area, int shape_idx, RID shape ), returns void"
	area_set_shape(${1:RID area}, ${2:int shape_idx}, ${3:RID shape})$0

snippet area_set_shape_transform "area_set_shape_transform ( RID area, int shape_idx, Matrix32 transform ), returns void"
	area_set_shape_transform(${1:RID area}, ${2:int shape_idx}, ${3:Matrix32 transform})$0

snippet area_set_space "area_set_space ( RID area, RID space ), returns void"
	area_set_space(${1:RID area}, ${2:RID space})$0

snippet area_set_space_override_mode "area_set_space_override_mode ( RID area, int mode ), returns void"
	area_set_space_override_mode(${1:RID area}, ${2:int mode})$0

snippet area_set_transform "area_set_transform ( RID area, Matrix32 transform ), returns void"
	area_set_transform(${1:RID area}, ${2:Matrix32 transform})$0

snippet body_add_collision_exception "body_add_collision_exception ( RID body, RID excepted_body ), returns void"
	body_add_collision_exception(${1:RID body}, ${2:RID excepted_body})$0

snippet body_add_force "body_add_force ( RID body, Vector2 offset, Vector2 force ), returns void"
	body_add_force(${1:RID body}, ${2:Vector2 offset}, ${3:Vector2 force})$0

snippet body_add_shape "body_add_shape ( RID body, RID shape, Matrix32 transform=((1, 0), (0, 1), (0, 0)) ), returns void"
	body_add_shape(${1:RID body}, ${2:RID shape}, ${3:Matrix32 transform=((1}, ${4:0)}, ${5:(0}, ${6:1)}, ${7:(0}, ${8:0))})$0

snippet body_apply_impulse "body_apply_impulse ( RID body, Vector2 pos, Vector2 impulse ), returns void"
	body_apply_impulse(${1:RID body}, ${2:Vector2 pos}, ${3:Vector2 impulse})$0

snippet body_attach_object_instance_ID "body_attach_object_instance_ID ( RID body, int id ), returns void"
	body_attach_object_instance_ID(${1:RID body}, ${2:int id})$0

snippet body_clear_shapes "body_clear_shapes ( RID body ), returns void"
	body_clear_shapes(${1:RID body})$0

snippet body_create "body_create ( int mode=2, bool init_sleeping=false ), returns RID"
	body_create(${1:int mode=2}, ${2:bool init_sleeping=false})$0

snippet body_get_collision_mask "body_get_collision_mask ( RID body ) const, returns int"
	body_get_collision_mask(${1:RID body})$0

snippet body_get_continuous_collision_detection_mode "body_get_continuous_collision_detection_mode ( RID body ) const, returns int"
	body_get_continuous_collision_detection_mode(${1:RID body})$0

snippet body_get_layer_mask "body_get_layer_mask ( RID body ) const, returns int"
	body_get_layer_mask(${1:RID body})$0

snippet body_get_max_contacts_reported "body_get_max_contacts_reported ( RID body ) const, returns int"
	body_get_max_contacts_reported(${1:RID body})$0

snippet body_get_mode "body_get_mode ( RID body ) const, returns int"
	body_get_mode(${1:RID body})$0

snippet body_get_object_instance_ID "body_get_object_instance_ID ( RID body ) const, returns int"
	body_get_object_instance_ID(${1:RID body})$0

snippet body_get_one_way_collision_direction "body_get_one_way_collision_direction ( RID body ) const, returns Vector2"
	body_get_one_way_collision_direction(${1:RID body})$0

snippet body_get_one_way_collision_max_depth "body_get_one_way_collision_max_depth ( RID body ) const, returns float"
	body_get_one_way_collision_max_depth(${1:RID body})$0

snippet body_get_param "body_get_param ( RID body, int param ) const, returns float"
	body_get_param(${1:RID body}, ${2:int param})$0

snippet body_get_shape "body_get_shape ( RID body, int shape_idx ) const, returns RID"
	body_get_shape(${1:RID body}, ${2:int shape_idx})$0

snippet body_get_shape_count "body_get_shape_count ( RID body ) const, returns int"
	body_get_shape_count(${1:RID body})$0

snippet body_get_shape_metadata "body_get_shape_metadata ( RID body, int shape_idx ) const, returns void"
	body_get_shape_metadata(${1:RID body}, ${2:int shape_idx})$0

snippet body_get_shape_transform "body_get_shape_transform ( RID body, int shape_idx ) const, returns Matrix32"
	body_get_shape_transform(${1:RID body}, ${2:int shape_idx})$0

snippet body_get_space "body_get_space ( RID body ) const, returns RID"
	body_get_space(${1:RID body})$0

snippet body_get_state "body_get_state ( RID body, int state ) const, returns void"
	body_get_state(${1:RID body}, ${2:int state})$0

snippet body_is_omitting_force_integration "body_is_omitting_force_integration ( RID body ) const, returns bool"
	body_is_omitting_force_integration(${1:RID body})$0

snippet body_is_shape_set_as_trigger "body_is_shape_set_as_trigger ( RID body, int shape_idx ) const, returns bool"
	body_is_shape_set_as_trigger(${1:RID body}, ${2:int shape_idx})$0

snippet body_remove_collision_exception "body_remove_collision_exception ( RID body, RID excepted_body ), returns void"
	body_remove_collision_exception(${1:RID body}, ${2:RID excepted_body})$0

snippet body_remove_shape "body_remove_shape ( RID body, int shape_idx ), returns void"
	body_remove_shape(${1:RID body}, ${2:int shape_idx})$0

snippet body_set_axis_velocity "body_set_axis_velocity ( RID body, Vector2 axis_velocity ), returns void"
	body_set_axis_velocity(${1:RID body}, ${2:Vector2 axis_velocity})$0

snippet body_set_collision_mask "body_set_collision_mask ( RID body, int mask ), returns void"
	body_set_collision_mask(${1:RID body}, ${2:int mask})$0

snippet body_set_continuous_collision_detection_mode "body_set_continuous_collision_detection_mode ( RID body, int mode ), returns void"
	body_set_continuous_collision_detection_mode(${1:RID body}, ${2:int mode})$0

snippet body_set_force_integration_callback "body_set_force_integration_callback ( RID body, Object receiver, String method, Variant userdata=NULL ), returns void"
	body_set_force_integration_callback(${1:RID body}, ${2:Object receiver}, ${3:String method}, ${4:Variant userdata=NULL})$0

snippet body_set_layer_mask "body_set_layer_mask ( RID body, int mask ), returns void"
	body_set_layer_mask(${1:RID body}, ${2:int mask})$0

snippet body_set_max_contacts_reported "body_set_max_contacts_reported ( RID body, int amount ), returns void"
	body_set_max_contacts_reported(${1:RID body}, ${2:int amount})$0

snippet body_set_mode "body_set_mode ( RID body, int mode ), returns void"
	body_set_mode(${1:RID body}, ${2:int mode})$0

snippet body_set_omit_force_integration "body_set_omit_force_integration ( RID body, bool enable ), returns void"
	body_set_omit_force_integration(${1:RID body}, ${2:bool enable})$0

snippet body_set_one_way_collision_direction "body_set_one_way_collision_direction ( RID body, Vector2 normal ), returns void"
	body_set_one_way_collision_direction(${1:RID body}, ${2:Vector2 normal})$0

snippet body_set_one_way_collision_max_depth "body_set_one_way_collision_max_depth ( RID body, float depth ), returns void"
	body_set_one_way_collision_max_depth(${1:RID body}, ${2:float depth})$0

snippet body_set_param "body_set_param ( RID body, int param, float value ), returns void"
	body_set_param(${1:RID body}, ${2:int param}, ${3:float value})$0

snippet body_set_shape "body_set_shape ( RID body, int shape_idx, RID shape ), returns void"
	body_set_shape(${1:RID body}, ${2:int shape_idx}, ${3:RID shape})$0

snippet body_set_shape_as_trigger "body_set_shape_as_trigger ( RID body, int shape_idx, bool enable ), returns void"
	body_set_shape_as_trigger(${1:RID body}, ${2:int shape_idx}, ${3:bool enable})$0

snippet body_set_shape_metadata "body_set_shape_metadata ( RID body, int shape_idx, Variant metadata ), returns void"
	body_set_shape_metadata(${1:RID body}, ${2:int shape_idx}, ${3:Variant metadata})$0

snippet body_set_shape_transform "body_set_shape_transform ( RID body, int shape_idx, Matrix32 transform ), returns void"
	body_set_shape_transform(${1:RID body}, ${2:int shape_idx}, ${3:Matrix32 transform})$0

snippet body_set_space "body_set_space ( RID body, RID space ), returns void"
	body_set_space(${1:RID body}, ${2:RID space})$0

snippet body_set_state "body_set_state ( RID body, int state, Variant value ), returns void"
	body_set_state(${1:RID body}, ${2:int state}, ${3:Variant value})$0

snippet body_test_motion "body_test_motion ( RID body, Vector2 motion, float margin=0.08, Physics2DTestMotionResult result=NULL ), returns bool"
	body_test_motion(${1:RID body}, ${2:Vector2 motion}, ${3:float margin=0.08}, ${4:Physics2DTestMotionResult result=NULL})$0

snippet damped_spring_joint_create "damped_spring_joint_create ( Vector2 anchor_a, Vector2 anchor_b, RID body_a, RID body_b=RID() ), returns RID"
	damped_spring_joint_create(${1:Vector2 anchor_a}, ${2:Vector2 anchor_b}, ${3:RID body_a}, ${4:RID body_b=RID()})$0

snippet damped_string_joint_get_param "damped_string_joint_get_param ( RID joint, int param ) const, returns float"
	damped_string_joint_get_param(${1:RID joint}, ${2:int param})$0

snippet damped_string_joint_set_param "damped_string_joint_set_param ( RID joint, int param, float value ), returns void"
	damped_string_joint_set_param(${1:RID joint}, ${2:int param}, ${3:float value})$0

# trigger conflict with other class(es)
snippet free_rid_Physics2DServer "free_rid ( RID rid ), returns void"
	free_rid(${1:RID rid})$0

snippet get_process_info "get_process_info ( int process_info ), returns int"
	get_process_info(${1:int process_info})$0

snippet groove_joint_create "groove_joint_create ( Vector2 groove1_a, Vector2 groove2_a, Vector2 anchor_b, RID body_a=RID(), RID body_b=RID() ), returns RID"
	groove_joint_create(${1:Vector2 groove1_a}, ${2:Vector2 groove2_a}, ${3:Vector2 anchor_b}, ${4:RID body_a=RID()}, ${5:RID body_b=RID()})$0

snippet joint_get_param "joint_get_param ( RID joint, int param ) const, returns float"
	joint_get_param(${1:RID joint}, ${2:int param})$0

snippet joint_get_type "joint_get_type ( RID joint ) const, returns int"
	joint_get_type(${1:RID joint})$0

snippet joint_set_param "joint_set_param ( RID joint, int param, float value ), returns void"
	joint_set_param(${1:RID joint}, ${2:int param}, ${3:float value})$0

snippet pin_joint_create "pin_joint_create ( Vector2 anchor, RID body_a, RID body_b=RID() ), returns RID"
	pin_joint_create(${1:Vector2 anchor}, ${2:RID body_a}, ${3:RID body_b=RID()})$0

# trigger conflict with other class(es)
snippet set_active_Physics2DServer "set_active ( bool active ), returns void"
	set_active(${1:bool active})$0

snippet shape_create "shape_create ( int type ), returns RID"
	shape_create(${1:int type})$0

snippet shape_get_data "shape_get_data ( RID shape ) const, returns void"
	shape_get_data(${1:RID shape})$0

snippet shape_get_type "shape_get_type ( RID shape ) const, returns int"
	shape_get_type(${1:RID shape})$0

snippet shape_set_data "shape_set_data ( RID shape, Variant data ), returns void"
	shape_set_data(${1:RID shape}, ${2:Variant data})$0

snippet space_create "space_create ( ), returns RID"
	space_create($1)$0

snippet space_get_direct_state "space_get_direct_state ( RID space ), returns Physics2DDirectSpaceState"
	space_get_direct_state(${1:RID space})$0

snippet space_get_param "space_get_param ( RID space, int param ) const, returns float"
	space_get_param(${1:RID space}, ${2:int param})$0

snippet space_is_active "space_is_active ( RID space ) const, returns bool"
	space_is_active(${1:RID space})$0

snippet space_set_active "space_set_active ( RID space, bool active ), returns void"
	space_set_active(${1:RID space}, ${2:bool active})$0

snippet space_set_param "space_set_param ( RID space, int param, float value ), returns void"
	space_set_param(${1:RID space}, ${2:int param}, ${3:float value})$0


# Class: Physics2DShapeQueryParameters
snippet get_exclude "get_exclude ( ) const, returns Array"
	get_exclude($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_Physics2DShapeQueryParameters "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

# trigger conflict with other class(es)
snippet get_margin_Physics2DShapeQueryParameters "get_margin ( ) const, returns float"
	get_margin($1)$0

snippet get_motion "get_motion ( ) const, returns Vector2"
	get_motion($1)$0

snippet get_object_type_mask "get_object_type_mask ( ) const, returns int"
	get_object_type_mask($1)$0

snippet get_shape_rid "get_shape_rid ( ) const, returns RID"
	get_shape_rid($1)$0

# trigger conflict with other class(es)
snippet get_transform_Physics2DShapeQueryParameters "get_transform ( ) const, returns Matrix32"
	get_transform($1)$0

snippet set_exclude "set_exclude ( Array exclude ), returns void"
	set_exclude(${1:Array exclude})$0

# trigger conflict with other class(es)
snippet set_layer_mask_Physics2DShapeQueryParameters "set_layer_mask ( int layer_mask ), returns void"
	set_layer_mask(${1:int layer_mask})$0

# trigger conflict with other class(es)
snippet set_margin_Physics2DShapeQueryParameters "set_margin ( float margin ), returns void"
	set_margin(${1:float margin})$0

snippet set_motion "set_motion ( Vector2 motion ), returns void"
	set_motion(${1:Vector2 motion})$0

snippet set_object_type_mask "set_object_type_mask ( int object_type_mask ), returns void"
	set_object_type_mask(${1:int object_type_mask})$0

# trigger conflict with other class(es)
snippet set_shape_Physics2DShapeQueryParameters "set_shape ( Shape2D shape ), returns void"
	set_shape(${1:Shape2D shape})$0

snippet set_shape_rid "set_shape_rid ( RID shape ), returns void"
	set_shape_rid(${1:RID shape})$0

# trigger conflict with other class(es)
snippet set_transform_Physics2DShapeQueryParameters "set_transform ( Matrix32 transform ), returns void"
	set_transform(${1:Matrix32 transform})$0


# Class: Physics2DShapeQueryResult
snippet get_result_count "get_result_count ( ) const, returns int"
	get_result_count($1)$0

snippet get_result_object "get_result_object ( int idx ) const, returns Object"
	get_result_object(${1:int idx})$0

snippet get_result_object_id "get_result_object_id ( int idx ) const, returns int"
	get_result_object_id(${1:int idx})$0

snippet get_result_object_shape "get_result_object_shape ( int idx ) const, returns int"
	get_result_object_shape(${1:int idx})$0

snippet get_result_rid "get_result_rid ( int idx ) const, returns RID"
	get_result_rid(${1:int idx})$0


# Class: Physics2DTestMotionResult
# trigger conflict with other class(es)
snippet get_collider_Physics2DTestMotionResult "get_collider ( ) const, returns Object"
	get_collider($1)$0

snippet get_collider_id "get_collider_id ( ) const, returns int"
	get_collider_id($1)$0

snippet get_collider_rid "get_collider_rid ( ) const, returns RID"
	get_collider_rid($1)$0

# trigger conflict with other class(es)
snippet get_collider_shape_Physics2DTestMotionResult "get_collider_shape ( ) const, returns int"
	get_collider_shape($1)$0

# trigger conflict with other class(es)
snippet get_collider_velocity_Physics2DTestMotionResult "get_collider_velocity ( ) const, returns Vector2"
	get_collider_velocity($1)$0

# trigger conflict with other class(es)
snippet get_collision_normal_Physics2DTestMotionResult "get_collision_normal ( ) const, returns Vector2"
	get_collision_normal($1)$0

snippet get_collision_point "get_collision_point ( ) const, returns Vector2"
	get_collision_point($1)$0

# trigger conflict with other class(es)
snippet get_motion_Physics2DTestMotionResult "get_motion ( ) const, returns Vector2"
	get_motion($1)$0

snippet get_motion_remainder "get_motion_remainder ( ) const, returns Vector2"
	get_motion_remainder($1)$0


# Class: PhysicsBody
snippet add_collision_exception_with "add_collision_exception_with ( PhysicsBody body ), returns void"
	add_collision_exception_with(${1:PhysicsBody body})$0

# trigger conflict with other class(es)
snippet get_collision_mask_PhysicsBody "get_collision_mask ( ) const, returns int"
	get_collision_mask($1)$0

# trigger conflict with other class(es)
snippet get_collision_mask_bit_PhysicsBody "get_collision_mask_bit ( int bit ) const, returns bool"
	get_collision_mask_bit(${1:int bit})$0

# trigger conflict with other class(es)
snippet get_layer_mask_PhysicsBody "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_bit_PhysicsBody "get_layer_mask_bit ( int bit ) const, returns bool"
	get_layer_mask_bit(${1:int bit})$0

snippet remove_collision_exception_with "remove_collision_exception_with ( PhysicsBody body ), returns void"
	remove_collision_exception_with(${1:PhysicsBody body})$0

# trigger conflict with other class(es)
snippet set_collision_mask_PhysicsBody "set_collision_mask ( int mask ), returns void"
	set_collision_mask(${1:int mask})$0

# trigger conflict with other class(es)
snippet set_collision_mask_bit_PhysicsBody "set_collision_mask_bit ( int bit, bool value ), returns void"
	set_collision_mask_bit(${1:int bit}, ${2:bool value})$0

# trigger conflict with other class(es)
snippet set_layer_mask_PhysicsBody "set_layer_mask ( int mask ), returns void"
	set_layer_mask(${1:int mask})$0

# trigger conflict with other class(es)
snippet set_layer_mask_bit_PhysicsBody "set_layer_mask_bit ( int bit, bool value ), returns void"
	set_layer_mask_bit(${1:int bit}, ${2:bool value})$0


# Class: PhysicsBody2D
# trigger conflict with other class(es)
snippet add_collision_exception_with_PhysicsBody2D "add_collision_exception_with ( PhysicsBody2D body ), returns void"
	add_collision_exception_with(${1:PhysicsBody2D body})$0

# trigger conflict with other class(es)
snippet get_collision_mask_PhysicsBody2D "get_collision_mask ( ) const, returns int"
	get_collision_mask($1)$0

# trigger conflict with other class(es)
snippet get_collision_mask_bit_PhysicsBody2D "get_collision_mask_bit ( int bit ) const, returns bool"
	get_collision_mask_bit(${1:int bit})$0

# trigger conflict with other class(es)
snippet get_layer_mask_PhysicsBody2D "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_bit_PhysicsBody2D "get_layer_mask_bit ( int bit ) const, returns bool"
	get_layer_mask_bit(${1:int bit})$0

snippet get_one_way_collision_direction "get_one_way_collision_direction ( ) const, returns Vector2"
	get_one_way_collision_direction($1)$0

snippet get_one_way_collision_max_depth "get_one_way_collision_max_depth ( ) const, returns float"
	get_one_way_collision_max_depth($1)$0

# trigger conflict with other class(es)
snippet remove_collision_exception_with_PhysicsBody2D "remove_collision_exception_with ( PhysicsBody2D body ), returns void"
	remove_collision_exception_with(${1:PhysicsBody2D body})$0

# trigger conflict with other class(es)
snippet set_collision_mask_PhysicsBody2D "set_collision_mask ( int mask ), returns void"
	set_collision_mask(${1:int mask})$0

# trigger conflict with other class(es)
snippet set_collision_mask_bit_PhysicsBody2D "set_collision_mask_bit ( int bit, bool value ), returns void"
	set_collision_mask_bit(${1:int bit}, ${2:bool value})$0

# trigger conflict with other class(es)
snippet set_layer_mask_PhysicsBody2D "set_layer_mask ( int mask ), returns void"
	set_layer_mask(${1:int mask})$0

# trigger conflict with other class(es)
snippet set_layer_mask_bit_PhysicsBody2D "set_layer_mask_bit ( int bit, bool value ), returns void"
	set_layer_mask_bit(${1:int bit}, ${2:bool value})$0

snippet set_one_way_collision_direction "set_one_way_collision_direction ( Vector2 dir ), returns void"
	set_one_way_collision_direction(${1:Vector2 dir})$0

snippet set_one_way_collision_max_depth "set_one_way_collision_max_depth ( float depth ), returns void"
	set_one_way_collision_max_depth(${1:float depth})$0


# Class: PhysicsDirectBodyState
snippet add_force "add_force ( Vector3 force, Vector3 pos ), returns void"
	add_force(${1:Vector3 force}, ${2:Vector3 pos})$0

snippet apply_impulse "apply_impulse ( Vector3 pos, Vector3 j ), returns void"
	apply_impulse(${1:Vector3 pos}, ${2:Vector3 j})$0

# trigger conflict with other class(es)
snippet get_angular_velocity_PhysicsDirectBodyState "get_angular_velocity ( ) const, returns Vector3"
	get_angular_velocity($1)$0

# trigger conflict with other class(es)
snippet get_contact_collider_PhysicsDirectBodyState "get_contact_collider ( int contact_idx ) const, returns RID"
	get_contact_collider(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_collider_id_PhysicsDirectBodyState "get_contact_collider_id ( int contact_idx ) const, returns int"
	get_contact_collider_id(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_collider_object_PhysicsDirectBodyState "get_contact_collider_object ( int contact_idx ) const, returns Object"
	get_contact_collider_object(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_collider_pos_PhysicsDirectBodyState "get_contact_collider_pos ( int contact_idx ) const, returns Vector3"
	get_contact_collider_pos(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_collider_shape_PhysicsDirectBodyState "get_contact_collider_shape ( int contact_idx ) const, returns int"
	get_contact_collider_shape(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_collider_velocity_at_pos_PhysicsDirectBodyState "get_contact_collider_velocity_at_pos ( int contact_idx ) const, returns Vector3"
	get_contact_collider_velocity_at_pos(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_count_PhysicsDirectBodyState "get_contact_count ( ) const, returns int"
	get_contact_count($1)$0

# trigger conflict with other class(es)
snippet get_contact_local_normal_PhysicsDirectBodyState "get_contact_local_normal ( int contact_idx ) const, returns Vector3"
	get_contact_local_normal(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_local_pos_PhysicsDirectBodyState "get_contact_local_pos ( int contact_idx ) const, returns Vector3"
	get_contact_local_pos(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_contact_local_shape_PhysicsDirectBodyState "get_contact_local_shape ( int contact_idx ) const, returns int"
	get_contact_local_shape(${1:int contact_idx})$0

# trigger conflict with other class(es)
snippet get_inverse_inertia_PhysicsDirectBodyState "get_inverse_inertia ( ) const, returns Vector3"
	get_inverse_inertia($1)$0

# trigger conflict with other class(es)
snippet get_inverse_mass_PhysicsDirectBodyState "get_inverse_mass ( ) const, returns float"
	get_inverse_mass($1)$0

# trigger conflict with other class(es)
snippet get_linear_velocity_PhysicsDirectBodyState "get_linear_velocity ( ) const, returns Vector3"
	get_linear_velocity($1)$0

# trigger conflict with other class(es)
snippet get_space_state_PhysicsDirectBodyState "get_space_state ( ), returns PhysicsDirectSpaceState"
	get_space_state($1)$0

# trigger conflict with other class(es)
snippet get_step_PhysicsDirectBodyState "get_step ( ) const, returns float"
	get_step($1)$0

# trigger conflict with other class(es)
snippet get_total_angular_damp_PhysicsDirectBodyState "get_total_angular_damp ( ) const, returns float"
	get_total_angular_damp($1)$0

# trigger conflict with other class(es)
snippet get_total_gravity_PhysicsDirectBodyState "get_total_gravity ( ) const, returns Vector3"
	get_total_gravity($1)$0

# trigger conflict with other class(es)
snippet get_total_linear_damp_PhysicsDirectBodyState "get_total_linear_damp ( ) const, returns float"
	get_total_linear_damp($1)$0

# trigger conflict with other class(es)
snippet get_transform_PhysicsDirectBodyState "get_transform ( ) const, returns Transform"
	get_transform($1)$0

# trigger conflict with other class(es)
snippet integrate_forces_PhysicsDirectBodyState "integrate_forces ( ), returns void"
	integrate_forces($1)$0

# trigger conflict with other class(es)
snippet is_sleeping_PhysicsDirectBodyState "is_sleeping ( ) const, returns bool"
	is_sleeping($1)$0

# trigger conflict with other class(es)
snippet set_angular_velocity_PhysicsDirectBodyState "set_angular_velocity ( Vector3 velocity ), returns void"
	set_angular_velocity(${1:Vector3 velocity})$0

# trigger conflict with other class(es)
snippet set_linear_velocity_PhysicsDirectBodyState "set_linear_velocity ( Vector3 velocity ), returns void"
	set_linear_velocity(${1:Vector3 velocity})$0

# trigger conflict with other class(es)
snippet set_sleep_state_PhysicsDirectBodyState "set_sleep_state ( bool enabled ), returns void"
	set_sleep_state(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_transform_PhysicsDirectBodyState "set_transform ( Transform transform ), returns void"
	set_transform(${1:Transform transform})$0


# Class: PhysicsDirectSpaceState
# trigger conflict with other class(es)
snippet cast_motion_PhysicsDirectSpaceState "cast_motion ( PhysicsShapeQueryParameters shape, Vector3 motion ), returns Array"
	cast_motion(${1:PhysicsShapeQueryParameters shape}, ${2:Vector3 motion})$0

# trigger conflict with other class(es)
snippet collide_shape_PhysicsDirectSpaceState "collide_shape ( PhysicsShapeQueryParameters shape, int max_results=32 ), returns Array"
	collide_shape(${1:PhysicsShapeQueryParameters shape}, ${2:int max_results=32})$0

# trigger conflict with other class(es)
snippet get_rest_info_PhysicsDirectSpaceState "get_rest_info ( PhysicsShapeQueryParameters shape ), returns Dictionary"
	get_rest_info(${1:PhysicsShapeQueryParameters shape})$0

# trigger conflict with other class(es)
snippet intersect_ray_PhysicsDirectSpaceState "intersect_ray ( Vector3 from, Vector3 to, Array exclude=Array(), int layer_mask=2147483647, int type_mask=15 ), returns Dictionary"
	intersect_ray(${1:Vector3 from}, ${2:Vector3 to}, ${3:Array exclude=Array()}, ${4:int layer_mask=2147483647}, ${5:int type_mask=15})$0

# trigger conflict with other class(es)
snippet intersect_shape_PhysicsDirectSpaceState "intersect_shape ( PhysicsShapeQueryParameters shape, int max_results=32 ), returns Array"
	intersect_shape(${1:PhysicsShapeQueryParameters shape}, ${2:int max_results=32})$0


# Class: PhysicsServer
# trigger conflict with other class(es)
snippet area_add_shape_PhysicsServer "area_add_shape ( RID area, RID shape, Transform transform=Transform() ), returns void"
	area_add_shape(${1:RID area}, ${2:RID shape}, ${3:Transform transform=Transform()})$0

# trigger conflict with other class(es)
snippet area_attach_object_instance_ID_PhysicsServer "area_attach_object_instance_ID ( RID area, int id ), returns void"
	area_attach_object_instance_ID(${1:RID area}, ${2:int id})$0

# trigger conflict with other class(es)
snippet area_clear_shapes_PhysicsServer "area_clear_shapes ( RID area ), returns void"
	area_clear_shapes(${1:RID area})$0

# trigger conflict with other class(es)
snippet area_create_PhysicsServer "area_create ( ), returns RID"
	area_create($1)$0

# trigger conflict with other class(es)
snippet area_get_object_instance_ID_PhysicsServer "area_get_object_instance_ID ( RID area ) const, returns int"
	area_get_object_instance_ID(${1:RID area})$0

# trigger conflict with other class(es)
snippet area_get_param_PhysicsServer "area_get_param ( RID area, int param ) const, returns void"
	area_get_param(${1:RID area}, ${2:int param})$0

# trigger conflict with other class(es)
snippet area_get_shape_PhysicsServer "area_get_shape ( RID area, int shape_idx ) const, returns RID"
	area_get_shape(${1:RID area}, ${2:int shape_idx})$0

# trigger conflict with other class(es)
snippet area_get_shape_count_PhysicsServer "area_get_shape_count ( RID area ) const, returns int"
	area_get_shape_count(${1:RID area})$0

# trigger conflict with other class(es)
snippet area_get_shape_transform_PhysicsServer "area_get_shape_transform ( RID area, int shape_idx ) const, returns Transform"
	area_get_shape_transform(${1:RID area}, ${2:int shape_idx})$0

# trigger conflict with other class(es)
snippet area_get_space_PhysicsServer "area_get_space ( RID area ) const, returns RID"
	area_get_space(${1:RID area})$0

# trigger conflict with other class(es)
snippet area_get_space_override_mode_PhysicsServer "area_get_space_override_mode ( RID area ) const, returns int"
	area_get_space_override_mode(${1:RID area})$0

# trigger conflict with other class(es)
snippet area_get_transform_PhysicsServer "area_get_transform ( RID area ) const, returns Transform"
	area_get_transform(${1:RID area})$0

snippet area_is_ray_pickable "area_is_ray_pickable ( RID area ) const, returns bool"
	area_is_ray_pickable(${1:RID area})$0

# trigger conflict with other class(es)
snippet area_remove_shape_PhysicsServer "area_remove_shape ( RID area, int shape_idx ), returns void"
	area_remove_shape(${1:RID area}, ${2:int shape_idx})$0

# trigger conflict with other class(es)
snippet area_set_collision_mask_PhysicsServer "area_set_collision_mask ( RID area, int mask ), returns void"
	area_set_collision_mask(${1:RID area}, ${2:int mask})$0

# trigger conflict with other class(es)
snippet area_set_layer_mask_PhysicsServer "area_set_layer_mask ( RID area, int mask ), returns void"
	area_set_layer_mask(${1:RID area}, ${2:int mask})$0

# trigger conflict with other class(es)
snippet area_set_monitor_callback_PhysicsServer "area_set_monitor_callback ( RID area, Object receiver, String method ), returns void"
	area_set_monitor_callback(${1:RID area}, ${2:Object receiver}, ${3:String method})$0

# trigger conflict with other class(es)
snippet area_set_param_PhysicsServer "area_set_param ( RID area, int param, Variant value ), returns void"
	area_set_param(${1:RID area}, ${2:int param}, ${3:Variant value})$0

snippet area_set_ray_pickable "area_set_ray_pickable ( RID area, bool enable ), returns void"
	area_set_ray_pickable(${1:RID area}, ${2:bool enable})$0

# trigger conflict with other class(es)
snippet area_set_shape_PhysicsServer "area_set_shape ( RID area, int shape_idx, RID shape ), returns void"
	area_set_shape(${1:RID area}, ${2:int shape_idx}, ${3:RID shape})$0

# trigger conflict with other class(es)
snippet area_set_shape_transform_PhysicsServer "area_set_shape_transform ( RID area, int shape_idx, Transform transform ), returns void"
	area_set_shape_transform(${1:RID area}, ${2:int shape_idx}, ${3:Transform transform})$0

# trigger conflict with other class(es)
snippet area_set_space_PhysicsServer "area_set_space ( RID area, RID space ), returns void"
	area_set_space(${1:RID area}, ${2:RID space})$0

# trigger conflict with other class(es)
snippet area_set_space_override_mode_PhysicsServer "area_set_space_override_mode ( RID area, int mode ), returns void"
	area_set_space_override_mode(${1:RID area}, ${2:int mode})$0

# trigger conflict with other class(es)
snippet area_set_transform_PhysicsServer "area_set_transform ( RID area, Transform transform ), returns void"
	area_set_transform(${1:RID area}, ${2:Transform transform})$0

# trigger conflict with other class(es)
snippet body_add_collision_exception_PhysicsServer "body_add_collision_exception ( RID body, RID excepted_body ), returns void"
	body_add_collision_exception(${1:RID body}, ${2:RID excepted_body})$0

# trigger conflict with other class(es)
snippet body_add_shape_PhysicsServer "body_add_shape ( RID body, RID shape, Transform transform=Transform() ), returns void"
	body_add_shape(${1:RID body}, ${2:RID shape}, ${3:Transform transform=Transform()})$0

# trigger conflict with other class(es)
snippet body_apply_impulse_PhysicsServer "body_apply_impulse ( RID body, Vector3 pos, Vector3 impulse ), returns void"
	body_apply_impulse(${1:RID body}, ${2:Vector3 pos}, ${3:Vector3 impulse})$0

# trigger conflict with other class(es)
snippet body_attach_object_instance_ID_PhysicsServer "body_attach_object_instance_ID ( RID body, int id ), returns void"
	body_attach_object_instance_ID(${1:RID body}, ${2:int id})$0

# trigger conflict with other class(es)
snippet body_clear_shapes_PhysicsServer "body_clear_shapes ( RID body ), returns void"
	body_clear_shapes(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_create_PhysicsServer "body_create ( int mode=2, bool init_sleeping=false ), returns RID"
	body_create(${1:int mode=2}, ${2:bool init_sleeping=false})$0

snippet body_get_axis_lock "body_get_axis_lock ( RID body ) const, returns int"
	body_get_axis_lock(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_get_collision_mask_PhysicsServer "body_get_collision_mask ( RID body, int arg1 ) const, returns int"
	body_get_collision_mask(${1:RID body}, ${2:int arg1})$0

# trigger conflict with other class(es)
snippet body_get_layer_mask_PhysicsServer "body_get_layer_mask ( RID body, int arg1 ) const, returns int"
	body_get_layer_mask(${1:RID body}, ${2:int arg1})$0

# trigger conflict with other class(es)
snippet body_get_max_contacts_reported_PhysicsServer "body_get_max_contacts_reported ( RID body ) const, returns int"
	body_get_max_contacts_reported(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_get_mode_PhysicsServer "body_get_mode ( RID body ) const, returns int"
	body_get_mode(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_get_object_instance_ID_PhysicsServer "body_get_object_instance_ID ( RID body ) const, returns int"
	body_get_object_instance_ID(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_get_param_PhysicsServer "body_get_param ( RID body, int param ) const, returns float"
	body_get_param(${1:RID body}, ${2:int param})$0

# trigger conflict with other class(es)
snippet body_get_shape_PhysicsServer "body_get_shape ( RID body, int shape_idx ) const, returns RID"
	body_get_shape(${1:RID body}, ${2:int shape_idx})$0

# trigger conflict with other class(es)
snippet body_get_shape_count_PhysicsServer "body_get_shape_count ( RID body ) const, returns int"
	body_get_shape_count(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_get_shape_transform_PhysicsServer "body_get_shape_transform ( RID body, int shape_idx ) const, returns Transform"
	body_get_shape_transform(${1:RID body}, ${2:int shape_idx})$0

# trigger conflict with other class(es)
snippet body_get_space_PhysicsServer "body_get_space ( RID body ) const, returns RID"
	body_get_space(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_get_state_PhysicsServer "body_get_state ( RID body, int state ) const, returns void"
	body_get_state(${1:RID body}, ${2:int state})$0

snippet body_is_continuous_collision_detection_enabled "body_is_continuous_collision_detection_enabled ( RID body ) const, returns bool"
	body_is_continuous_collision_detection_enabled(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_is_omitting_force_integration_PhysicsServer "body_is_omitting_force_integration ( RID body ) const, returns bool"
	body_is_omitting_force_integration(${1:RID body})$0

snippet body_is_ray_pickable "body_is_ray_pickable ( RID body ) const, returns bool"
	body_is_ray_pickable(${1:RID body})$0

# trigger conflict with other class(es)
snippet body_remove_collision_exception_PhysicsServer "body_remove_collision_exception ( RID body, RID excepted_body ), returns void"
	body_remove_collision_exception(${1:RID body}, ${2:RID excepted_body})$0

# trigger conflict with other class(es)
snippet body_remove_shape_PhysicsServer "body_remove_shape ( RID body, int shape_idx ), returns void"
	body_remove_shape(${1:RID body}, ${2:int shape_idx})$0

snippet body_set_axis_lock "body_set_axis_lock ( RID body, int axis ), returns void"
	body_set_axis_lock(${1:RID body}, ${2:int axis})$0

# trigger conflict with other class(es)
snippet body_set_axis_velocity_PhysicsServer "body_set_axis_velocity ( RID body, Vector3 axis_velocity ), returns void"
	body_set_axis_velocity(${1:RID body}, ${2:Vector3 axis_velocity})$0

# trigger conflict with other class(es)
snippet body_set_collision_mask_PhysicsServer "body_set_collision_mask ( RID body, int mask ), returns void"
	body_set_collision_mask(${1:RID body}, ${2:int mask})$0

snippet body_set_enable_continuous_collision_detection "body_set_enable_continuous_collision_detection ( RID body, bool enable ), returns void"
	body_set_enable_continuous_collision_detection(${1:RID body}, ${2:bool enable})$0

# trigger conflict with other class(es)
snippet body_set_force_integration_callback_PhysicsServer "body_set_force_integration_callback ( RID body, Object receiver, String method, Variant userdata=NULL ), returns void"
	body_set_force_integration_callback(${1:RID body}, ${2:Object receiver}, ${3:String method}, ${4:Variant userdata=NULL})$0

# trigger conflict with other class(es)
snippet body_set_layer_mask_PhysicsServer "body_set_layer_mask ( RID body, int mask ), returns void"
	body_set_layer_mask(${1:RID body}, ${2:int mask})$0

# trigger conflict with other class(es)
snippet body_set_max_contacts_reported_PhysicsServer "body_set_max_contacts_reported ( RID body, int amount ), returns void"
	body_set_max_contacts_reported(${1:RID body}, ${2:int amount})$0

# trigger conflict with other class(es)
snippet body_set_mode_PhysicsServer "body_set_mode ( RID body, int mode ), returns void"
	body_set_mode(${1:RID body}, ${2:int mode})$0

# trigger conflict with other class(es)
snippet body_set_omit_force_integration_PhysicsServer "body_set_omit_force_integration ( RID body, bool enable ), returns void"
	body_set_omit_force_integration(${1:RID body}, ${2:bool enable})$0

# trigger conflict with other class(es)
snippet body_set_param_PhysicsServer "body_set_param ( RID body, int param, float value ), returns void"
	body_set_param(${1:RID body}, ${2:int param}, ${3:float value})$0

snippet body_set_ray_pickable "body_set_ray_pickable ( RID body, bool enable ), returns void"
	body_set_ray_pickable(${1:RID body}, ${2:bool enable})$0

# trigger conflict with other class(es)
snippet body_set_shape_PhysicsServer "body_set_shape ( RID body, int shape_idx, RID shape ), returns void"
	body_set_shape(${1:RID body}, ${2:int shape_idx}, ${3:RID shape})$0

# trigger conflict with other class(es)
snippet body_set_shape_transform_PhysicsServer "body_set_shape_transform ( RID body, int shape_idx, Transform transform ), returns void"
	body_set_shape_transform(${1:RID body}, ${2:int shape_idx}, ${3:Transform transform})$0

# trigger conflict with other class(es)
snippet body_set_space_PhysicsServer "body_set_space ( RID body, RID space ), returns void"
	body_set_space(${1:RID body}, ${2:RID space})$0

# trigger conflict with other class(es)
snippet body_set_state_PhysicsServer "body_set_state ( RID body, int state, Variant value ), returns void"
	body_set_state(${1:RID body}, ${2:int state}, ${3:Variant value})$0

snippet cone_twist_joint_get_param "cone_twist_joint_get_param ( RID joint, int param ) const, returns float"
	cone_twist_joint_get_param(${1:RID joint}, ${2:int param})$0

snippet cone_twist_joint_set_param "cone_twist_joint_set_param ( RID joint, int param, float value ), returns void"
	cone_twist_joint_set_param(${1:RID joint}, ${2:int param}, ${3:float value})$0

# trigger conflict with other class(es)
snippet free_rid_PhysicsServer "free_rid ( RID rid ), returns void"
	free_rid(${1:RID rid})$0

snippet generic_6dof_joint_get_flag "generic_6dof_joint_get_flag ( RID joint, int axis, int flag ), returns bool"
	generic_6dof_joint_get_flag(${1:RID joint}, ${2:int axis}, ${3:int flag})$0

snippet generic_6dof_joint_get_param "generic_6dof_joint_get_param ( RID joint, int axis, int param ), returns float"
	generic_6dof_joint_get_param(${1:RID joint}, ${2:int axis}, ${3:int param})$0

snippet generic_6dof_joint_set_flag "generic_6dof_joint_set_flag ( RID joint, int axis, int flag, bool enable ), returns void"
	generic_6dof_joint_set_flag(${1:RID joint}, ${2:int axis}, ${3:int flag}, ${4:bool enable})$0

snippet generic_6dof_joint_set_param "generic_6dof_joint_set_param ( RID joint, int axis, int param, float value ), returns void"
	generic_6dof_joint_set_param(${1:RID joint}, ${2:int axis}, ${3:int param}, ${4:float value})$0

# trigger conflict with other class(es)
snippet get_process_info_PhysicsServer "get_process_info ( int process_info ), returns int"
	get_process_info(${1:int process_info})$0

snippet hinge_joint_get_flag "hinge_joint_get_flag ( RID joint, int flag ) const, returns bool"
	hinge_joint_get_flag(${1:RID joint}, ${2:int flag})$0

snippet hinge_joint_get_param "hinge_joint_get_param ( RID joint, int param ) const, returns float"
	hinge_joint_get_param(${1:RID joint}, ${2:int param})$0

snippet hinge_joint_set_flag "hinge_joint_set_flag ( RID joint, int flag, bool enabled ), returns void"
	hinge_joint_set_flag(${1:RID joint}, ${2:int flag}, ${3:bool enabled})$0

snippet hinge_joint_set_param "hinge_joint_set_param ( RID joint, int param, float value ), returns void"
	hinge_joint_set_param(${1:RID joint}, ${2:int param}, ${3:float value})$0

snippet joint_create_cone_twist "joint_create_cone_twist ( RID body_A, Transform local_ref_A, RID body_B, Transform local_ref_B ), returns RID"
	joint_create_cone_twist(${1:RID body_A}, ${2:Transform local_ref_A}, ${3:RID body_B}, ${4:Transform local_ref_B})$0

snippet joint_create_generic_6dof "joint_create_generic_6dof ( RID body_A, Transform local_ref_A, RID body_B, Transform local_ref_B ), returns RID"
	joint_create_generic_6dof(${1:RID body_A}, ${2:Transform local_ref_A}, ${3:RID body_B}, ${4:Transform local_ref_B})$0

snippet joint_create_hinge "joint_create_hinge ( RID body_A, Transform hinge_A, RID body_B, Transform hinge_B ), returns RID"
	joint_create_hinge(${1:RID body_A}, ${2:Transform hinge_A}, ${3:RID body_B}, ${4:Transform hinge_B})$0

snippet joint_create_pin "joint_create_pin ( RID body_A, Vector3 local_A, RID body_B, Vector3 local_B ), returns RID"
	joint_create_pin(${1:RID body_A}, ${2:Vector3 local_A}, ${3:RID body_B}, ${4:Vector3 local_B})$0

snippet joint_create_slider "joint_create_slider ( RID body_A, Transform local_ref_A, RID body_B, Transform local_ref_B ), returns RID"
	joint_create_slider(${1:RID body_A}, ${2:Transform local_ref_A}, ${3:RID body_B}, ${4:Transform local_ref_B})$0

snippet joint_get_solver_priority "joint_get_solver_priority ( RID joint ) const, returns int"
	joint_get_solver_priority(${1:RID joint})$0

# trigger conflict with other class(es)
snippet joint_get_type_PhysicsServer "joint_get_type ( RID joint ) const, returns int"
	joint_get_type(${1:RID joint})$0

snippet joint_set_solver_priority "joint_set_solver_priority ( RID joint, int priority ), returns void"
	joint_set_solver_priority(${1:RID joint}, ${2:int priority})$0

snippet pin_joint_get_local_A "pin_joint_get_local_A ( RID joint ) const, returns Vector3"
	pin_joint_get_local_A(${1:RID joint})$0

snippet pin_joint_get_local_B "pin_joint_get_local_B ( RID joint ) const, returns Vector3"
	pin_joint_get_local_B(${1:RID joint})$0

snippet pin_joint_get_param "pin_joint_get_param ( RID joint, int param ) const, returns float"
	pin_joint_get_param(${1:RID joint}, ${2:int param})$0

snippet pin_joint_set_local_A "pin_joint_set_local_A ( RID joint, Vector3 local_A ), returns void"
	pin_joint_set_local_A(${1:RID joint}, ${2:Vector3 local_A})$0

snippet pin_joint_set_local_B "pin_joint_set_local_B ( RID joint, Vector3 local_B ), returns void"
	pin_joint_set_local_B(${1:RID joint}, ${2:Vector3 local_B})$0

snippet pin_joint_set_param "pin_joint_set_param ( RID joint, int param, float value ), returns void"
	pin_joint_set_param(${1:RID joint}, ${2:int param}, ${3:float value})$0

# trigger conflict with other class(es)
snippet set_active_PhysicsServer "set_active ( bool active ), returns void"
	set_active(${1:bool active})$0

# trigger conflict with other class(es)
snippet shape_create_PhysicsServer "shape_create ( int type ), returns RID"
	shape_create(${1:int type})$0

# trigger conflict with other class(es)
snippet shape_get_data_PhysicsServer "shape_get_data ( RID shape ) const, returns void"
	shape_get_data(${1:RID shape})$0

# trigger conflict with other class(es)
snippet shape_get_type_PhysicsServer "shape_get_type ( RID shape ) const, returns int"
	shape_get_type(${1:RID shape})$0

# trigger conflict with other class(es)
snippet shape_set_data_PhysicsServer "shape_set_data ( RID shape, Variant data ), returns void"
	shape_set_data(${1:RID shape}, ${2:Variant data})$0

snippet slider_joint_get_param "slider_joint_get_param ( RID joint, int param ) const, returns float"
	slider_joint_get_param(${1:RID joint}, ${2:int param})$0

snippet slider_joint_set_param "slider_joint_set_param ( RID joint, int param, float value ), returns void"
	slider_joint_set_param(${1:RID joint}, ${2:int param}, ${3:float value})$0

# trigger conflict with other class(es)
snippet space_create_PhysicsServer "space_create ( ), returns RID"
	space_create($1)$0

# trigger conflict with other class(es)
snippet space_get_direct_state_PhysicsServer "space_get_direct_state ( RID space ), returns PhysicsDirectSpaceState"
	space_get_direct_state(${1:RID space})$0

# trigger conflict with other class(es)
snippet space_get_param_PhysicsServer "space_get_param ( RID space, int param ) const, returns float"
	space_get_param(${1:RID space}, ${2:int param})$0

# trigger conflict with other class(es)
snippet space_is_active_PhysicsServer "space_is_active ( RID space ) const, returns bool"
	space_is_active(${1:RID space})$0

# trigger conflict with other class(es)
snippet space_set_active_PhysicsServer "space_set_active ( RID space, bool active ), returns void"
	space_set_active(${1:RID space}, ${2:bool active})$0

# trigger conflict with other class(es)
snippet space_set_param_PhysicsServer "space_set_param ( RID space, int param, float value ), returns void"
	space_set_param(${1:RID space}, ${2:int param}, ${3:float value})$0


# Class: PhysicsShapeQueryParameters
# trigger conflict with other class(es)
snippet get_exclude_PhysicsShapeQueryParameters "get_exclude ( ) const, returns Array"
	get_exclude($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_PhysicsShapeQueryParameters "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

# trigger conflict with other class(es)
snippet get_margin_PhysicsShapeQueryParameters "get_margin ( ) const, returns float"
	get_margin($1)$0

# trigger conflict with other class(es)
snippet get_object_type_mask_PhysicsShapeQueryParameters "get_object_type_mask ( ) const, returns int"
	get_object_type_mask($1)$0

# trigger conflict with other class(es)
snippet get_shape_rid_PhysicsShapeQueryParameters "get_shape_rid ( ) const, returns RID"
	get_shape_rid($1)$0

# trigger conflict with other class(es)
snippet get_transform_PhysicsShapeQueryParameters "get_transform ( ) const, returns Transform"
	get_transform($1)$0

# trigger conflict with other class(es)
snippet set_exclude_PhysicsShapeQueryParameters "set_exclude ( Array exclude ), returns void"
	set_exclude(${1:Array exclude})$0

# trigger conflict with other class(es)
snippet set_layer_mask_PhysicsShapeQueryParameters "set_layer_mask ( int layer_mask ), returns void"
	set_layer_mask(${1:int layer_mask})$0

# trigger conflict with other class(es)
snippet set_margin_PhysicsShapeQueryParameters "set_margin ( float margin ), returns void"
	set_margin(${1:float margin})$0

# trigger conflict with other class(es)
snippet set_object_type_mask_PhysicsShapeQueryParameters "set_object_type_mask ( int object_type_mask ), returns void"
	set_object_type_mask(${1:int object_type_mask})$0

# trigger conflict with other class(es)
snippet set_shape_PhysicsShapeQueryParameters "set_shape ( Shape shape ), returns void"
	set_shape(${1:Shape shape})$0

# trigger conflict with other class(es)
snippet set_shape_rid_PhysicsShapeQueryParameters "set_shape_rid ( RID shape ), returns void"
	set_shape_rid(${1:RID shape})$0

# trigger conflict with other class(es)
snippet set_transform_PhysicsShapeQueryParameters "set_transform ( Transform transform ), returns void"
	set_transform(${1:Transform transform})$0


# Class: PhysicsShapeQueryResult
# trigger conflict with other class(es)
snippet get_result_count_PhysicsShapeQueryResult "get_result_count ( ) const, returns int"
	get_result_count($1)$0

# trigger conflict with other class(es)
snippet get_result_object_PhysicsShapeQueryResult "get_result_object ( int idx ) const, returns Object"
	get_result_object(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_result_object_id_PhysicsShapeQueryResult "get_result_object_id ( int idx ) const, returns int"
	get_result_object_id(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_result_object_shape_PhysicsShapeQueryResult "get_result_object_shape ( int idx ) const, returns int"
	get_result_object_shape(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_result_rid_PhysicsShapeQueryResult "get_result_rid ( int idx ) const, returns RID"
	get_result_rid(${1:int idx})$0


# Class: PinJoint
# trigger conflict with other class(es)
snippet get_param_PinJoint "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

# trigger conflict with other class(es)
snippet set_param_PinJoint "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0


# Class: PinJoint2D
snippet get_softness "get_softness ( ) const, returns float"
	get_softness($1)$0

snippet set_softness "set_softness ( float softness ), returns void"
	set_softness(${1:float softness})$0


# Class: Plane
# not-unique trigger detected in this class: Plane; snippet commented
#snippet Plane "Plane ( float a, float b, float c, float d ), returns Plane"
#	Plane(float a, float b, float c, float d)$0

# not-unique trigger detected in this class: Plane; snippet commented
#snippet Plane "Plane ( Vector3 v1, Vector3 v2, Vector3 v3 ), returns Plane"
#	Plane(Vector3 v1, Vector3 v2, Vector3 v3)$0

snippet Plane "Plane ( Vector3 normal, float d ), returns Plane"
	Plane(${1:Vector3 normal}, ${2:float d})$0

snippet center "center ( ), returns Vector3"
	center($1)$0

snippet distance_to "distance_to ( Vector3 point ), returns float"
	distance_to(${1:Vector3 point})$0

snippet get_any_point "get_any_point ( ), returns Vector3"
	get_any_point($1)$0

# trigger conflict with other class(es)
snippet has_point_Plane "has_point ( Vector3 point, float epsilon=0.00001 ), returns bool"
	has_point(${1:Vector3 point}, ${2:float epsilon=0.00001})$0

snippet intersect_3 "intersect_3 ( Plane b, Plane c ), returns Vector3"
	intersect_3(${1:Plane b}, ${2:Plane c})$0

snippet intersects_ray "intersects_ray ( Vector3 from, Vector3 dir ), returns Vector3"
	intersects_ray(${1:Vector3 from}, ${2:Vector3 dir})$0

# trigger conflict with other class(es)
snippet intersects_segment_Plane "intersects_segment ( Vector3 begin, Vector3 end ), returns Vector3"
	intersects_segment(${1:Vector3 begin}, ${2:Vector3 end})$0

snippet is_point_over "is_point_over ( Vector3 point ), returns bool"
	is_point_over(${1:Vector3 point})$0

snippet normalized "normalized ( ), returns Plane"
	normalized($1)$0

snippet project "project ( Vector3 point ), returns Vector3"
	project(${1:Vector3 point})$0


# Class: PlaneShape
snippet get_plane "get_plane ( ) const, returns Plane"
	get_plane($1)$0

snippet set_plane "set_plane ( Plane plane ), returns void"
	set_plane(${1:Plane plane})$0


# Class: Polygon2D
# trigger conflict with other class(es)
snippet get_color_Polygon2D "get_color ( ) const, returns Color"
	get_color($1)$0

snippet get_invert "get_invert ( ) const, returns bool"
	get_invert($1)$0

snippet get_invert_border "get_invert_border ( ) const, returns float"
	get_invert_border($1)$0

# trigger conflict with other class(es)
snippet get_offset_Polygon2D "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

# trigger conflict with other class(es)
snippet get_polygon_Polygon2D "get_polygon ( ) const, returns Vector2Array"
	get_polygon($1)$0

# trigger conflict with other class(es)
snippet get_texture_Polygon2D "get_texture ( ) const, returns Object"
	get_texture($1)$0

# trigger conflict with other class(es)
snippet get_texture_offset_Polygon2D "get_texture_offset ( ) const, returns Vector2"
	get_texture_offset($1)$0

snippet get_texture_rotation "get_texture_rotation ( ) const, returns float"
	get_texture_rotation($1)$0

# trigger conflict with other class(es)
snippet get_texture_scale_Polygon2D "get_texture_scale ( ) const, returns Vector2"
	get_texture_scale($1)$0

snippet get_uv "get_uv ( ) const, returns Vector2Array"
	get_uv($1)$0

snippet get_vertex_colors "get_vertex_colors ( ) const, returns ColorArray"
	get_vertex_colors($1)$0

# trigger conflict with other class(es)
snippet set_color_Polygon2D "set_color ( Color color ), returns void"
	set_color(${1:Color color})$0

snippet set_invert "set_invert ( bool invert ), returns void"
	set_invert(${1:bool invert})$0

snippet set_invert_border "set_invert_border ( float invert_border ), returns void"
	set_invert_border(${1:float invert_border})$0

# trigger conflict with other class(es)
snippet set_offset_Polygon2D "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

# trigger conflict with other class(es)
snippet set_polygon_Polygon2D "set_polygon ( Vector2Array polygon ), returns void"
	set_polygon(${1:Vector2Array polygon})$0

# trigger conflict with other class(es)
snippet set_texture_Polygon2D "set_texture ( Object texture ), returns void"
	set_texture(${1:Object texture})$0

# trigger conflict with other class(es)
snippet set_texture_offset_Polygon2D "set_texture_offset ( Vector2 texture_offset ), returns void"
	set_texture_offset(${1:Vector2 texture_offset})$0

snippet set_texture_rotation "set_texture_rotation ( float texture_rotation ), returns void"
	set_texture_rotation(${1:float texture_rotation})$0

# trigger conflict with other class(es)
snippet set_texture_scale_Polygon2D "set_texture_scale ( Vector2 texture_scale ), returns void"
	set_texture_scale(${1:Vector2 texture_scale})$0

# trigger conflict with other class(es)
snippet set_uv_Polygon2D "set_uv ( Vector2Array uv ), returns void"
	set_uv(${1:Vector2Array uv})$0

snippet set_vertex_colors "set_vertex_colors ( ColorArray vertex_colors ), returns void"
	set_vertex_colors(${1:ColorArray vertex_colors})$0


# Class: PolygonPathFinder
snippet find_path "find_path ( Vector2 from, Vector2 to ), returns Vector2Array"
	find_path(${1:Vector2 from}, ${2:Vector2 to})$0

snippet get_bounds "get_bounds ( ) const, returns Rect2"
	get_bounds($1)$0

# trigger conflict with other class(es)
snippet get_closest_point_PolygonPathFinder "get_closest_point ( Vector2 point ) const, returns Vector2"
	get_closest_point(${1:Vector2 point})$0

snippet get_intersections "get_intersections ( Vector2 from, Vector2 to ) const, returns Vector2Array"
	get_intersections(${1:Vector2 from}, ${2:Vector2 to})$0

snippet get_point_penalty "get_point_penalty ( int idx ) const, returns float"
	get_point_penalty(${1:int idx})$0

snippet is_point_inside "is_point_inside ( Vector2 point ) const, returns bool"
	is_point_inside(${1:Vector2 point})$0

snippet set_point_penalty "set_point_penalty ( int idx, float penalty ), returns void"
	set_point_penalty(${1:int idx}, ${2:float penalty})$0

snippet setup "setup ( Vector2Array points, IntArray connections ), returns void"
	setup(${1:Vector2Array points}, ${2:IntArray connections})$0


# Class: Popup
snippet is_exclusive "is_exclusive ( ) const, returns bool"
	is_exclusive($1)$0

snippet popup "popup ( ), returns void"
	popup($1)$0

snippet popup_centered "popup_centered ( Vector2 size=Vector2(0, 0) ), returns void"
	popup_centered(${1:Vector2 size=Vector2(0}, ${2:0)})$0

snippet popup_centered_minsize "popup_centered_minsize ( Vector2 minsize=Vector2(0, 0) ), returns void"
	popup_centered_minsize(${1:Vector2 minsize=Vector2(0}, ${2:0)})$0

snippet popup_centered_ratio "popup_centered_ratio ( float ratio=0.75 ), returns void"
	popup_centered_ratio(${1:float ratio=0.75})$0

snippet set_exclusive "set_exclusive ( bool enable ), returns void"
	set_exclusive(${1:bool enable})$0


# Class: PopupMenu
snippet add_check_item "add_check_item ( String label, int id=-1, int accel=0 ), returns void"
	add_check_item(${1:String label}, ${2:int id=-1}, ${3:int accel=0})$0

snippet add_check_shortcut "add_check_shortcut ( ShortCut shortcut, int id=-1 ), returns void"
	add_check_shortcut(${1:ShortCut shortcut}, ${2:int id=-1})$0

snippet add_icon_check_item "add_icon_check_item ( Object texture, String label, int id=-1, int accel=0 ), returns void"
	add_icon_check_item(${1:Object texture}, ${2:String label}, ${3:int id=-1}, ${4:int accel=0})$0

snippet add_icon_check_shortcut "add_icon_check_shortcut ( Object texture, ShortCut shortcut, int id=-1 ), returns void"
	add_icon_check_shortcut(${1:Object texture}, ${2:ShortCut shortcut}, ${3:int id=-1})$0

# trigger conflict with other class(es)
snippet add_icon_item_PopupMenu "add_icon_item ( Object texture, String label, int id=-1, int accel=0 ), returns void"
	add_icon_item(${1:Object texture}, ${2:String label}, ${3:int id=-1}, ${4:int accel=0})$0

snippet add_icon_shortcut "add_icon_shortcut ( Object texture, ShortCut shortcut, int id=-1 ), returns void"
	add_icon_shortcut(${1:Object texture}, ${2:ShortCut shortcut}, ${3:int id=-1})$0

# trigger conflict with other class(es)
snippet add_item_PopupMenu "add_item ( String label, int id=-1, int accel=0 ), returns void"
	add_item(${1:String label}, ${2:int id=-1}, ${3:int accel=0})$0

# trigger conflict with other class(es)
snippet add_separator_PopupMenu "add_separator ( ), returns void"
	add_separator($1)$0

snippet add_shortcut "add_shortcut ( ShortCut shortcut, int id=-1 ), returns void"
	add_shortcut(${1:ShortCut shortcut}, ${2:int id=-1})$0

snippet add_submenu_item "add_submenu_item ( String label, String submenu, int id=-1 ), returns void"
	add_submenu_item(${1:String label}, ${2:String submenu}, ${3:int id=-1})$0

# trigger conflict with other class(es)
snippet clear_PopupMenu "clear ( ), returns void"
	clear($1)$0

# trigger conflict with other class(es)
snippet get_item_ID_PopupMenu "get_item_ID ( int idx ) const, returns int"
	get_item_ID(${1:int idx})$0

snippet get_item_accelerator "get_item_accelerator ( int idx ) const, returns int"
	get_item_accelerator(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_item_count_PopupMenu "get_item_count ( ) const, returns int"
	get_item_count($1)$0

# trigger conflict with other class(es)
snippet get_item_icon_PopupMenu "get_item_icon ( int idx ) const, returns Object"
	get_item_icon(${1:int idx})$0

snippet get_item_index "get_item_index ( int id ) const, returns int"
	get_item_index(${1:int id})$0

# trigger conflict with other class(es)
snippet get_item_metadata_PopupMenu "get_item_metadata ( int idx ) const, returns void"
	get_item_metadata(${1:int idx})$0

snippet get_item_shortcut "get_item_shortcut ( int idx ) const, returns ShortCut"
	get_item_shortcut(${1:int idx})$0

snippet get_item_submenu "get_item_submenu ( int idx ) const, returns String"
	get_item_submenu(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_item_text_PopupMenu "get_item_text ( int idx ) const, returns String"
	get_item_text(${1:int idx})$0

snippet is_item_checkable "is_item_checkable ( int idx ) const, returns bool"
	is_item_checkable(${1:int idx})$0

snippet is_item_checked "is_item_checked ( int idx ) const, returns bool"
	is_item_checked(${1:int idx})$0

# trigger conflict with other class(es)
snippet is_item_disabled_PopupMenu "is_item_disabled ( int idx ) const, returns bool"
	is_item_disabled(${1:int idx})$0

snippet is_item_separator "is_item_separator ( int idx ) const, returns bool"
	is_item_separator(${1:int idx})$0

# trigger conflict with other class(es)
snippet remove_item_PopupMenu "remove_item ( int idx ), returns void"
	remove_item(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_item_ID_PopupMenu "set_item_ID ( int idx, int id ), returns void"
	set_item_ID(${1:int idx}, ${2:int id})$0

snippet set_item_accelerator "set_item_accelerator ( int idx, int accel ), returns void"
	set_item_accelerator(${1:int idx}, ${2:int accel})$0

snippet set_item_as_checkable "set_item_as_checkable ( int idx, bool enable ), returns void"
	set_item_as_checkable(${1:int idx}, ${2:bool enable})$0

snippet set_item_as_separator "set_item_as_separator ( int idx, bool enable ), returns void"
	set_item_as_separator(${1:int idx}, ${2:bool enable})$0

snippet set_item_checked "set_item_checked ( int idx, bool checked ), returns void"
	set_item_checked(${1:int idx}, ${2:bool checked})$0

# trigger conflict with other class(es)
snippet set_item_disabled_PopupMenu "set_item_disabled ( int idx, bool disabled ), returns void"
	set_item_disabled(${1:int idx}, ${2:bool disabled})$0

# trigger conflict with other class(es)
snippet set_item_icon_PopupMenu "set_item_icon ( int idx, Object icon ), returns void"
	set_item_icon(${1:int idx}, ${2:Object icon})$0

# trigger conflict with other class(es)
snippet set_item_metadata_PopupMenu "set_item_metadata ( int idx, Variant metadata ), returns void"
	set_item_metadata(${1:int idx}, ${2:Variant metadata})$0

snippet set_item_shortcut "set_item_shortcut ( int idx, ShortCut shortcut ), returns void"
	set_item_shortcut(${1:int idx}, ${2:ShortCut shortcut})$0

snippet set_item_submenu "set_item_submenu ( int idx, String submenu ), returns void"
	set_item_submenu(${1:int idx}, ${2:String submenu})$0

# trigger conflict with other class(es)
snippet set_item_text_PopupMenu "set_item_text ( int idx, String text ), returns void"
	set_item_text(${1:int idx}, ${2:String text})$0


# Class: Portal
snippet get_connect_range "get_connect_range ( ) const, returns float"
	get_connect_range($1)$0

snippet get_disable_distance "get_disable_distance ( ) const, returns float"
	get_disable_distance($1)$0

snippet get_disabled_color "get_disabled_color ( ) const, returns Color"
	get_disabled_color($1)$0

# trigger conflict with other class(es)
snippet get_shape_Portal "get_shape ( ) const, returns Vector2Array"
	get_shape($1)$0

# trigger conflict with other class(es)
snippet is_enabled_Portal "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

snippet set_connect_range "set_connect_range ( float range ), returns void"
	set_connect_range(${1:float range})$0

snippet set_disable_distance "set_disable_distance ( float distance ), returns void"
	set_disable_distance(${1:float distance})$0

snippet set_disabled_color "set_disabled_color ( Color color ), returns void"
	set_disabled_color(${1:Color color})$0

# trigger conflict with other class(es)
snippet set_enabled_Portal "set_enabled ( bool enable ), returns void"
	set_enabled(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_shape_Portal "set_shape ( Vector2Array points ), returns void"
	set_shape(${1:Vector2Array points})$0


# Class: ProgressBar
snippet is_percent_visible "is_percent_visible ( ) const, returns bool"
	is_percent_visible($1)$0

# trigger conflict with other class(es)
snippet set_percent_visible_ProgressBar "set_percent_visible ( bool visible ), returns void"
	set_percent_visible(${1:bool visible})$0


# Class: ProximityGroup
snippet broadcast "broadcast ( String name, Variant parameters ), returns void"
	broadcast(${1:String name}, ${2:Variant parameters})$0

snippet get_grid_radius "get_grid_radius ( ) const, returns Vector3"
	get_grid_radius($1)$0

snippet set_dispatch_mode "set_dispatch_mode ( int mode ), returns void"
	set_dispatch_mode(${1:int mode})$0

snippet set_grid_radius "set_grid_radius ( Vector3 radius ), returns void"
	set_grid_radius(${1:Vector3 radius})$0

snippet set_group_name "set_group_name ( String name ), returns void"
	set_group_name(${1:String name})$0


# Class: Quad
snippet get_axis "get_axis ( ) const, returns int"
	get_axis($1)$0

# trigger conflict with other class(es)
snippet get_offset_Quad "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

# trigger conflict with other class(es)
snippet get_size_Quad "get_size ( ) const, returns Vector2"
	get_size($1)$0

# trigger conflict with other class(es)
snippet is_centered_Quad "is_centered ( ) const, returns bool"
	is_centered($1)$0

snippet set_axis "set_axis ( int axis ), returns void"
	set_axis(${1:int axis})$0

# trigger conflict with other class(es)
snippet set_centered_Quad "set_centered ( bool centered ), returns void"
	set_centered(${1:bool centered})$0

# trigger conflict with other class(es)
snippet set_offset_Quad "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

# trigger conflict with other class(es)
snippet set_size_Quad "set_size ( Vector2 size ), returns void"
	set_size(${1:Vector2 size})$0


# Class: Quat
# not-unique trigger detected in this class: Quat; snippet commented
#snippet Quat "Quat ( float x, float y, float z, float w ), returns Quat"
#	Quat(float x, float y, float z, float w)$0

# not-unique trigger detected in this class: Quat; snippet commented
#snippet Quat "Quat ( Vector3 axis, float angle ), returns Quat"
#	Quat(Vector3 axis, float angle)$0

snippet Quat "Quat ( Matrix3 from ), returns Quat"
	Quat(${1:Matrix3 from})$0

snippet cubic_slerp "cubic_slerp ( Quat b, Quat pre_a, Quat post_b, float t ), returns Quat"
	cubic_slerp(${1:Quat b}, ${2:Quat pre_a}, ${3:Quat post_b}, ${4:float t})$0

snippet dot "dot ( Quat b ), returns float"
	dot(${1:Quat b})$0

# trigger conflict with other class(es)
snippet inverse_Quat "inverse ( ), returns Quat"
	inverse($1)$0

snippet length "length ( ), returns float"
	length($1)$0

snippet length_squared "length_squared ( ), returns float"
	length_squared($1)$0

# trigger conflict with other class(es)
snippet normalized_Quat "normalized ( ), returns Quat"
	normalized($1)$0

snippet slerp "slerp ( Quat b, float t ), returns Quat"
	slerp(${1:Quat b}, ${2:float t})$0

snippet slerpni "slerpni ( Quat b, float t ), returns Quat"
	slerpni(${1:Quat b}, ${2:float t})$0

# trigger conflict with other class(es)
snippet xform_Quat "xform ( Vector3 v ), returns Vector3"
	xform(${1:Vector3 v})$0


# Class: Range
snippet get_max "get_max ( ) const, returns float"
	get_max($1)$0

snippet get_min "get_min ( ) const, returns float"
	get_min($1)$0

snippet get_page "get_page ( ) const, returns float"
	get_page($1)$0

# trigger conflict with other class(es)
snippet get_step_Range "get_step ( ) const, returns float"
	get_step($1)$0

snippet get_unit_value "get_unit_value ( ) const, returns float"
	get_unit_value($1)$0

snippet get_val "get_val ( ) const, returns float"
	get_val($1)$0

# trigger conflict with other class(es)
snippet get_value_Range "get_value ( ) const, returns float"
	get_value($1)$0

snippet is_rounded_values "is_rounded_values ( ) const, returns bool"
	is_rounded_values($1)$0

snippet is_unit_value_exp "is_unit_value_exp ( ) const, returns bool"
	is_unit_value_exp($1)$0

snippet set_exp_unit_value "set_exp_unit_value ( bool enabled ), returns void"
	set_exp_unit_value(${1:bool enabled})$0

snippet set_max "set_max ( float maximum ), returns void"
	set_max(${1:float maximum})$0

snippet set_min "set_min ( float minimum ), returns void"
	set_min(${1:float minimum})$0

snippet set_page "set_page ( float pagesize ), returns void"
	set_page(${1:float pagesize})$0

snippet set_rounded_values "set_rounded_values ( bool enabled ), returns void"
	set_rounded_values(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_step_Range "set_step ( float step ), returns void"
	set_step(${1:float step})$0

snippet set_unit_value "set_unit_value ( float value ), returns void"
	set_unit_value(${1:float value})$0

snippet set_val "set_val ( float value ), returns void"
	set_val(${1:float value})$0

# trigger conflict with other class(es)
snippet set_value_Range "set_value ( float value ), returns void"
	set_value(${1:float value})$0

snippet share "share ( Object with ), returns void"
	share(${1:Object with})$0

snippet unshare "unshare ( ), returns void"
	unshare($1)$0


# Class: RawArray
snippet RawArray "RawArray ( Array from ), returns RawArray"
	RawArray(${1:Array from})$0

# trigger conflict with other class(es)
snippet append_RawArray "append ( int byte ), returns void"
	append(${1:int byte})$0

# trigger conflict with other class(es)
snippet append_array_RawArray "append_array ( RawArray array ), returns void"
	append_array(${1:RawArray array})$0

snippet get_string_from_ascii "get_string_from_ascii ( ), returns String"
	get_string_from_ascii($1)$0

snippet get_string_from_utf8 "get_string_from_utf8 ( ), returns String"
	get_string_from_utf8($1)$0

# trigger conflict with other class(es)
snippet insert_RawArray "insert ( int idx, int byte ), returns int"
	insert(${1:int idx}, ${2:int byte})$0

# trigger conflict with other class(es)
snippet invert_RawArray "invert ( ), returns void"
	invert($1)$0

# trigger conflict with other class(es)
snippet push_back_RawArray "push_back ( int byte ), returns void"
	push_back(${1:int byte})$0

# trigger conflict with other class(es)
snippet remove_RawArray "remove ( int idx ), returns void"
	remove(${1:int idx})$0

# trigger conflict with other class(es)
snippet resize_RawArray "resize ( int idx ), returns void"
	resize(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_RawArray "set ( int idx, int byte ), returns void"
	set(${1:int idx}, ${2:int byte})$0

# trigger conflict with other class(es)
snippet size_RawArray "size ( ), returns int"
	size($1)$0


# Class: RayCast
snippet add_exception "add_exception ( Object node ), returns void"
	add_exception(${1:Object node})$0

snippet add_exception_rid "add_exception_rid ( RID rid ), returns void"
	add_exception_rid(${1:RID rid})$0

snippet clear_exceptions "clear_exceptions ( ), returns void"
	clear_exceptions($1)$0

snippet get_cast_to "get_cast_to ( ) const, returns Vector3"
	get_cast_to($1)$0

# trigger conflict with other class(es)
snippet get_collider_RayCast "get_collider ( ) const, returns Object"
	get_collider($1)$0

# trigger conflict with other class(es)
snippet get_collider_shape_RayCast "get_collider_shape ( ) const, returns int"
	get_collider_shape($1)$0

# trigger conflict with other class(es)
snippet get_collision_normal_RayCast "get_collision_normal ( ) const, returns Vector3"
	get_collision_normal($1)$0

# trigger conflict with other class(es)
snippet get_collision_point_RayCast "get_collision_point ( ) const, returns Vector3"
	get_collision_point($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_RayCast "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

snippet get_type_mask "get_type_mask ( ) const, returns int"
	get_type_mask($1)$0

# trigger conflict with other class(es)
snippet is_colliding_RayCast "is_colliding ( ) const, returns bool"
	is_colliding($1)$0

# trigger conflict with other class(es)
snippet is_enabled_RayCast "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

snippet remove_exception "remove_exception ( Object node ), returns void"
	remove_exception(${1:Object node})$0

snippet remove_exception_rid "remove_exception_rid ( RID rid ), returns void"
	remove_exception_rid(${1:RID rid})$0

snippet set_cast_to "set_cast_to ( Vector3 local_point ), returns void"
	set_cast_to(${1:Vector3 local_point})$0

# trigger conflict with other class(es)
snippet set_enabled_RayCast "set_enabled ( bool enabled ), returns void"
	set_enabled(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_layer_mask_RayCast "set_layer_mask ( int mask ), returns void"
	set_layer_mask(${1:int mask})$0

snippet set_type_mask "set_type_mask ( int mask ), returns void"
	set_type_mask(${1:int mask})$0


# Class: RayCast2D
# trigger conflict with other class(es)
snippet add_exception_RayCast2D "add_exception ( Object node ), returns void"
	add_exception(${1:Object node})$0

# trigger conflict with other class(es)
snippet add_exception_rid_RayCast2D "add_exception_rid ( RID rid ), returns void"
	add_exception_rid(${1:RID rid})$0

# trigger conflict with other class(es)
snippet clear_exceptions_RayCast2D "clear_exceptions ( ), returns void"
	clear_exceptions($1)$0

# trigger conflict with other class(es)
snippet get_cast_to_RayCast2D "get_cast_to ( ) const, returns Vector2"
	get_cast_to($1)$0

# trigger conflict with other class(es)
snippet get_collider_RayCast2D "get_collider ( ) const, returns Object"
	get_collider($1)$0

# trigger conflict with other class(es)
snippet get_collider_shape_RayCast2D "get_collider_shape ( ) const, returns int"
	get_collider_shape($1)$0

# trigger conflict with other class(es)
snippet get_collision_normal_RayCast2D "get_collision_normal ( ) const, returns Vector2"
	get_collision_normal($1)$0

# trigger conflict with other class(es)
snippet get_collision_point_RayCast2D "get_collision_point ( ) const, returns Vector2"
	get_collision_point($1)$0

# trigger conflict with other class(es)
snippet get_layer_mask_RayCast2D "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

# trigger conflict with other class(es)
snippet get_type_mask_RayCast2D "get_type_mask ( ) const, returns int"
	get_type_mask($1)$0

# trigger conflict with other class(es)
snippet is_colliding_RayCast2D "is_colliding ( ) const, returns bool"
	is_colliding($1)$0

# trigger conflict with other class(es)
snippet is_enabled_RayCast2D "is_enabled ( ) const, returns bool"
	is_enabled($1)$0

# trigger conflict with other class(es)
snippet remove_exception_RayCast2D "remove_exception ( Object node ), returns void"
	remove_exception(${1:Object node})$0

# trigger conflict with other class(es)
snippet remove_exception_rid_RayCast2D "remove_exception_rid ( RID rid ), returns void"
	remove_exception_rid(${1:RID rid})$0

# trigger conflict with other class(es)
snippet set_cast_to_RayCast2D "set_cast_to ( Vector2 local_point ), returns void"
	set_cast_to(${1:Vector2 local_point})$0

# trigger conflict with other class(es)
snippet set_enabled_RayCast2D "set_enabled ( bool enabled ), returns void"
	set_enabled(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_layer_mask_RayCast2D "set_layer_mask ( int mask ), returns void"
	set_layer_mask(${1:int mask})$0

# trigger conflict with other class(es)
snippet set_type_mask_RayCast2D "set_type_mask ( int mask ), returns void"
	set_type_mask(${1:int mask})$0


# Class: RayShape
# trigger conflict with other class(es)
snippet get_length_RayShape "get_length ( ) const, returns float"
	get_length($1)$0

# trigger conflict with other class(es)
snippet set_length_RayShape "set_length ( float length ), returns void"
	set_length(${1:float length})$0


# Class: RayShape2D
# trigger conflict with other class(es)
snippet get_length_RayShape2D "get_length ( ) const, returns float"
	get_length($1)$0

# trigger conflict with other class(es)
snippet set_length_RayShape2D "set_length ( float length ), returns void"
	set_length(${1:float length})$0


# Class: RealArray
snippet RealArray "RealArray ( Array from ), returns RealArray"
	RealArray(${1:Array from})$0

# trigger conflict with other class(es)
snippet append_RealArray "append ( float value ), returns void"
	append(${1:float value})$0

# trigger conflict with other class(es)
snippet append_array_RealArray "append_array ( RealArray array ), returns void"
	append_array(${1:RealArray array})$0

# trigger conflict with other class(es)
snippet insert_RealArray "insert ( int idx, float value ), returns int"
	insert(${1:int idx}, ${2:float value})$0

# trigger conflict with other class(es)
snippet invert_RealArray "invert ( ), returns void"
	invert($1)$0

# trigger conflict with other class(es)
snippet push_back_RealArray "push_back ( float value ), returns void"
	push_back(${1:float value})$0

# trigger conflict with other class(es)
snippet remove_RealArray "remove ( int idx ), returns void"
	remove(${1:int idx})$0

# trigger conflict with other class(es)
snippet resize_RealArray "resize ( int idx ), returns void"
	resize(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_RealArray "set ( int idx, float value ), returns void"
	set(${1:int idx}, ${2:float value})$0

# trigger conflict with other class(es)
snippet size_RealArray "size ( ), returns int"
	size($1)$0


# Class: Rect2
# not-unique trigger detected in this class: Rect2; snippet commented
#snippet Rect2 "Rect2 ( Vector2 pos, Vector2 size ), returns Rect2"
#	Rect2(Vector2 pos, Vector2 size)$0

snippet Rect2 "Rect2 ( float x, float y, float width, float height ), returns Rect2"
	Rect2(${1:float x}, ${2:float y}, ${3:float width}, ${4:float height})$0

snippet clip "clip ( Rect2 b ), returns Rect2"
	clip(${1:Rect2 b})$0

# trigger conflict with other class(es)
snippet encloses_Rect2 "encloses ( Rect2 b ), returns bool"
	encloses(${1:Rect2 b})$0

# trigger conflict with other class(es)
snippet expand_Rect2 "expand ( Vector2 to ), returns Rect2"
	expand(${1:Vector2 to})$0

# trigger conflict with other class(es)
snippet get_area_Rect2 "get_area ( ), returns float"
	get_area($1)$0

# trigger conflict with other class(es)
snippet grow_Rect2 "grow ( float by ), returns Rect2"
	grow(${1:float by})$0

# trigger conflict with other class(es)
snippet has_no_area_Rect2 "has_no_area ( ), returns bool"
	has_no_area($1)$0

# trigger conflict with other class(es)
snippet has_point_Rect2 "has_point ( Vector2 point ), returns bool"
	has_point(${1:Vector2 point})$0

# trigger conflict with other class(es)
snippet intersects_Rect2 "intersects ( Rect2 b ), returns bool"
	intersects(${1:Rect2 b})$0

# trigger conflict with other class(es)
snippet merge_Rect2 "merge ( Rect2 b ), returns Rect2"
	merge(${1:Rect2 b})$0


# Class: RectangleShape2D
# trigger conflict with other class(es)
snippet get_extents_RectangleShape2D "get_extents ( ) const, returns Vector2"
	get_extents($1)$0

# trigger conflict with other class(es)
snippet set_extents_RectangleShape2D "set_extents ( Vector2 extents ), returns void"
	set_extents(${1:Vector2 extents})$0


# Class: Reference
snippet init_ref "init_ref ( ), returns bool"
	init_ref($1)$0

snippet reference "reference ( ), returns void"
	reference($1)$0

snippet unreference "unreference ( ), returns bool"
	unreference($1)$0


# Class: RegEx
# trigger conflict with other class(es)
snippet clear_RegEx "clear ( ), returns void"
	clear($1)$0

snippet compile "compile ( String pattern, int capture=9 ), returns int"
	compile(${1:String pattern}, ${2:int capture=9})$0

# trigger conflict with other class(es)
snippet find_RegEx "find ( String text, int start=0, int end=-1 ) const, returns int"
	find(${1:String text}, ${2:int start=0}, ${3:int end=-1})$0

snippet get_capture "get_capture ( int capture ) const, returns String"
	get_capture(${1:int capture})$0

snippet get_capture_count "get_capture_count ( ) const, returns int"
	get_capture_count($1)$0

snippet get_capture_start "get_capture_start ( int capture ) const, returns int"
	get_capture_start(${1:int capture})$0

snippet get_captures "get_captures ( ) const, returns StringArray"
	get_captures($1)$0

# trigger conflict with other class(es)
snippet is_valid_RegEx "is_valid ( ) const, returns bool"
	is_valid($1)$0


# Class: RemoteTransform2D
snippet get_remote_node "get_remote_node ( ) const, returns NodePath"
	get_remote_node($1)$0

snippet set_remote_node "set_remote_node ( NodePath path ), returns void"
	set_remote_node(${1:NodePath path})$0


# Class: Resource
# trigger conflict with other class(es)
snippet duplicate_Resource "duplicate ( bool subresources=false ), returns Object"
	duplicate(${1:bool subresources=false})$0

snippet get_import_metadata "get_import_metadata ( ) const, returns Object"
	get_import_metadata($1)$0

# trigger conflict with other class(es)
snippet get_name_Resource "get_name ( ) const, returns String"
	get_name($1)$0

# trigger conflict with other class(es)
snippet get_path_Resource "get_path ( ) const, returns String"
	get_path($1)$0

# trigger conflict with other class(es)
snippet get_rid_Resource "get_rid ( ) const, returns RID"
	get_rid($1)$0

snippet set_import_metadata "set_import_metadata ( Object metadata ), returns void"
	set_import_metadata(${1:Object metadata})$0

# trigger conflict with other class(es)
snippet set_name_Resource "set_name ( String name ), returns void"
	set_name(${1:String name})$0

snippet set_path "set_path ( String path ), returns void"
	set_path(${1:String path})$0

snippet take_over_path "take_over_path ( String path ), returns void"
	take_over_path(${1:String path})$0


# Class: ResourceImportMetadata
snippet add_source "add_source ( String path, String md5=”” ), returns void"
	add_source(${1:String path}, ${2:String md5=””})$0

snippet get_editor "get_editor ( ) const, returns String"
	get_editor($1)$0

snippet get_option "get_option ( String key ) const, returns void"
	get_option(${1:String key})$0

snippet get_options "get_options ( ) const, returns StringArray"
	get_options($1)$0

snippet get_source_count "get_source_count ( ) const, returns int"
	get_source_count($1)$0

snippet get_source_md5 "get_source_md5 ( int idx ) const, returns String"
	get_source_md5(${1:int idx})$0

snippet get_source_path "get_source_path ( int idx ) const, returns String"
	get_source_path(${1:int idx})$0

snippet remove_source "remove_source ( int idx ), returns void"
	remove_source(${1:int idx})$0

snippet set_editor "set_editor ( String name ), returns void"
	set_editor(${1:String name})$0

snippet set_option "set_option ( String key, Variant value ), returns void"
	set_option(${1:String key}, ${2:Variant value})$0

snippet set_source_md5 "set_source_md5 ( int idx, String md5 ), returns void"
	set_source_md5(${1:int idx}, ${2:String md5})$0


# Class: ResourceInteractiveLoader
snippet get_resource "get_resource ( ), returns Object"
	get_resource($1)$0

snippet get_stage "get_stage ( ) const, returns int"
	get_stage($1)$0

snippet get_stage_count "get_stage_count ( ) const, returns int"
	get_stage_count($1)$0

# trigger conflict with other class(es)
snippet poll_ResourceInteractiveLoader "poll ( ), returns int"
	poll($1)$0

# trigger conflict with other class(es)
snippet wait_ResourceInteractiveLoader "wait ( ), returns int"
	wait($1)$0


# Class: ResourceLoader
snippet get_dependencies "get_dependencies ( String path ), returns StringArray"
	get_dependencies(${1:String path})$0

snippet get_recognized_extensions_for_type "get_recognized_extensions_for_type ( String type ), returns StringArray"
	get_recognized_extensions_for_type(${1:String type})$0

# trigger conflict with other class(es)
snippet has_ResourceLoader "has ( String path ), returns bool"
	has(${1:String path})$0

# trigger conflict with other class(es)
snippet load_ResourceLoader "load ( String path, String type_hint=””, bool p_no_cache=false ), returns Resource"
	load(${1:String path}, ${2:String type_hint=””}, ${3:bool p_no_cache=false})$0

snippet load_import_metadata "load_import_metadata ( String path ), returns ResourceImportMetadata"
	load_import_metadata(${1:String path})$0

snippet load_interactive "load_interactive ( String path, String type_hint=”” ), returns ResourceInteractiveLoader"
	load_interactive(${1:String path}, ${2:String type_hint=””})$0

snippet set_abort_on_missing_resources "set_abort_on_missing_resources ( bool abort ), returns void"
	set_abort_on_missing_resources(${1:bool abort})$0


# Class: ResourcePreloader
snippet add_resource "add_resource ( String name, Object resource ), returns void"
	add_resource(${1:String name}, ${2:Object resource})$0

# trigger conflict with other class(es)
snippet get_resource_ResourcePreloader "get_resource ( String name ) const, returns Object"
	get_resource(${1:String name})$0

snippet get_resource_list "get_resource_list ( ) const, returns StringArray"
	get_resource_list($1)$0

snippet has_resource "has_resource ( String name ) const, returns bool"
	has_resource(${1:String name})$0

snippet remove_resource "remove_resource ( String name ), returns void"
	remove_resource(${1:String name})$0

snippet rename_resource "rename_resource ( String name, String newname ), returns void"
	rename_resource(${1:String name}, ${2:String newname})$0


# Class: ResourceSaver
snippet get_recognized_extensions "get_recognized_extensions ( Object type ), returns StringArray"
	get_recognized_extensions(${1:Object type})$0

# trigger conflict with other class(es)
snippet save_ResourceSaver "save ( String path, Resource resource, int flags=0 ), returns int"
	save(${1:String path}, ${2:Resource resource}, ${3:int flags=0})$0


# Class: RichTextLabel
snippet add_image "add_image ( Texture image ), returns void"
	add_image(${1:Texture image})$0

snippet add_text "add_text ( String text ), returns void"
	add_text(${1:String text})$0

snippet append_bbcode "append_bbcode ( String bbcode ), returns int"
	append_bbcode(${1:String bbcode})$0

# trigger conflict with other class(es)
snippet clear_RichTextLabel "clear ( ), returns void"
	clear($1)$0

snippet get_bbcode "get_bbcode ( ) const, returns String"
	get_bbcode($1)$0

snippet get_tab_size "get_tab_size ( ) const, returns int"
	get_tab_size($1)$0

# trigger conflict with other class(es)
snippet get_text_RichTextLabel "get_text ( ), returns String"
	get_text($1)$0

# trigger conflict with other class(es)
snippet get_total_character_count_RichTextLabel "get_total_character_count ( ) const, returns int"
	get_total_character_count($1)$0

snippet get_v_scroll "get_v_scroll ( ), returns Object"
	get_v_scroll($1)$0

# trigger conflict with other class(es)
snippet get_visible_characters_RichTextLabel "get_visible_characters ( ) const, returns int"
	get_visible_characters($1)$0

snippet is_meta_underlined "is_meta_underlined ( ) const, returns bool"
	is_meta_underlined($1)$0

snippet is_scroll_active "is_scroll_active ( ) const, returns bool"
	is_scroll_active($1)$0

snippet is_scroll_following "is_scroll_following ( ) const, returns bool"
	is_scroll_following($1)$0

snippet is_selection_enabled "is_selection_enabled ( ) const, returns bool"
	is_selection_enabled($1)$0

snippet is_using_bbcode "is_using_bbcode ( ) const, returns bool"
	is_using_bbcode($1)$0

snippet newline "newline ( ), returns void"
	newline($1)$0

snippet parse_bbcode "parse_bbcode ( String bbcode ), returns int"
	parse_bbcode(${1:String bbcode})$0

snippet pop "pop ( ), returns void"
	pop($1)$0

snippet push_align "push_align ( int align ), returns void"
	push_align(${1:int align})$0

snippet push_cell "push_cell ( ), returns void"
	push_cell($1)$0

snippet push_color "push_color ( Color color ), returns void"
	push_color(${1:Color color})$0

snippet push_font "push_font ( Object font ), returns void"
	push_font(${1:Object font})$0

snippet push_indent "push_indent ( int level ), returns void"
	push_indent(${1:int level})$0

snippet push_list "push_list ( int type ), returns void"
	push_list(${1:int type})$0

snippet push_meta "push_meta ( Variant data ), returns void"
	push_meta(${1:Variant data})$0

snippet push_table "push_table ( int columns ), returns void"
	push_table(${1:int columns})$0

snippet push_underline "push_underline ( ), returns void"
	push_underline($1)$0

snippet scroll_to_line "scroll_to_line ( int line ), returns void"
	scroll_to_line(${1:int line})$0

snippet set_bbcode "set_bbcode ( String text ), returns void"
	set_bbcode(${1:String text})$0

snippet set_meta_underline "set_meta_underline ( bool enable ), returns void"
	set_meta_underline(${1:bool enable})$0

snippet set_scroll_active "set_scroll_active ( bool active ), returns void"
	set_scroll_active(${1:bool active})$0

snippet set_scroll_follow "set_scroll_follow ( bool follow ), returns void"
	set_scroll_follow(${1:bool follow})$0

snippet set_selection_enabled "set_selection_enabled ( bool enabled ), returns void"
	set_selection_enabled(${1:bool enabled})$0

snippet set_tab_size "set_tab_size ( int spaces ), returns void"
	set_tab_size(${1:int spaces})$0

snippet set_table_column_expand "set_table_column_expand ( int column, bool expand, int ratio ), returns void"
	set_table_column_expand(${1:int column}, ${2:bool expand}, ${3:int ratio})$0

snippet set_use_bbcode "set_use_bbcode ( bool enable ), returns void"
	set_use_bbcode(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_visible_characters_RichTextLabel "set_visible_characters ( int amount ), returns void"
	set_visible_characters(${1:int amount})$0


# Class: RID
snippet RID "RID ( Object from ), returns RID"
	RID(${1:Object from})$0

snippet get_id "get_id ( ), returns int"
	get_id($1)$0


# Class: RigidBody
snippet _integrate_forces "_integrate_forces ( PhysicsDirectBodyState state ) virtual, returns void"
	_integrate_forces(${1:PhysicsDirectBodyState state})$0

# trigger conflict with other class(es)
snippet apply_impulse_RigidBody "apply_impulse ( Vector3 pos, Vector3 impulse ), returns void"
	apply_impulse(${1:Vector3 pos}, ${2:Vector3 impulse})$0

# trigger conflict with other class(es)
snippet get_angular_damp_RigidBody "get_angular_damp ( ) const, returns float"
	get_angular_damp($1)$0

# trigger conflict with other class(es)
snippet get_angular_velocity_RigidBody "get_angular_velocity ( ) const, returns Vector3"
	get_angular_velocity($1)$0

snippet get_axis_lock "get_axis_lock ( ) const, returns int"
	get_axis_lock($1)$0

snippet get_bounce "get_bounce ( ) const, returns float"
	get_bounce($1)$0

snippet get_colliding_bodies "get_colliding_bodies ( ) const, returns Array"
	get_colliding_bodies($1)$0

snippet get_friction "get_friction ( ) const, returns float"
	get_friction($1)$0

snippet get_gravity_scale "get_gravity_scale ( ) const, returns float"
	get_gravity_scale($1)$0

# trigger conflict with other class(es)
snippet get_linear_damp_RigidBody "get_linear_damp ( ) const, returns float"
	get_linear_damp($1)$0

# trigger conflict with other class(es)
snippet get_linear_velocity_RigidBody "get_linear_velocity ( ) const, returns Vector3"
	get_linear_velocity($1)$0

snippet get_mass "get_mass ( ) const, returns float"
	get_mass($1)$0

snippet get_max_contacts_reported "get_max_contacts_reported ( ) const, returns int"
	get_max_contacts_reported($1)$0

# trigger conflict with other class(es)
snippet get_mode_RigidBody "get_mode ( ) const, returns int"
	get_mode($1)$0

snippet get_weight "get_weight ( ) const, returns float"
	get_weight($1)$0

snippet is_able_to_sleep "is_able_to_sleep ( ) const, returns bool"
	is_able_to_sleep($1)$0

snippet is_contact_monitor_enabled "is_contact_monitor_enabled ( ) const, returns bool"
	is_contact_monitor_enabled($1)$0

# trigger conflict with other class(es)
snippet is_sleeping_RigidBody "is_sleeping ( ) const, returns bool"
	is_sleeping($1)$0

snippet is_using_continuous_collision_detection "is_using_continuous_collision_detection ( ) const, returns bool"
	is_using_continuous_collision_detection($1)$0

snippet is_using_custom_integrator "is_using_custom_integrator ( ), returns bool"
	is_using_custom_integrator($1)$0

# trigger conflict with other class(es)
snippet set_angular_damp_RigidBody "set_angular_damp ( float angular_damp ), returns void"
	set_angular_damp(${1:float angular_damp})$0

# trigger conflict with other class(es)
snippet set_angular_velocity_RigidBody "set_angular_velocity ( Vector3 angular_velocity ), returns void"
	set_angular_velocity(${1:Vector3 angular_velocity})$0

snippet set_axis_lock "set_axis_lock ( int axis_lock ), returns void"
	set_axis_lock(${1:int axis_lock})$0

snippet set_axis_velocity "set_axis_velocity ( Vector3 axis_velocity ), returns void"
	set_axis_velocity(${1:Vector3 axis_velocity})$0

snippet set_bounce "set_bounce ( float bounce ), returns void"
	set_bounce(${1:float bounce})$0

snippet set_can_sleep "set_can_sleep ( bool able_to_sleep ), returns void"
	set_can_sleep(${1:bool able_to_sleep})$0

snippet set_contact_monitor "set_contact_monitor ( bool enabled ), returns void"
	set_contact_monitor(${1:bool enabled})$0

snippet set_friction "set_friction ( float friction ), returns void"
	set_friction(${1:float friction})$0

snippet set_gravity_scale "set_gravity_scale ( float gravity_scale ), returns void"
	set_gravity_scale(${1:float gravity_scale})$0

# trigger conflict with other class(es)
snippet set_linear_damp_RigidBody "set_linear_damp ( float linear_damp ), returns void"
	set_linear_damp(${1:float linear_damp})$0

# trigger conflict with other class(es)
snippet set_linear_velocity_RigidBody "set_linear_velocity ( Vector3 linear_velocity ), returns void"
	set_linear_velocity(${1:Vector3 linear_velocity})$0

snippet set_mass "set_mass ( float mass ), returns void"
	set_mass(${1:float mass})$0

snippet set_max_contacts_reported "set_max_contacts_reported ( int amount ), returns void"
	set_max_contacts_reported(${1:int amount})$0

# trigger conflict with other class(es)
snippet set_mode_RigidBody "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

snippet set_sleeping "set_sleeping ( bool sleeping ), returns void"
	set_sleeping(${1:bool sleeping})$0

snippet set_use_continuous_collision_detection "set_use_continuous_collision_detection ( bool enable ), returns void"
	set_use_continuous_collision_detection(${1:bool enable})$0

snippet set_use_custom_integrator "set_use_custom_integrator ( bool enable ), returns void"
	set_use_custom_integrator(${1:bool enable})$0

snippet set_weight "set_weight ( float weight ), returns void"
	set_weight(${1:float weight})$0


# Class: RigidBody2D
# trigger conflict with other class(es)
snippet _integrate_forces_RigidBody2D "_integrate_forces ( Physics2DDirectBodyState state ) virtual, returns void"
	_integrate_forces(${1:Physics2DDirectBodyState state})$0

# trigger conflict with other class(es)
snippet add_force_RigidBody2D "add_force ( Vector2 offset, Vector2 force ), returns void"
	add_force(${1:Vector2 offset}, ${2:Vector2 force})$0

# trigger conflict with other class(es)
snippet apply_impulse_RigidBody2D "apply_impulse ( Vector2 offset, Vector2 impulse ), returns void"
	apply_impulse(${1:Vector2 offset}, ${2:Vector2 impulse})$0

# trigger conflict with other class(es)
snippet get_angular_damp_RigidBody2D "get_angular_damp ( ) const, returns float"
	get_angular_damp($1)$0

# trigger conflict with other class(es)
snippet get_angular_velocity_RigidBody2D "get_angular_velocity ( ) const, returns float"
	get_angular_velocity($1)$0

snippet get_applied_force "get_applied_force ( ) const, returns Vector2"
	get_applied_force($1)$0

snippet get_applied_torque "get_applied_torque ( ) const, returns float"
	get_applied_torque($1)$0

# trigger conflict with other class(es)
snippet get_bounce_RigidBody2D "get_bounce ( ) const, returns float"
	get_bounce($1)$0

# trigger conflict with other class(es)
snippet get_colliding_bodies_RigidBody2D "get_colliding_bodies ( ) const, returns Array"
	get_colliding_bodies($1)$0

snippet get_continuous_collision_detection_mode "get_continuous_collision_detection_mode ( ) const, returns int"
	get_continuous_collision_detection_mode($1)$0

# trigger conflict with other class(es)
snippet get_friction_RigidBody2D "get_friction ( ) const, returns float"
	get_friction($1)$0

# trigger conflict with other class(es)
snippet get_gravity_scale_RigidBody2D "get_gravity_scale ( ) const, returns float"
	get_gravity_scale($1)$0

snippet get_inertia "get_inertia ( ) const, returns float"
	get_inertia($1)$0

# trigger conflict with other class(es)
snippet get_linear_damp_RigidBody2D "get_linear_damp ( ) const, returns float"
	get_linear_damp($1)$0

# trigger conflict with other class(es)
snippet get_linear_velocity_RigidBody2D "get_linear_velocity ( ) const, returns Vector2"
	get_linear_velocity($1)$0

# trigger conflict with other class(es)
snippet get_mass_RigidBody2D "get_mass ( ) const, returns float"
	get_mass($1)$0

# trigger conflict with other class(es)
snippet get_max_contacts_reported_RigidBody2D "get_max_contacts_reported ( ) const, returns int"
	get_max_contacts_reported($1)$0

# trigger conflict with other class(es)
snippet get_mode_RigidBody2D "get_mode ( ) const, returns int"
	get_mode($1)$0

# trigger conflict with other class(es)
snippet get_weight_RigidBody2D "get_weight ( ) const, returns float"
	get_weight($1)$0

# trigger conflict with other class(es)
snippet is_able_to_sleep_RigidBody2D "is_able_to_sleep ( ) const, returns bool"
	is_able_to_sleep($1)$0

# trigger conflict with other class(es)
snippet is_contact_monitor_enabled_RigidBody2D "is_contact_monitor_enabled ( ) const, returns bool"
	is_contact_monitor_enabled($1)$0

# trigger conflict with other class(es)
snippet is_sleeping_RigidBody2D "is_sleeping ( ) const, returns bool"
	is_sleeping($1)$0

# trigger conflict with other class(es)
snippet is_using_custom_integrator_RigidBody2D "is_using_custom_integrator ( ), returns bool"
	is_using_custom_integrator($1)$0

# trigger conflict with other class(es)
snippet set_angular_damp_RigidBody2D "set_angular_damp ( float angular_damp ), returns void"
	set_angular_damp(${1:float angular_damp})$0

# trigger conflict with other class(es)
snippet set_angular_velocity_RigidBody2D "set_angular_velocity ( float angular_velocity ), returns void"
	set_angular_velocity(${1:float angular_velocity})$0

snippet set_applied_force "set_applied_force ( Vector2 force ), returns void"
	set_applied_force(${1:Vector2 force})$0

snippet set_applied_torque "set_applied_torque ( float torque ), returns void"
	set_applied_torque(${1:float torque})$0

# trigger conflict with other class(es)
snippet set_axis_velocity_RigidBody2D "set_axis_velocity ( Vector2 axis_velocity ), returns void"
	set_axis_velocity(${1:Vector2 axis_velocity})$0

# trigger conflict with other class(es)
snippet set_bounce_RigidBody2D "set_bounce ( float bounce ), returns void"
	set_bounce(${1:float bounce})$0

# trigger conflict with other class(es)
snippet set_can_sleep_RigidBody2D "set_can_sleep ( bool able_to_sleep ), returns void"
	set_can_sleep(${1:bool able_to_sleep})$0

# trigger conflict with other class(es)
snippet set_contact_monitor_RigidBody2D "set_contact_monitor ( bool enabled ), returns void"
	set_contact_monitor(${1:bool enabled})$0

snippet set_continuous_collision_detection_mode "set_continuous_collision_detection_mode ( int mode ), returns void"
	set_continuous_collision_detection_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_friction_RigidBody2D "set_friction ( float friction ), returns void"
	set_friction(${1:float friction})$0

# trigger conflict with other class(es)
snippet set_gravity_scale_RigidBody2D "set_gravity_scale ( float gravity_scale ), returns void"
	set_gravity_scale(${1:float gravity_scale})$0

snippet set_inertia "set_inertia ( float inertia ), returns void"
	set_inertia(${1:float inertia})$0

# trigger conflict with other class(es)
snippet set_linear_damp_RigidBody2D "set_linear_damp ( float linear_damp ), returns void"
	set_linear_damp(${1:float linear_damp})$0

# trigger conflict with other class(es)
snippet set_linear_velocity_RigidBody2D "set_linear_velocity ( Vector2 linear_velocity ), returns void"
	set_linear_velocity(${1:Vector2 linear_velocity})$0

# trigger conflict with other class(es)
snippet set_mass_RigidBody2D "set_mass ( float mass ), returns void"
	set_mass(${1:float mass})$0

# trigger conflict with other class(es)
snippet set_max_contacts_reported_RigidBody2D "set_max_contacts_reported ( int amount ), returns void"
	set_max_contacts_reported(${1:int amount})$0

# trigger conflict with other class(es)
snippet set_mode_RigidBody2D "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_sleeping_RigidBody2D "set_sleeping ( bool sleeping ), returns void"
	set_sleeping(${1:bool sleeping})$0

# trigger conflict with other class(es)
snippet set_use_custom_integrator_RigidBody2D "set_use_custom_integrator ( bool enable ), returns void"
	set_use_custom_integrator(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_weight_RigidBody2D "set_weight ( float weight ), returns void"
	set_weight(${1:float weight})$0

snippet test_motion "test_motion ( Vector2 motion, float margin=0.08, Physics2DTestMotionResult result=NULL ), returns bool"
	test_motion(${1:Vector2 motion}, ${2:float margin=0.08}, ${3:Physics2DTestMotionResult result=NULL})$0


# Class: Room
snippet compute_room_from_subtree "compute_room_from_subtree ( ), returns void"
	compute_room_from_subtree($1)$0

snippet get_room "get_room ( ) const, returns Room"
	get_room($1)$0

snippet is_simulating_acoustics "is_simulating_acoustics ( ) const, returns bool"
	is_simulating_acoustics($1)$0

snippet set_room "set_room ( Room room ), returns void"
	set_room(${1:Room room})$0

snippet set_simulate_acoustics "set_simulate_acoustics ( bool enable ), returns void"
	set_simulate_acoustics(${1:bool enable})$0


# Class: RoomBounds
# trigger conflict with other class(es)
snippet get_bounds_RoomBounds "get_bounds ( ) const, returns Dictionary"
	get_bounds($1)$0

snippet get_geometry_hint "get_geometry_hint ( ) const, returns Vector3Array"
	get_geometry_hint($1)$0

snippet regenerate_bsp "regenerate_bsp ( ), returns void"
	regenerate_bsp($1)$0

snippet regenerate_bsp_cubic "regenerate_bsp_cubic ( ), returns void"
	regenerate_bsp_cubic($1)$0

snippet set_bounds "set_bounds ( Dictionary bsp_tree ), returns void"
	set_bounds(${1:Dictionary bsp_tree})$0

snippet set_geometry_hint "set_geometry_hint ( Vector3Array triangles ), returns void"
	set_geometry_hint(${1:Vector3Array triangles})$0


# Class: Sample
# trigger conflict with other class(es)
snippet create_Sample "create ( int format, bool stereo, int length ), returns void"
	create(${1:int format}, ${2:bool stereo}, ${3:int length})$0

# trigger conflict with other class(es)
snippet get_data_Sample "get_data ( ) const, returns RawArray"
	get_data($1)$0

# trigger conflict with other class(es)
snippet get_format_Sample "get_format ( ) const, returns int"
	get_format($1)$0

# trigger conflict with other class(es)
snippet get_length_Sample "get_length ( ) const, returns int"
	get_length($1)$0

snippet get_loop_begin "get_loop_begin ( ) const, returns int"
	get_loop_begin($1)$0

snippet get_loop_end "get_loop_end ( ) const, returns int"
	get_loop_end($1)$0

snippet get_loop_format "get_loop_format ( ) const, returns int"
	get_loop_format($1)$0

# trigger conflict with other class(es)
snippet get_mix_rate_Sample "get_mix_rate ( ) const, returns int"
	get_mix_rate($1)$0

snippet is_stereo "is_stereo ( ) const, returns bool"
	is_stereo($1)$0

# trigger conflict with other class(es)
snippet set_data_Sample "set_data ( RawArray data ), returns void"
	set_data(${1:RawArray data})$0

snippet set_loop_begin "set_loop_begin ( int pos ), returns void"
	set_loop_begin(${1:int pos})$0

snippet set_loop_end "set_loop_end ( int pos ), returns void"
	set_loop_end(${1:int pos})$0

snippet set_loop_format "set_loop_format ( int format ), returns void"
	set_loop_format(${1:int format})$0

snippet set_mix_rate "set_mix_rate ( int hz ), returns void"
	set_mix_rate(${1:int hz})$0


# Class: SampleLibrary
snippet add_sample "add_sample ( String name, Sample sample ), returns void"
	add_sample(${1:String name}, ${2:Sample sample})$0

snippet get_sample "get_sample ( String name ) const, returns Sample"
	get_sample(${1:String name})$0

snippet get_sample_list "get_sample_list ( ) const, returns Array"
	get_sample_list($1)$0

snippet has_sample "has_sample ( String name ) const, returns bool"
	has_sample(${1:String name})$0

snippet remove_sample "remove_sample ( String name ), returns void"
	remove_sample(${1:String name})$0

snippet sample_get_pitch_scale "sample_get_pitch_scale ( String name ) const, returns float"
	sample_get_pitch_scale(${1:String name})$0

snippet sample_get_volume_db "sample_get_volume_db ( String name ) const, returns float"
	sample_get_volume_db(${1:String name})$0

snippet sample_set_pitch_scale "sample_set_pitch_scale ( String name, float pitch ), returns void"
	sample_set_pitch_scale(${1:String name}, ${2:float pitch})$0

snippet sample_set_volume_db "sample_set_volume_db ( String name, float db ), returns void"
	sample_set_volume_db(${1:String name}, ${2:float db})$0


# Class: SamplePlayer
snippet get_chorus "get_chorus ( int voice ) const, returns float"
	get_chorus(${1:int voice})$0

snippet get_default_chorus "get_default_chorus ( ) const, returns float"
	get_default_chorus($1)$0

snippet get_default_filter_cutoff "get_default_filter_cutoff ( ) const, returns float"
	get_default_filter_cutoff($1)$0

snippet get_default_filter_gain "get_default_filter_gain ( ) const, returns float"
	get_default_filter_gain($1)$0

snippet get_default_filter_resonance "get_default_filter_resonance ( ) const, returns float"
	get_default_filter_resonance($1)$0

snippet get_default_filter_type "get_default_filter_type ( ) const, returns int"
	get_default_filter_type($1)$0

snippet get_default_pan "get_default_pan ( ) const, returns float"
	get_default_pan($1)$0

snippet get_default_pan_depth "get_default_pan_depth ( ) const, returns float"
	get_default_pan_depth($1)$0

snippet get_default_pan_height "get_default_pan_height ( ) const, returns float"
	get_default_pan_height($1)$0

snippet get_default_pitch_scale "get_default_pitch_scale ( ) const, returns float"
	get_default_pitch_scale($1)$0

snippet get_default_reverb "get_default_reverb ( ) const, returns float"
	get_default_reverb($1)$0

snippet get_default_reverb_room "get_default_reverb_room ( ) const, returns int"
	get_default_reverb_room($1)$0

snippet get_default_volume "get_default_volume ( ) const, returns float"
	get_default_volume($1)$0

snippet get_default_volume_db "get_default_volume_db ( ) const, returns float"
	get_default_volume_db($1)$0

snippet get_filter_cutoff "get_filter_cutoff ( int voice ) const, returns float"
	get_filter_cutoff(${1:int voice})$0

snippet get_filter_gain "get_filter_gain ( int voice ) const, returns float"
	get_filter_gain(${1:int voice})$0

snippet get_filter_resonance "get_filter_resonance ( int voice ) const, returns float"
	get_filter_resonance(${1:int voice})$0

snippet get_filter_type "get_filter_type ( int voice ) const, returns int"
	get_filter_type(${1:int voice})$0

# trigger conflict with other class(es)
snippet get_mix_rate_SamplePlayer "get_mix_rate ( int voice ) const, returns int"
	get_mix_rate(${1:int voice})$0

snippet get_pan "get_pan ( int voice ) const, returns float"
	get_pan(${1:int voice})$0

snippet get_pan_depth "get_pan_depth ( int voice ) const, returns float"
	get_pan_depth(${1:int voice})$0

snippet get_pan_height "get_pan_height ( int voice ) const, returns float"
	get_pan_height(${1:int voice})$0

# trigger conflict with other class(es)
snippet get_pitch_scale_SamplePlayer "get_pitch_scale ( int voice ) const, returns float"
	get_pitch_scale(${1:int voice})$0

snippet get_polyphony "get_polyphony ( ) const, returns int"
	get_polyphony($1)$0

snippet get_reverb "get_reverb ( int voice ) const, returns float"
	get_reverb(${1:int voice})$0

snippet get_reverb_room "get_reverb_room ( int voice ) const, returns int"
	get_reverb_room(${1:int voice})$0

snippet get_sample_library "get_sample_library ( ) const, returns SampleLibrary"
	get_sample_library($1)$0

# trigger conflict with other class(es)
snippet get_volume_SamplePlayer "get_volume ( int voice ) const, returns float"
	get_volume(${1:int voice})$0

# trigger conflict with other class(es)
snippet get_volume_db_SamplePlayer "get_volume_db ( int voice ) const, returns float"
	get_volume_db(${1:int voice})$0

# trigger conflict with other class(es)
snippet is_active_SamplePlayer "is_active ( ) const, returns bool"
	is_active($1)$0

snippet is_voice_active "is_voice_active ( int voice ) const, returns bool"
	is_voice_active(${1:int voice})$0

# trigger conflict with other class(es)
snippet play_SamplePlayer "play ( String name, bool unique=false ), returns int"
	play(${1:String name}, ${2:bool unique=false})$0

snippet set_chorus "set_chorus ( int voice, float send ), returns void"
	set_chorus(${1:int voice}, ${2:float send})$0

snippet set_default_chorus "set_default_chorus ( float send ), returns void"
	set_default_chorus(${1:float send})$0

snippet set_default_filter "set_default_filter ( int type, float cutoff_hz, float resonance, float gain=0 ), returns void"
	set_default_filter(${1:int type}, ${2:float cutoff_hz}, ${3:float resonance}, ${4:float gain=0})$0

snippet set_default_pan "set_default_pan ( float pan, float depth=0, float height=0 ), returns void"
	set_default_pan(${1:float pan}, ${2:float depth=0}, ${3:float height=0})$0

snippet set_default_pitch_scale "set_default_pitch_scale ( float ratio ), returns void"
	set_default_pitch_scale(${1:float ratio})$0

snippet set_default_reverb "set_default_reverb ( int room_type, float send ), returns void"
	set_default_reverb(${1:int room_type}, ${2:float send})$0

snippet set_default_volume "set_default_volume ( float volume ), returns void"
	set_default_volume(${1:float volume})$0

snippet set_default_volume_db "set_default_volume_db ( float db ), returns void"
	set_default_volume_db(${1:float db})$0

snippet set_filter "set_filter ( int voice, int type, float cutoff_hz, float resonance, float gain=0 ), returns void"
	set_filter(${1:int voice}, ${2:int type}, ${3:float cutoff_hz}, ${4:float resonance}, ${5:float gain=0})$0

# trigger conflict with other class(es)
snippet set_mix_rate_SamplePlayer "set_mix_rate ( int voice, int hz ), returns void"
	set_mix_rate(${1:int voice}, ${2:int hz})$0

snippet set_pan "set_pan ( int voice, float pan, float depth=0, float height=0 ), returns void"
	set_pan(${1:int voice}, ${2:float pan}, ${3:float depth=0}, ${4:float height=0})$0

# trigger conflict with other class(es)
snippet set_pitch_scale_SamplePlayer "set_pitch_scale ( int voice, float ratio ), returns void"
	set_pitch_scale(${1:int voice}, ${2:float ratio})$0

snippet set_polyphony "set_polyphony ( int max_voices ), returns void"
	set_polyphony(${1:int max_voices})$0

snippet set_reverb "set_reverb ( int voice, int room_type, float send ), returns void"
	set_reverb(${1:int voice}, ${2:int room_type}, ${3:float send})$0

snippet set_sample_library "set_sample_library ( SampleLibrary library ), returns void"
	set_sample_library(${1:SampleLibrary library})$0

# trigger conflict with other class(es)
snippet set_volume_SamplePlayer "set_volume ( int voice, float volume ), returns void"
	set_volume(${1:int voice}, ${2:float volume})$0

# trigger conflict with other class(es)
snippet set_volume_db_SamplePlayer "set_volume_db ( int voice, float db ), returns void"
	set_volume_db(${1:int voice}, ${2:float db})$0

# trigger conflict with other class(es)
snippet stop_SamplePlayer "stop ( int voice ), returns void"
	stop(${1:int voice})$0

# trigger conflict with other class(es)
snippet stop_all_SamplePlayer "stop_all ( ), returns void"
	stop_all($1)$0


# Class: SamplePlayer2D
# trigger conflict with other class(es)
snippet get_polyphony_SamplePlayer2D "get_polyphony ( ) const, returns int"
	get_polyphony($1)$0

snippet get_random_pitch_scale "get_random_pitch_scale ( ) const, returns float"
	get_random_pitch_scale($1)$0

# trigger conflict with other class(es)
snippet get_sample_library_SamplePlayer2D "get_sample_library ( ) const, returns SampleLibrary"
	get_sample_library($1)$0

# trigger conflict with other class(es)
snippet is_voice_active_SamplePlayer2D "is_voice_active ( int voice ) const, returns bool"
	is_voice_active(${1:int voice})$0

# trigger conflict with other class(es)
snippet play_SamplePlayer2D "play ( String sample, int voice=-2 ), returns int"
	play(${1:String sample}, ${2:int voice=-2})$0

# trigger conflict with other class(es)
snippet set_polyphony_SamplePlayer2D "set_polyphony ( int max_voices ), returns void"
	set_polyphony(${1:int max_voices})$0

snippet set_random_pitch_scale "set_random_pitch_scale ( float val ), returns void"
	set_random_pitch_scale(${1:float val})$0

# trigger conflict with other class(es)
snippet set_sample_library_SamplePlayer2D "set_sample_library ( SampleLibrary library ), returns void"
	set_sample_library(${1:SampleLibrary library})$0

# trigger conflict with other class(es)
snippet stop_all_SamplePlayer2D "stop_all ( ), returns void"
	stop_all($1)$0

snippet stop_voice "stop_voice ( int voice ), returns void"
	stop_voice(${1:int voice})$0

snippet voice_set_pitch_scale "voice_set_pitch_scale ( int voice, float ratio ), returns void"
	voice_set_pitch_scale(${1:int voice}, ${2:float ratio})$0

snippet voice_set_volume_scale_db "voice_set_volume_scale_db ( int voice, float db ), returns void"
	voice_set_volume_scale_db(${1:int voice}, ${2:float db})$0


# Class: SceneState
snippet get_connection_binds "get_connection_binds ( int idx ) const, returns Array"
	get_connection_binds(${1:int idx})$0

snippet get_connection_count "get_connection_count ( ) const, returns int"
	get_connection_count($1)$0

snippet get_connection_flags "get_connection_flags ( int idx ) const, returns int"
	get_connection_flags(${1:int idx})$0

snippet get_connection_method "get_connection_method ( int idx ) const, returns String"
	get_connection_method(${1:int idx})$0

snippet get_connection_signal "get_connection_signal ( int idx ) const, returns String"
	get_connection_signal(${1:int idx})$0

snippet get_connection_source "get_connection_source ( int idx ) const, returns NodePath"
	get_connection_source(${1:int idx})$0

snippet get_connection_target "get_connection_target ( int idx ) const, returns NodePath"
	get_connection_target(${1:int idx})$0

snippet get_node_count "get_node_count ( ) const, returns int"
	get_node_count($1)$0

snippet get_node_groups "get_node_groups ( int idx ) const, returns StringArray"
	get_node_groups(${1:int idx})$0

snippet get_node_instance "get_node_instance ( int idx ) const, returns PackedScene"
	get_node_instance(${1:int idx})$0

snippet get_node_instance_placeholder "get_node_instance_placeholder ( int idx ) const, returns String"
	get_node_instance_placeholder(${1:int idx})$0

snippet get_node_name "get_node_name ( int idx ) const, returns String"
	get_node_name(${1:int idx})$0

snippet get_node_owner_path "get_node_owner_path ( int idx ) const, returns NodePath"
	get_node_owner_path(${1:int idx})$0

snippet get_node_path "get_node_path ( int idx, bool for_parent=false ) const, returns NodePath"
	get_node_path(${1:int idx}, ${2:bool for_parent=false})$0

snippet get_node_property_count "get_node_property_count ( int idx ) const, returns int"
	get_node_property_count(${1:int idx})$0

snippet get_node_property_name "get_node_property_name ( int idx, int prop_idx ) const, returns String"
	get_node_property_name(${1:int idx}, ${2:int prop_idx})$0

snippet get_node_property_value "get_node_property_value ( int idx, int prop_idx ) const, returns void"
	get_node_property_value(${1:int idx}, ${2:int prop_idx})$0

snippet get_node_type "get_node_type ( int idx ) const, returns String"
	get_node_type(${1:int idx})$0

snippet is_node_instance_placeholder "is_node_instance_placeholder ( int idx ) const, returns bool"
	is_node_instance_placeholder(${1:int idx})$0


# Class: SceneTree
snippet call_group "call_group ( int flags, String group, String method, Variant arg0=NULL, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL ), returns void"
	call_group(${1:int flags}, ${2:String group}, ${3:String method}, ${4:Variant arg0=NULL}, ${5:Variant arg1=NULL}, ${6:Variant arg2=NULL}, ${7:Variant arg3=NULL}, ${8:Variant arg4=NULL})$0

snippet change_scene "change_scene ( String path ), returns int"
	change_scene(${1:String path})$0

snippet change_scene_to "change_scene_to ( PackedScene packed_scene ), returns int"
	change_scene_to(${1:PackedScene packed_scene})$0

snippet get_current_scene "get_current_scene ( ) const, returns Node"
	get_current_scene($1)$0

snippet get_edited_scene_root "get_edited_scene_root ( ) const, returns Object"
	get_edited_scene_root($1)$0

# trigger conflict with other class(es)
snippet get_frame_SceneTree "get_frame ( ) const, returns int"
	get_frame($1)$0

# trigger conflict with other class(es)
snippet get_node_count_SceneTree "get_node_count ( ) const, returns int"
	get_node_count($1)$0

snippet get_nodes_in_group "get_nodes_in_group ( String group ), returns Array"
	get_nodes_in_group(${1:String group})$0

# trigger conflict with other class(es)
snippet get_root_SceneTree "get_root ( ) const, returns Viewport"
	get_root($1)$0

snippet has_group "has_group ( String name ) const, returns bool"
	has_group(${1:String name})$0

snippet is_debugging_collisions_hint "is_debugging_collisions_hint ( ) const, returns bool"
	is_debugging_collisions_hint($1)$0

snippet is_debugging_navigation_hint "is_debugging_navigation_hint ( ) const, returns bool"
	is_debugging_navigation_hint($1)$0

snippet is_editor_hint "is_editor_hint ( ) const, returns bool"
	is_editor_hint($1)$0

# trigger conflict with other class(es)
snippet is_paused_SceneTree "is_paused ( ) const, returns bool"
	is_paused($1)$0

snippet notify_group "notify_group ( int call_flags, String group, int notification ), returns void"
	notify_group(${1:int call_flags}, ${2:String group}, ${3:int notification})$0

snippet queue_delete "queue_delete ( Object obj ), returns void"
	queue_delete(${1:Object obj})$0

snippet quit "quit ( ), returns void"
	quit($1)$0

snippet reload_current_scene "reload_current_scene ( ), returns int"
	reload_current_scene($1)$0

snippet set_auto_accept_quit "set_auto_accept_quit ( bool enabled ), returns void"
	set_auto_accept_quit(${1:bool enabled})$0

snippet set_current_scene "set_current_scene ( Node child_node ), returns void"
	set_current_scene(${1:Node child_node})$0

snippet set_debug_collisions_hint "set_debug_collisions_hint ( bool enable ), returns void"
	set_debug_collisions_hint(${1:bool enable})$0

snippet set_debug_navigation_hint "set_debug_navigation_hint ( bool enable ), returns void"
	set_debug_navigation_hint(${1:bool enable})$0

snippet set_edited_scene_root "set_edited_scene_root ( Object scene ), returns void"
	set_edited_scene_root(${1:Object scene})$0

snippet set_editor_hint "set_editor_hint ( bool enable ), returns void"
	set_editor_hint(${1:bool enable})$0

snippet set_group "set_group ( int call_flags, String group, String property, Variant value ), returns void"
	set_group(${1:int call_flags}, ${2:String group}, ${3:String property}, ${4:Variant value})$0

snippet set_input_as_handled "set_input_as_handled ( ), returns void"
	set_input_as_handled($1)$0

snippet set_pause "set_pause ( bool enable ), returns void"
	set_pause(${1:bool enable})$0

snippet set_screen_stretch "set_screen_stretch ( int mode, int aspect, Vector2 minsize ), returns void"
	set_screen_stretch(${1:int mode}, ${2:int aspect}, ${3:Vector2 minsize})$0


# Class: Script
# trigger conflict with other class(es)
snippet can_instance_Script "can_instance ( ) const, returns bool"
	can_instance($1)$0

snippet get_source_code "get_source_code ( ) const, returns String"
	get_source_code($1)$0

snippet has_source_code "has_source_code ( ) const, returns bool"
	has_source_code($1)$0

snippet instance_has "instance_has ( Object base_object ) const, returns bool"
	instance_has(${1:Object base_object})$0

snippet reload "reload ( bool keep_state=false ), returns int"
	reload(${1:bool keep_state=false})$0

snippet set_source_code "set_source_code ( String source ), returns void"
	set_source_code(${1:String source})$0


# Class: ScrollBar
snippet get_custom_step "get_custom_step ( ) const, returns float"
	get_custom_step($1)$0

snippet set_custom_step "set_custom_step ( float step ), returns void"
	set_custom_step(${1:float step})$0


# Class: ScrollContainer
snippet get_h_scroll "get_h_scroll ( ) const, returns int"
	get_h_scroll($1)$0

# trigger conflict with other class(es)
snippet get_v_scroll_ScrollContainer "get_v_scroll ( ) const, returns int"
	get_v_scroll($1)$0

snippet is_h_scroll_enabled "is_h_scroll_enabled ( ) const, returns bool"
	is_h_scroll_enabled($1)$0

snippet is_v_scroll_enabled "is_v_scroll_enabled ( ) const, returns bool"
	is_v_scroll_enabled($1)$0

snippet set_enable_h_scroll "set_enable_h_scroll ( bool enable ), returns void"
	set_enable_h_scroll(${1:bool enable})$0

snippet set_enable_v_scroll "set_enable_v_scroll ( bool enable ), returns void"
	set_enable_v_scroll(${1:bool enable})$0

snippet set_h_scroll "set_h_scroll ( int val ), returns void"
	set_h_scroll(${1:int val})$0

snippet set_v_scroll "set_v_scroll ( int val ), returns void"
	set_v_scroll(${1:int val})$0


# Class: SegmentShape2D
snippet get_a "get_a ( ) const, returns Vector2"
	get_a($1)$0

snippet get_b "get_b ( ) const, returns Vector2"
	get_b($1)$0

snippet set_a "set_a ( Vector2 a ), returns void"
	set_a(${1:Vector2 a})$0

snippet set_b "set_b ( Vector2 b ), returns void"
	set_b(${1:Vector2 b})$0


# Class: Semaphore
snippet post "post ( ), returns Error"
	post($1)$0

# trigger conflict with other class(es)
snippet wait_Semaphore "wait ( ), returns Error"
	wait($1)$0


# Class: Shader
snippet get_default_texture_param "get_default_texture_param ( String param ) const, returns Texture"
	get_default_texture_param(${1:String param})$0

snippet get_fragment_code "get_fragment_code ( ) const, returns String"
	get_fragment_code($1)$0

snippet get_light_code "get_light_code ( ) const, returns String"
	get_light_code($1)$0

# trigger conflict with other class(es)
snippet get_mode_Shader "get_mode ( ) const, returns int"
	get_mode($1)$0

snippet get_vertex_code "get_vertex_code ( ) const, returns String"
	get_vertex_code($1)$0

snippet has_param "has_param ( String name ) const, returns bool"
	has_param(${1:String name})$0

snippet set_code "set_code ( String vcode, String fcode, String lcode, int fofs=0, int lofs=0 ), returns void"
	set_code(${1:String vcode}, ${2:String fcode}, ${3:String lcode}, ${4:int fofs=0}, ${5:int lofs=0})$0

snippet set_default_texture_param "set_default_texture_param ( String param, Texture texture ), returns void"
	set_default_texture_param(${1:String param}, ${2:Texture texture})$0


# Class: ShaderGraph
# trigger conflict with other class(es)
snippet clear_ShaderGraph "clear ( int shader_type ), returns void"
	clear(${1:int shader_type})$0

snippet color_ramp_node_get_colors "color_ramp_node_get_colors ( int shader_type, int id ) const, returns ColorArray"
	color_ramp_node_get_colors(${1:int shader_type}, ${2:int id})$0

snippet color_ramp_node_get_offsets "color_ramp_node_get_offsets ( int shader_type, int id ) const, returns RealArray"
	color_ramp_node_get_offsets(${1:int shader_type}, ${2:int id})$0

snippet color_ramp_node_set_ramp "color_ramp_node_set_ramp ( int shader_type, int id, ColorArray colors, RealArray offsets ), returns void"
	color_ramp_node_set_ramp(${1:int shader_type}, ${2:int id}, ${3:ColorArray colors}, ${4:RealArray offsets})$0

snippet comment_node_get_text "comment_node_get_text ( int shader_type, int id ) const, returns String"
	comment_node_get_text(${1:int shader_type}, ${2:int id})$0

snippet comment_node_set_text "comment_node_set_text ( int shader_type, int id, String text ), returns void"
	comment_node_set_text(${1:int shader_type}, ${2:int id}, ${3:String text})$0

# trigger conflict with other class(es)
snippet connect_node_ShaderGraph "connect_node ( int shader_type, int src_id, int src_slot, int dst_id, int dst_slot ), returns Error"
	connect_node(${1:int shader_type}, ${2:int src_id}, ${3:int src_slot}, ${4:int dst_id}, ${5:int dst_slot})$0

snippet cubemap_input_node_get_value "cubemap_input_node_get_value ( int shader_type, int id ) const, returns CubeMap"
	cubemap_input_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet cubemap_input_node_set_value "cubemap_input_node_set_value ( int shader_type, int id, CubeMap value ), returns void"
	cubemap_input_node_set_value(${1:int shader_type}, ${2:int id}, ${3:CubeMap value})$0

snippet curve_map_node_get_points "curve_map_node_get_points ( int shader_type, int id ) const, returns Vector2Array"
	curve_map_node_get_points(${1:int shader_type}, ${2:int id})$0

snippet curve_map_node_set_points "curve_map_node_set_points ( int shader_type, int id, Vector2Array points ), returns void"
	curve_map_node_set_points(${1:int shader_type}, ${2:int id}, ${3:Vector2Array points})$0

snippet default_get_value "default_get_value ( int shader_type, int id, int param_id ), returns void"
	default_get_value(${1:int shader_type}, ${2:int id}, ${3:int param_id})$0

snippet default_set_value "default_set_value ( int shader_type, int id, int param_id, Variant value ), returns void"
	default_set_value(${1:int shader_type}, ${2:int id}, ${3:int param_id}, ${4:Variant value})$0

# trigger conflict with other class(es)
snippet disconnect_node_ShaderGraph "disconnect_node ( int shader_type, int src_id, int src_slot, int dst_id, int dst_slot ), returns void"
	disconnect_node(${1:int shader_type}, ${2:int src_id}, ${3:int src_slot}, ${4:int dst_id}, ${5:int dst_slot})$0

snippet get_node_connections "get_node_connections ( int shader_type ) const, returns Array"
	get_node_connections(${1:int shader_type})$0

# trigger conflict with other class(es)
snippet get_node_list_ShaderGraph "get_node_list ( int shader_type ) const, returns Array"
	get_node_list(${1:int shader_type})$0

snippet input_node_get_name "input_node_get_name ( int shader_type, int id ), returns String"
	input_node_get_name(${1:int shader_type}, ${2:int id})$0

snippet input_node_set_name "input_node_set_name ( int shader_type, int id, String name ), returns void"
	input_node_set_name(${1:int shader_type}, ${2:int id}, ${3:String name})$0

# trigger conflict with other class(es)
snippet is_node_connected_ShaderGraph "is_node_connected ( int shader_type, int src_id, int src_slot, int dst_id, int dst_slot ) const, returns bool"
	is_node_connected(${1:int shader_type}, ${2:int src_id}, ${3:int src_slot}, ${4:int dst_id}, ${5:int dst_slot})$0

snippet node_add "node_add ( int shader_type, int node_type, int id ), returns void"
	node_add(${1:int shader_type}, ${2:int node_type}, ${3:int id})$0

# trigger conflict with other class(es)
snippet node_get_pos_ShaderGraph "node_get_pos ( int shader_type, int id ) const, returns Vector2"
	node_get_pos(${1:int shader_type}, ${2:int id})$0

snippet node_get_state "node_get_state ( int shader_type, int id ) const, returns Variant"
	node_get_state(${1:int shader_type}, ${2:int id})$0

# trigger conflict with other class(es)
snippet node_get_type_ShaderGraph "node_get_type ( int shader_type, int id ) const, returns int"
	node_get_type(${1:int shader_type}, ${2:int id})$0

snippet node_remove "node_remove ( int shader_type, int id ), returns void"
	node_remove(${1:int shader_type}, ${2:int id})$0

# trigger conflict with other class(es)
snippet node_set_pos_ShaderGraph "node_set_pos ( int shader_type, int id, Vector2 pos ), returns void"
	node_set_pos(${1:int shader_type}, ${2:int id}, ${3:Vector2 pos})$0

snippet node_set_state "node_set_state ( int shader_type, int id, Variant state ), returns void"
	node_set_state(${1:int shader_type}, ${2:int id}, ${3:Variant state})$0

snippet rgb_const_node_get_value "rgb_const_node_get_value ( int shader_type, int id ) const, returns Color"
	rgb_const_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet rgb_const_node_set_value "rgb_const_node_set_value ( int shader_type, int id, Color value ), returns void"
	rgb_const_node_set_value(${1:int shader_type}, ${2:int id}, ${3:Color value})$0

snippet rgb_input_node_get_value "rgb_input_node_get_value ( int shader_type, int id ) const, returns Color"
	rgb_input_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet rgb_input_node_set_value "rgb_input_node_set_value ( int shader_type, int id, Color value ), returns void"
	rgb_input_node_set_value(${1:int shader_type}, ${2:int id}, ${3:Color value})$0

snippet rgb_op_node_get_op "rgb_op_node_get_op ( int shader_type, float id ) const, returns int"
	rgb_op_node_get_op(${1:int shader_type}, ${2:float id})$0

snippet rgb_op_node_set_op "rgb_op_node_set_op ( int shader_type, float id, int op ), returns void"
	rgb_op_node_set_op(${1:int shader_type}, ${2:float id}, ${3:int op})$0

snippet scalar_const_node_get_value "scalar_const_node_get_value ( int shader_type, int id ) const, returns float"
	scalar_const_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet scalar_const_node_set_value "scalar_const_node_set_value ( int shader_type, int id, float value ), returns void"
	scalar_const_node_set_value(${1:int shader_type}, ${2:int id}, ${3:float value})$0

snippet scalar_func_node_get_function "scalar_func_node_get_function ( int shader_type, int id ) const, returns int"
	scalar_func_node_get_function(${1:int shader_type}, ${2:int id})$0

snippet scalar_func_node_set_function "scalar_func_node_set_function ( int shader_type, int id, int func ), returns void"
	scalar_func_node_set_function(${1:int shader_type}, ${2:int id}, ${3:int func})$0

snippet scalar_input_node_get_value "scalar_input_node_get_value ( int shader_type, int id ) const, returns float"
	scalar_input_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet scalar_input_node_set_value "scalar_input_node_set_value ( int shader_type, int id, float value ), returns void"
	scalar_input_node_set_value(${1:int shader_type}, ${2:int id}, ${3:float value})$0

snippet scalar_op_node_get_op "scalar_op_node_get_op ( int shader_type, float id ) const, returns int"
	scalar_op_node_get_op(${1:int shader_type}, ${2:float id})$0

snippet scalar_op_node_set_op "scalar_op_node_set_op ( int shader_type, float id, int op ), returns void"
	scalar_op_node_set_op(${1:int shader_type}, ${2:float id}, ${3:int op})$0

snippet texture_input_node_get_value "texture_input_node_get_value ( int shader_type, int id ) const, returns Texture"
	texture_input_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet texture_input_node_set_value "texture_input_node_set_value ( int shader_type, int id, Texture value ), returns void"
	texture_input_node_set_value(${1:int shader_type}, ${2:int id}, ${3:Texture value})$0

snippet texture_node_get_filter_size "texture_node_get_filter_size ( int shader_type, int id ) const, returns int"
	texture_node_get_filter_size(${1:int shader_type}, ${2:int id})$0

snippet texture_node_get_filter_strength "texture_node_get_filter_strength ( int shader_type, float id ) const, returns float"
	texture_node_get_filter_strength(${1:int shader_type}, ${2:float id})$0

snippet texture_node_set_filter_size "texture_node_set_filter_size ( int shader_type, int id, int filter_size ), returns void"
	texture_node_set_filter_size(${1:int shader_type}, ${2:int id}, ${3:int filter_size})$0

snippet texture_node_set_filter_strength "texture_node_set_filter_strength ( int shader_type, float id, float filter_strength ), returns void"
	texture_node_set_filter_strength(${1:int shader_type}, ${2:float id}, ${3:float filter_strength})$0

snippet vec_const_node_get_value "vec_const_node_get_value ( int shader_type, int id ) const, returns Vector3"
	vec_const_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet vec_const_node_set_value "vec_const_node_set_value ( int shader_type, int id, Vector3 value ), returns void"
	vec_const_node_set_value(${1:int shader_type}, ${2:int id}, ${3:Vector3 value})$0

snippet vec_func_node_get_function "vec_func_node_get_function ( int shader_type, int id ) const, returns int"
	vec_func_node_get_function(${1:int shader_type}, ${2:int id})$0

snippet vec_func_node_set_function "vec_func_node_set_function ( int shader_type, int id, int func ), returns void"
	vec_func_node_set_function(${1:int shader_type}, ${2:int id}, ${3:int func})$0

snippet vec_input_node_get_value "vec_input_node_get_value ( int shader_type, int id ) const, returns Vector3"
	vec_input_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet vec_input_node_set_value "vec_input_node_set_value ( int shader_type, int id, Vector3 value ), returns void"
	vec_input_node_set_value(${1:int shader_type}, ${2:int id}, ${3:Vector3 value})$0

snippet vec_op_node_get_op "vec_op_node_get_op ( int shader_type, float id ) const, returns int"
	vec_op_node_get_op(${1:int shader_type}, ${2:float id})$0

snippet vec_op_node_set_op "vec_op_node_set_op ( int shader_type, float id, int op ), returns void"
	vec_op_node_set_op(${1:int shader_type}, ${2:float id}, ${3:int op})$0

snippet vec_scalar_op_node_get_op "vec_scalar_op_node_get_op ( int shader_type, float id ) const, returns int"
	vec_scalar_op_node_get_op(${1:int shader_type}, ${2:float id})$0

snippet vec_scalar_op_node_set_op "vec_scalar_op_node_set_op ( int shader_type, float id, int op ), returns void"
	vec_scalar_op_node_set_op(${1:int shader_type}, ${2:float id}, ${3:int op})$0

snippet xform_const_node_get_value "xform_const_node_get_value ( int shader_type, int id ) const, returns Transform"
	xform_const_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet xform_const_node_set_value "xform_const_node_set_value ( int shader_type, int id, Transform value ), returns void"
	xform_const_node_set_value(${1:int shader_type}, ${2:int id}, ${3:Transform value})$0

snippet xform_input_node_get_value "xform_input_node_get_value ( int shader_type, int id ) const, returns Transform"
	xform_input_node_get_value(${1:int shader_type}, ${2:int id})$0

snippet xform_input_node_set_value "xform_input_node_set_value ( int shader_type, int id, Transform value ), returns void"
	xform_input_node_set_value(${1:int shader_type}, ${2:int id}, ${3:Transform value})$0

snippet xform_vec_mult_node_get_no_translation "xform_vec_mult_node_get_no_translation ( int shader_type, int id ) const, returns bool"
	xform_vec_mult_node_get_no_translation(${1:int shader_type}, ${2:int id})$0

snippet xform_vec_mult_node_set_no_translation "xform_vec_mult_node_set_no_translation ( int shader_type, int id, bool disable ), returns void"
	xform_vec_mult_node_set_no_translation(${1:int shader_type}, ${2:int id}, ${3:bool disable})$0


# Class: ShaderMaterial
# trigger conflict with other class(es)
snippet get_shader_ShaderMaterial "get_shader ( ) const, returns Shader"
	get_shader($1)$0

# trigger conflict with other class(es)
snippet get_shader_param_ShaderMaterial "get_shader_param ( String param ) const, returns Variant"
	get_shader_param(${1:String param})$0

# trigger conflict with other class(es)
snippet set_shader_ShaderMaterial "set_shader ( Shader shader ), returns void"
	set_shader(${1:Shader shader})$0

# trigger conflict with other class(es)
snippet set_shader_param_ShaderMaterial "set_shader_param ( String param, Variant value ), returns void"
	set_shader_param(${1:String param}, ${2:Variant value})$0


# Class: Shape2D
snippet collide "collide ( Matrix32 local_xform, Shape2D with_shape, Matrix32 shape_xform ), returns bool"
	collide(${1:Matrix32 local_xform}, ${2:Shape2D with_shape}, ${3:Matrix32 shape_xform})$0

snippet collide_and_get_contacts "collide_and_get_contacts ( Matrix32 local_xform, Shape2D with_shape, Matrix32 shape_xform ), returns Variant"
	collide_and_get_contacts(${1:Matrix32 local_xform}, ${2:Shape2D with_shape}, ${3:Matrix32 shape_xform})$0

snippet collide_with_motion "collide_with_motion ( Matrix32 local_xform, Vector2 local_motion, Shape2D with_shape, Matrix32 shape_xform, Vector2 shape_motion ), returns bool"
	collide_with_motion(${1:Matrix32 local_xform}, ${2:Vector2 local_motion}, ${3:Shape2D with_shape}, ${4:Matrix32 shape_xform}, ${5:Vector2 shape_motion})$0

snippet collide_with_motion_and_get_contacts "collide_with_motion_and_get_contacts ( Matrix32 local_xform, Vector2 local_motion, Shape2D with_shape, Matrix32 shape_xform, Vector2 shape_motion ), returns Variant"
	collide_with_motion_and_get_contacts(${1:Matrix32 local_xform}, ${2:Vector2 local_motion}, ${3:Shape2D with_shape}, ${4:Matrix32 shape_xform}, ${5:Vector2 shape_motion})$0

snippet get_custom_solver_bias "get_custom_solver_bias ( ) const, returns float"
	get_custom_solver_bias($1)$0

snippet set_custom_solver_bias "set_custom_solver_bias ( float bias ), returns void"
	set_custom_solver_bias(${1:float bias})$0


# Class: ShortCut
# trigger conflict with other class(es)
snippet get_as_text_ShortCut "get_as_text ( ) const, returns String"
	get_as_text($1)$0

# trigger conflict with other class(es)
snippet get_shortcut_ShortCut "get_shortcut ( ) const, returns InputEvent"
	get_shortcut($1)$0

snippet is_shortcut "is_shortcut ( InputEvent event ) const, returns bool"
	is_shortcut(${1:InputEvent event})$0

# trigger conflict with other class(es)
snippet is_valid_ShortCut "is_valid ( ) const, returns bool"
	is_valid($1)$0

# trigger conflict with other class(es)
snippet set_shortcut_ShortCut "set_shortcut ( InputEvent event ), returns void"
	set_shortcut(${1:InputEvent event})$0


# Class: Skeleton
snippet add_bone "add_bone ( String name ), returns void"
	add_bone(${1:String name})$0

snippet bind_child_node_to_bone "bind_child_node_to_bone ( int bone_idx, Node node ), returns void"
	bind_child_node_to_bone(${1:int bone_idx}, ${2:Node node})$0

snippet clear_bones "clear_bones ( ), returns void"
	clear_bones($1)$0

snippet find_bone "find_bone ( String name ) const, returns int"
	find_bone(${1:String name})$0

snippet get_bone_count "get_bone_count ( ) const, returns int"
	get_bone_count($1)$0

snippet get_bone_custom_pose "get_bone_custom_pose ( int bone_idx ) const, returns Transform"
	get_bone_custom_pose(${1:int bone_idx})$0

snippet get_bone_global_pose "get_bone_global_pose ( int bone_idx ) const, returns Transform"
	get_bone_global_pose(${1:int bone_idx})$0

# trigger conflict with other class(es)
snippet get_bone_name_Skeleton "get_bone_name ( int bone_idx ) const, returns String"
	get_bone_name(${1:int bone_idx})$0

snippet get_bone_parent "get_bone_parent ( int bone_idx ) const, returns int"
	get_bone_parent(${1:int bone_idx})$0

snippet get_bone_pose "get_bone_pose ( int bone_idx ) const, returns Transform"
	get_bone_pose(${1:int bone_idx})$0

snippet get_bone_rest "get_bone_rest ( int bone_idx ) const, returns Transform"
	get_bone_rest(${1:int bone_idx})$0

snippet get_bone_transform "get_bone_transform ( int bone_idx ) const, returns Transform"
	get_bone_transform(${1:int bone_idx})$0

snippet get_bound_child_nodes_to_bone "get_bound_child_nodes_to_bone ( int bone_idx ) const, returns Array"
	get_bound_child_nodes_to_bone(${1:int bone_idx})$0

snippet is_bone_rest_disabled "is_bone_rest_disabled ( int bone_idx ) const, returns bool"
	is_bone_rest_disabled(${1:int bone_idx})$0

snippet set_bone_custom_pose "set_bone_custom_pose ( int bone_idx, Transform custom_pose ), returns void"
	set_bone_custom_pose(${1:int bone_idx}, ${2:Transform custom_pose})$0

snippet set_bone_disable_rest "set_bone_disable_rest ( int bone_idx, bool disable ), returns void"
	set_bone_disable_rest(${1:int bone_idx}, ${2:bool disable})$0

snippet set_bone_global_pose "set_bone_global_pose ( int bone_idx, Transform pose ), returns void"
	set_bone_global_pose(${1:int bone_idx}, ${2:Transform pose})$0

snippet set_bone_parent "set_bone_parent ( int bone_idx, int parent_idx ), returns void"
	set_bone_parent(${1:int bone_idx}, ${2:int parent_idx})$0

snippet set_bone_pose "set_bone_pose ( int bone_idx, Transform pose ), returns void"
	set_bone_pose(${1:int bone_idx}, ${2:Transform pose})$0

snippet set_bone_rest "set_bone_rest ( int bone_idx, Transform rest ), returns void"
	set_bone_rest(${1:int bone_idx}, ${2:Transform rest})$0

snippet unbind_child_node_from_bone "unbind_child_node_from_bone ( int bone_idx, Node node ), returns void"
	unbind_child_node_from_bone(${1:int bone_idx}, ${2:Node node})$0

snippet unparent_bone_and_rest "unparent_bone_and_rest ( int bone_idx ), returns void"
	unparent_bone_and_rest(${1:int bone_idx})$0


# Class: Slider
snippet get_ticks "get_ticks ( ) const, returns int"
	get_ticks($1)$0

snippet get_ticks_on_borders "get_ticks_on_borders ( ) const, returns bool"
	get_ticks_on_borders($1)$0

snippet set_ticks "set_ticks ( int count ), returns void"
	set_ticks(${1:int count})$0

snippet set_ticks_on_borders "set_ticks_on_borders ( bool ticks_on_border ), returns void"
	set_ticks_on_borders(${1:bool ticks_on_border})$0


# Class: SliderJoint
# trigger conflict with other class(es)
snippet get_param_SliderJoint "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

# trigger conflict with other class(es)
snippet set_param_SliderJoint "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0


# Class: SoundPlayer2D
# trigger conflict with other class(es)
snippet get_param_SoundPlayer2D "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

# trigger conflict with other class(es)
snippet set_param_SoundPlayer2D "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0


# Class: SoundRoomParams
# trigger conflict with other class(es)
snippet get_param_SoundRoomParams "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

snippet get_reverb_mode "get_reverb_mode ( ) const, returns int"
	get_reverb_mode($1)$0

snippet is_forcing_params_to_all_sources "is_forcing_params_to_all_sources ( ), returns bool"
	is_forcing_params_to_all_sources($1)$0

snippet set_force_params_to_all_sources "set_force_params_to_all_sources ( bool enabled ), returns void"
	set_force_params_to_all_sources(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_param_SoundRoomParams "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0

snippet set_reverb_mode "set_reverb_mode ( int reverb_mode ), returns void"
	set_reverb_mode(${1:int reverb_mode})$0


# Class: Spatial
snippet get_gizmo "get_gizmo ( ) const, returns SpatialGizmo"
	get_gizmo($1)$0

# trigger conflict with other class(es)
snippet get_global_transform_Spatial "get_global_transform ( ) const, returns Transform"
	get_global_transform($1)$0

snippet get_parent_spatial "get_parent_spatial ( ) const, returns Object"
	get_parent_spatial($1)$0

# trigger conflict with other class(es)
snippet get_rotation_Spatial "get_rotation ( ) const, returns Vector3"
	get_rotation($1)$0

# trigger conflict with other class(es)
snippet get_rotation_deg_Spatial "get_rotation_deg ( ) const, returns Vector3"
	get_rotation_deg($1)$0

# trigger conflict with other class(es)
snippet get_scale_Spatial "get_scale ( ) const, returns Vector3"
	get_scale($1)$0

# trigger conflict with other class(es)
snippet get_transform_Spatial "get_transform ( ) const, returns Transform"
	get_transform($1)$0

snippet get_translation "get_translation ( ) const, returns Vector3"
	get_translation($1)$0

snippet get_world "get_world ( ) const, returns World"
	get_world($1)$0

snippet global_rotate "global_rotate ( Vector3 normal, float radians ), returns void"
	global_rotate(${1:Vector3 normal}, ${2:float radians})$0

# trigger conflict with other class(es)
snippet global_translate_Spatial "global_translate ( Vector3 offset ), returns void"
	global_translate(${1:Vector3 offset})$0

# trigger conflict with other class(es)
snippet hide_Spatial "hide ( ), returns void"
	hide($1)$0

# trigger conflict with other class(es)
snippet is_hidden_Spatial "is_hidden ( ) const, returns bool"
	is_hidden($1)$0

snippet is_local_transform_notification_enabled "is_local_transform_notification_enabled ( ) const, returns bool"
	is_local_transform_notification_enabled($1)$0

# trigger conflict with other class(es)
snippet is_set_as_toplevel_Spatial "is_set_as_toplevel ( ) const, returns bool"
	is_set_as_toplevel($1)$0

# trigger conflict with other class(es)
snippet is_visible_Spatial "is_visible ( ) const, returns bool"
	is_visible($1)$0

# trigger conflict with other class(es)
snippet look_at_Spatial "look_at ( Vector3 target, Vector3 up ), returns void"
	look_at(${1:Vector3 target}, ${2:Vector3 up})$0

snippet look_at_from_pos "look_at_from_pos ( Vector3 pos, Vector3 target, Vector3 up ), returns void"
	look_at_from_pos(${1:Vector3 pos}, ${2:Vector3 target}, ${3:Vector3 up})$0

snippet orthonormalize "orthonormalize ( ), returns void"
	orthonormalize($1)$0

# trigger conflict with other class(es)
snippet rotate_Spatial "rotate ( Vector3 normal, float radians ), returns void"
	rotate(${1:Vector3 normal}, ${2:float radians})$0

snippet rotate_x "rotate_x ( float radians ), returns void"
	rotate_x(${1:float radians})$0

snippet rotate_y "rotate_y ( float radians ), returns void"
	rotate_y(${1:float radians})$0

snippet rotate_z "rotate_z ( float radians ), returns void"
	rotate_z(${1:float radians})$0

# trigger conflict with other class(es)
snippet set_as_toplevel_Spatial "set_as_toplevel ( bool enable ), returns void"
	set_as_toplevel(${1:bool enable})$0

snippet set_gizmo "set_gizmo ( SpatialGizmo gizmo ), returns void"
	set_gizmo(${1:SpatialGizmo gizmo})$0

# trigger conflict with other class(es)
snippet set_global_transform_Spatial "set_global_transform ( Transform global ), returns void"
	set_global_transform(${1:Transform global})$0

# trigger conflict with other class(es)
snippet set_hidden_Spatial "set_hidden ( bool hidden ), returns void"
	set_hidden(${1:bool hidden})$0

snippet set_identity "set_identity ( ), returns void"
	set_identity($1)$0

snippet set_ignore_transform_notification "set_ignore_transform_notification ( bool enabled ), returns void"
	set_ignore_transform_notification(${1:bool enabled})$0

snippet set_notify_local_transform "set_notify_local_transform ( bool enable ), returns void"
	set_notify_local_transform(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_rotation_Spatial "set_rotation ( Vector3 rotation_rad ), returns void"
	set_rotation(${1:Vector3 rotation_rad})$0

# trigger conflict with other class(es)
snippet set_rotation_deg_Spatial "set_rotation_deg ( Vector3 rotation_deg ), returns void"
	set_rotation_deg(${1:Vector3 rotation_deg})$0

# trigger conflict with other class(es)
snippet set_scale_Spatial "set_scale ( Vector3 scale ), returns void"
	set_scale(${1:Vector3 scale})$0

# trigger conflict with other class(es)
snippet set_transform_Spatial "set_transform ( Transform local ), returns void"
	set_transform(${1:Transform local})$0

snippet set_translation "set_translation ( Vector3 translation ), returns void"
	set_translation(${1:Vector3 translation})$0

# trigger conflict with other class(es)
snippet show_Spatial "show ( ), returns void"
	show($1)$0

# trigger conflict with other class(es)
snippet translate_Spatial "translate ( Vector3 offset ), returns void"
	translate(${1:Vector3 offset})$0

snippet update_gizmo "update_gizmo ( ), returns void"
	update_gizmo($1)$0


# Class: SpatialPlayer
# trigger conflict with other class(es)
snippet get_param_SpatialPlayer "get_param ( int param ) const, returns float"
	get_param(${1:int param})$0

# trigger conflict with other class(es)
snippet set_param_SpatialPlayer "set_param ( int param, float value ), returns void"
	set_param(${1:int param}, ${2:float value})$0


# Class: SpatialSamplePlayer
# trigger conflict with other class(es)
snippet get_polyphony_SpatialSamplePlayer "get_polyphony ( ) const, returns int"
	get_polyphony($1)$0

# trigger conflict with other class(es)
snippet get_sample_library_SpatialSamplePlayer "get_sample_library ( ) const, returns SampleLibrary"
	get_sample_library($1)$0

# trigger conflict with other class(es)
snippet is_voice_active_SpatialSamplePlayer "is_voice_active ( int voice ) const, returns bool"
	is_voice_active(${1:int voice})$0

# trigger conflict with other class(es)
snippet play_SpatialSamplePlayer "play ( String sample, int voice=-2 ), returns int"
	play(${1:String sample}, ${2:int voice=-2})$0

# trigger conflict with other class(es)
snippet set_polyphony_SpatialSamplePlayer "set_polyphony ( int voices ), returns void"
	set_polyphony(${1:int voices})$0

# trigger conflict with other class(es)
snippet set_sample_library_SpatialSamplePlayer "set_sample_library ( SampleLibrary library ), returns void"
	set_sample_library(${1:SampleLibrary library})$0

# trigger conflict with other class(es)
snippet stop_all_SpatialSamplePlayer "stop_all ( ), returns void"
	stop_all($1)$0

# trigger conflict with other class(es)
snippet stop_voice_SpatialSamplePlayer "stop_voice ( int voice ), returns void"
	stop_voice(${1:int voice})$0

# trigger conflict with other class(es)
snippet voice_set_pitch_scale_SpatialSamplePlayer "voice_set_pitch_scale ( int voice, float ratio ), returns void"
	voice_set_pitch_scale(${1:int voice}, ${2:float ratio})$0

# trigger conflict with other class(es)
snippet voice_set_volume_scale_db_SpatialSamplePlayer "voice_set_volume_scale_db ( int voice, float db ), returns void"
	voice_set_volume_scale_db(${1:int voice}, ${2:float db})$0


# Class: SpatialStreamPlayer
snippet get_buffering_msec "get_buffering_msec ( ) const, returns int"
	get_buffering_msec($1)$0

# trigger conflict with other class(es)
snippet get_length_SpatialStreamPlayer "get_length ( ) const, returns float"
	get_length($1)$0

# trigger conflict with other class(es)
snippet get_loop_count_SpatialStreamPlayer "get_loop_count ( ) const, returns int"
	get_loop_count($1)$0

snippet get_loop_restart_time "get_loop_restart_time ( ) const, returns float"
	get_loop_restart_time($1)$0

# trigger conflict with other class(es)
snippet get_pos_SpatialStreamPlayer "get_pos ( ) const, returns float"
	get_pos($1)$0

# trigger conflict with other class(es)
snippet get_stream_SpatialStreamPlayer "get_stream ( ) const, returns AudioStream"
	get_stream($1)$0

# trigger conflict with other class(es)
snippet get_stream_name_SpatialStreamPlayer "get_stream_name ( ) const, returns String"
	get_stream_name($1)$0

# trigger conflict with other class(es)
snippet get_volume_SpatialStreamPlayer "get_volume ( ) const, returns float"
	get_volume($1)$0

# trigger conflict with other class(es)
snippet get_volume_db_SpatialStreamPlayer "get_volume_db ( ) const, returns float"
	get_volume_db($1)$0

# trigger conflict with other class(es)
snippet has_autoplay_SpatialStreamPlayer "has_autoplay ( ) const, returns bool"
	has_autoplay($1)$0

# trigger conflict with other class(es)
snippet has_loop_SpatialStreamPlayer "has_loop ( ) const, returns bool"
	has_loop($1)$0

# trigger conflict with other class(es)
snippet is_paused_SpatialStreamPlayer "is_paused ( ) const, returns bool"
	is_paused($1)$0

# trigger conflict with other class(es)
snippet is_playing_SpatialStreamPlayer "is_playing ( ) const, returns bool"
	is_playing($1)$0

# trigger conflict with other class(es)
snippet play_SpatialStreamPlayer "play ( float offset=0 ), returns void"
	play(${1:float offset=0})$0

# trigger conflict with other class(es)
snippet seek_pos_SpatialStreamPlayer "seek_pos ( float time ), returns void"
	seek_pos(${1:float time})$0

# trigger conflict with other class(es)
snippet set_autoplay_SpatialStreamPlayer "set_autoplay ( bool enabled ), returns void"
	set_autoplay(${1:bool enabled})$0

snippet set_buffering_msec "set_buffering_msec ( int msec ), returns void"
	set_buffering_msec(${1:int msec})$0

# trigger conflict with other class(es)
snippet set_loop_SpatialStreamPlayer "set_loop ( bool enabled ), returns void"
	set_loop(${1:bool enabled})$0

snippet set_loop_restart_time "set_loop_restart_time ( float secs ), returns void"
	set_loop_restart_time(${1:float secs})$0

# trigger conflict with other class(es)
snippet set_paused_SpatialStreamPlayer "set_paused ( bool paused ), returns void"
	set_paused(${1:bool paused})$0

# trigger conflict with other class(es)
snippet set_stream_SpatialStreamPlayer "set_stream ( AudioStream stream ), returns void"
	set_stream(${1:AudioStream stream})$0

# trigger conflict with other class(es)
snippet set_volume_SpatialStreamPlayer "set_volume ( float volume ), returns void"
	set_volume(${1:float volume})$0

# trigger conflict with other class(es)
snippet set_volume_db_SpatialStreamPlayer "set_volume_db ( float db ), returns void"
	set_volume_db(${1:float db})$0

# trigger conflict with other class(es)
snippet stop_SpatialStreamPlayer "stop ( ), returns void"
	stop($1)$0


# Class: SphereShape
# trigger conflict with other class(es)
snippet get_radius_SphereShape "get_radius ( ) const, returns float"
	get_radius($1)$0

# trigger conflict with other class(es)
snippet set_radius_SphereShape "set_radius ( float radius ), returns void"
	set_radius(${1:float radius})$0


# Class: SpinBox
snippet get_line_edit "get_line_edit ( ), returns Object"
	get_line_edit($1)$0

snippet get_prefix "get_prefix ( ) const, returns String"
	get_prefix($1)$0

snippet get_suffix "get_suffix ( ) const, returns String"
	get_suffix($1)$0

# trigger conflict with other class(es)
snippet is_editable_SpinBox "is_editable ( ) const, returns bool"
	is_editable($1)$0

# trigger conflict with other class(es)
snippet set_editable_SpinBox "set_editable ( bool editable ), returns void"
	set_editable(${1:bool editable})$0

snippet set_prefix "set_prefix ( String prefix ), returns void"
	set_prefix(${1:String prefix})$0

snippet set_suffix "set_suffix ( String suffix ), returns void"
	set_suffix(${1:String suffix})$0


# Class: SplitContainer
snippet get_dragger_visibility "get_dragger_visibility ( ) const, returns int"
	get_dragger_visibility($1)$0

snippet get_split_offset "get_split_offset ( ) const, returns int"
	get_split_offset($1)$0

snippet is_collapsed "is_collapsed ( ) const, returns bool"
	is_collapsed($1)$0

snippet set_collapsed "set_collapsed ( bool collapsed ), returns void"
	set_collapsed(${1:bool collapsed})$0

snippet set_dragger_visibility "set_dragger_visibility ( int mode ), returns void"
	set_dragger_visibility(${1:int mode})$0

snippet set_split_offset "set_split_offset ( int offset ), returns void"
	set_split_offset(${1:int offset})$0


# Class: Sprite
# trigger conflict with other class(es)
snippet get_frame_Sprite "get_frame ( ) const, returns int"
	get_frame($1)$0

snippet get_hframes "get_hframes ( ) const, returns int"
	get_hframes($1)$0

# trigger conflict with other class(es)
snippet get_modulate_Sprite "get_modulate ( ) const, returns Color"
	get_modulate($1)$0

# trigger conflict with other class(es)
snippet get_offset_Sprite "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

# trigger conflict with other class(es)
snippet get_region_rect_Sprite "get_region_rect ( ) const, returns Rect2"
	get_region_rect($1)$0

# trigger conflict with other class(es)
snippet get_texture_Sprite "get_texture ( ) const, returns Texture"
	get_texture($1)$0

snippet get_vframes "get_vframes ( ) const, returns int"
	get_vframes($1)$0

# trigger conflict with other class(es)
snippet is_centered_Sprite "is_centered ( ) const, returns bool"
	is_centered($1)$0

# trigger conflict with other class(es)
snippet is_flipped_h_Sprite "is_flipped_h ( ) const, returns bool"
	is_flipped_h($1)$0

# trigger conflict with other class(es)
snippet is_flipped_v_Sprite "is_flipped_v ( ) const, returns bool"
	is_flipped_v($1)$0

snippet is_region "is_region ( ) const, returns bool"
	is_region($1)$0

# trigger conflict with other class(es)
snippet set_centered_Sprite "set_centered ( bool centered ), returns void"
	set_centered(${1:bool centered})$0

# trigger conflict with other class(es)
snippet set_flip_h_Sprite "set_flip_h ( bool flip_h ), returns void"
	set_flip_h(${1:bool flip_h})$0

# trigger conflict with other class(es)
snippet set_flip_v_Sprite "set_flip_v ( bool flip_v ), returns void"
	set_flip_v(${1:bool flip_v})$0

# trigger conflict with other class(es)
snippet set_frame_Sprite "set_frame ( int frame ), returns void"
	set_frame(${1:int frame})$0

snippet set_hframes "set_hframes ( int hframes ), returns void"
	set_hframes(${1:int hframes})$0

# trigger conflict with other class(es)
snippet set_modulate_Sprite "set_modulate ( Color modulate ), returns void"
	set_modulate(${1:Color modulate})$0

# trigger conflict with other class(es)
snippet set_offset_Sprite "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

# trigger conflict with other class(es)
snippet set_region_Sprite "set_region ( bool enabled ), returns void"
	set_region(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_region_rect_Sprite "set_region_rect ( Rect2 rect ), returns void"
	set_region_rect(${1:Rect2 rect})$0

# trigger conflict with other class(es)
snippet set_texture_Sprite "set_texture ( Texture texture ), returns void"
	set_texture(${1:Texture texture})$0

snippet set_vframes "set_vframes ( int vframes ), returns void"
	set_vframes(${1:int vframes})$0


# Class: Sprite3D
# trigger conflict with other class(es)
snippet get_frame_Sprite3D "get_frame ( ) const, returns int"
	get_frame($1)$0

# trigger conflict with other class(es)
snippet get_hframes_Sprite3D "get_hframes ( ) const, returns int"
	get_hframes($1)$0

# trigger conflict with other class(es)
snippet get_region_rect_Sprite3D "get_region_rect ( ) const, returns Rect2"
	get_region_rect($1)$0

# trigger conflict with other class(es)
snippet get_texture_Sprite3D "get_texture ( ) const, returns Texture"
	get_texture($1)$0

# trigger conflict with other class(es)
snippet get_vframes_Sprite3D "get_vframes ( ) const, returns int"
	get_vframes($1)$0

# trigger conflict with other class(es)
snippet is_region_Sprite3D "is_region ( ) const, returns bool"
	is_region($1)$0

# trigger conflict with other class(es)
snippet set_frame_Sprite3D "set_frame ( int frame ), returns void"
	set_frame(${1:int frame})$0

# trigger conflict with other class(es)
snippet set_hframes_Sprite3D "set_hframes ( int hframes ), returns void"
	set_hframes(${1:int hframes})$0

# trigger conflict with other class(es)
snippet set_region_Sprite3D "set_region ( bool enabled ), returns void"
	set_region(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_region_rect_Sprite3D "set_region_rect ( Rect2 rect ), returns void"
	set_region_rect(${1:Rect2 rect})$0

# trigger conflict with other class(es)
snippet set_texture_Sprite3D "set_texture ( Texture texture ), returns void"
	set_texture(${1:Texture texture})$0

# trigger conflict with other class(es)
snippet set_vframes_Sprite3D "set_vframes ( int vframes ), returns void"
	set_vframes(${1:int vframes})$0


# Class: SpriteBase3D
snippet get_alpha_cut_mode "get_alpha_cut_mode ( ) const, returns int"
	get_alpha_cut_mode($1)$0

# trigger conflict with other class(es)
snippet get_axis_SpriteBase3D "get_axis ( ) const, returns int"
	get_axis($1)$0

snippet get_draw_flag "get_draw_flag ( int flag ) const, returns bool"
	get_draw_flag(${1:int flag})$0

# trigger conflict with other class(es)
snippet get_item_rect_SpriteBase3D "get_item_rect ( ) const, returns Rect2"
	get_item_rect($1)$0

# trigger conflict with other class(es)
snippet get_modulate_SpriteBase3D "get_modulate ( ) const, returns Color"
	get_modulate($1)$0

# trigger conflict with other class(es)
snippet get_offset_SpriteBase3D "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

# trigger conflict with other class(es)
snippet get_opacity_SpriteBase3D "get_opacity ( ) const, returns float"
	get_opacity($1)$0

snippet get_pixel_size "get_pixel_size ( ) const, returns float"
	get_pixel_size($1)$0

# trigger conflict with other class(es)
snippet is_centered_SpriteBase3D "is_centered ( ) const, returns bool"
	is_centered($1)$0

# trigger conflict with other class(es)
snippet is_flipped_h_SpriteBase3D "is_flipped_h ( ) const, returns bool"
	is_flipped_h($1)$0

# trigger conflict with other class(es)
snippet is_flipped_v_SpriteBase3D "is_flipped_v ( ) const, returns bool"
	is_flipped_v($1)$0

snippet set_alpha_cut_mode "set_alpha_cut_mode ( int mode ), returns void"
	set_alpha_cut_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_axis_SpriteBase3D "set_axis ( int axis ), returns void"
	set_axis(${1:int axis})$0

# trigger conflict with other class(es)
snippet set_centered_SpriteBase3D "set_centered ( bool centered ), returns void"
	set_centered(${1:bool centered})$0

snippet set_draw_flag "set_draw_flag ( int flag, bool enabled ), returns void"
	set_draw_flag(${1:int flag}, ${2:bool enabled})$0

# trigger conflict with other class(es)
snippet set_flip_h_SpriteBase3D "set_flip_h ( bool flip_h ), returns void"
	set_flip_h(${1:bool flip_h})$0

# trigger conflict with other class(es)
snippet set_flip_v_SpriteBase3D "set_flip_v ( bool flip_v ), returns void"
	set_flip_v(${1:bool flip_v})$0

# trigger conflict with other class(es)
snippet set_modulate_SpriteBase3D "set_modulate ( Color modulate ), returns void"
	set_modulate(${1:Color modulate})$0

# trigger conflict with other class(es)
snippet set_offset_SpriteBase3D "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

# trigger conflict with other class(es)
snippet set_opacity_SpriteBase3D "set_opacity ( float opacity ), returns void"
	set_opacity(${1:float opacity})$0

snippet set_pixel_size "set_pixel_size ( float pixel_size ), returns void"
	set_pixel_size(${1:float pixel_size})$0


# Class: SpriteFrames
# trigger conflict with other class(es)
snippet add_animation_SpriteFrames "add_animation ( String anim ), returns void"
	add_animation(${1:String anim})$0

snippet add_frame "add_frame ( String anim, Object frame, int atpos=-1 ), returns void"
	add_frame(${1:String anim}, ${2:Object frame}, ${3:int atpos=-1})$0

# trigger conflict with other class(es)
snippet clear_SpriteFrames "clear ( String anim ), returns void"
	clear(${1:String anim})$0

snippet clear_all "clear_all ( ), returns void"
	clear_all($1)$0

snippet get_animation_loop "get_animation_loop ( String anim ) const, returns bool"
	get_animation_loop(${1:String anim})$0

snippet get_animation_speed "get_animation_speed ( String anim ) const, returns float"
	get_animation_speed(${1:String anim})$0

# trigger conflict with other class(es)
snippet get_frame_SpriteFrames "get_frame ( String anim, int idx ) const, returns Object"
	get_frame(${1:String anim}, ${2:int idx})$0

snippet get_frame_count "get_frame_count ( String anim ) const, returns int"
	get_frame_count(${1:String anim})$0

# trigger conflict with other class(es)
snippet has_animation_SpriteFrames "has_animation ( String anim ) const, returns bool"
	has_animation(${1:String anim})$0

# trigger conflict with other class(es)
snippet remove_animation_SpriteFrames "remove_animation ( String anim ), returns void"
	remove_animation(${1:String anim})$0

snippet remove_frame "remove_frame ( String anim, int idx ), returns void"
	remove_frame(${1:String anim}, ${2:int idx})$0

# trigger conflict with other class(es)
snippet rename_animation_SpriteFrames "rename_animation ( String anim, String newname ), returns void"
	rename_animation(${1:String anim}, ${2:String newname})$0

snippet set_animation_loop "set_animation_loop ( String anim, bool loop ), returns void"
	set_animation_loop(${1:String anim}, ${2:bool loop})$0

snippet set_animation_speed "set_animation_speed ( String anim, float speed ), returns void"
	set_animation_speed(${1:String anim}, ${2:float speed})$0

# trigger conflict with other class(es)
snippet set_frame_SpriteFrames "set_frame ( String anim, int idx, Object txt ), returns void"
	set_frame(${1:String anim}, ${2:int idx}, ${3:Object txt})$0


# Class: StaticBody
# trigger conflict with other class(es)
snippet get_bounce_StaticBody "get_bounce ( ) const, returns float"
	get_bounce($1)$0

snippet get_constant_angular_velocity "get_constant_angular_velocity ( ) const, returns Vector3"
	get_constant_angular_velocity($1)$0

snippet get_constant_linear_velocity "get_constant_linear_velocity ( ) const, returns Vector3"
	get_constant_linear_velocity($1)$0

# trigger conflict with other class(es)
snippet get_friction_StaticBody "get_friction ( ) const, returns float"
	get_friction($1)$0

# trigger conflict with other class(es)
snippet set_bounce_StaticBody "set_bounce ( float bounce ), returns void"
	set_bounce(${1:float bounce})$0

snippet set_constant_angular_velocity "set_constant_angular_velocity ( Vector3 vel ), returns void"
	set_constant_angular_velocity(${1:Vector3 vel})$0

snippet set_constant_linear_velocity "set_constant_linear_velocity ( Vector3 vel ), returns void"
	set_constant_linear_velocity(${1:Vector3 vel})$0

# trigger conflict with other class(es)
snippet set_friction_StaticBody "set_friction ( float friction ), returns void"
	set_friction(${1:float friction})$0


# Class: StaticBody2D
# trigger conflict with other class(es)
snippet get_bounce_StaticBody2D "get_bounce ( ) const, returns float"
	get_bounce($1)$0

# trigger conflict with other class(es)
snippet get_constant_angular_velocity_StaticBody2D "get_constant_angular_velocity ( ) const, returns float"
	get_constant_angular_velocity($1)$0

# trigger conflict with other class(es)
snippet get_constant_linear_velocity_StaticBody2D "get_constant_linear_velocity ( ) const, returns Vector2"
	get_constant_linear_velocity($1)$0

# trigger conflict with other class(es)
snippet get_friction_StaticBody2D "get_friction ( ) const, returns float"
	get_friction($1)$0

# trigger conflict with other class(es)
snippet set_bounce_StaticBody2D "set_bounce ( float bounce ), returns void"
	set_bounce(${1:float bounce})$0

# trigger conflict with other class(es)
snippet set_constant_angular_velocity_StaticBody2D "set_constant_angular_velocity ( float vel ), returns void"
	set_constant_angular_velocity(${1:float vel})$0

# trigger conflict with other class(es)
snippet set_constant_linear_velocity_StaticBody2D "set_constant_linear_velocity ( Vector2 vel ), returns void"
	set_constant_linear_velocity(${1:Vector2 vel})$0

# trigger conflict with other class(es)
snippet set_friction_StaticBody2D "set_friction ( float friction ), returns void"
	set_friction(${1:float friction})$0


# Class: StreamPeer
# trigger conflict with other class(es)
snippet get_16_StreamPeer "get_16 ( ), returns int"
	get_16($1)$0

# trigger conflict with other class(es)
snippet get_32_StreamPeer "get_32 ( ), returns int"
	get_32($1)$0

# trigger conflict with other class(es)
snippet get_64_StreamPeer "get_64 ( ), returns int"
	get_64($1)$0

# trigger conflict with other class(es)
snippet get_8_StreamPeer "get_8 ( ), returns int"
	get_8($1)$0

snippet get_available_bytes "get_available_bytes ( ) const, returns int"
	get_available_bytes($1)$0

# trigger conflict with other class(es)
snippet get_data_StreamPeer "get_data ( int bytes ), returns Array"
	get_data(${1:int bytes})$0

# trigger conflict with other class(es)
snippet get_double_StreamPeer "get_double ( ), returns float"
	get_double($1)$0

# trigger conflict with other class(es)
snippet get_float_StreamPeer "get_float ( ), returns float"
	get_float($1)$0

snippet get_partial_data "get_partial_data ( int bytes ), returns Array"
	get_partial_data(${1:int bytes})$0

snippet get_string "get_string ( int bytes ), returns String"
	get_string(${1:int bytes})$0

snippet get_u16 "get_u16 ( ), returns int"
	get_u16($1)$0

snippet get_u32 "get_u32 ( ), returns int"
	get_u32($1)$0

snippet get_u64 "get_u64 ( ), returns int"
	get_u64($1)$0

snippet get_u8 "get_u8 ( ), returns int"
	get_u8($1)$0

snippet get_utf8_string "get_utf8_string ( int bytes ), returns String"
	get_utf8_string(${1:int bytes})$0

# trigger conflict with other class(es)
snippet get_var_StreamPeer "get_var ( ), returns Variant"
	get_var($1)$0

snippet is_big_endian_enabled "is_big_endian_enabled ( ) const, returns bool"
	is_big_endian_enabled($1)$0

snippet put_16 "put_16 ( int val ), returns void"
	put_16(${1:int val})$0

snippet put_32 "put_32 ( int val ), returns void"
	put_32(${1:int val})$0

snippet put_64 "put_64 ( int val ), returns void"
	put_64(${1:int val})$0

snippet put_8 "put_8 ( int val ), returns void"
	put_8(${1:int val})$0

snippet put_data "put_data ( RawArray data ), returns int"
	put_data(${1:RawArray data})$0

snippet put_double "put_double ( float val ), returns void"
	put_double(${1:float val})$0

snippet put_float "put_float ( float val ), returns void"
	put_float(${1:float val})$0

snippet put_partial_data "put_partial_data ( RawArray data ), returns Array"
	put_partial_data(${1:RawArray data})$0

snippet put_u16 "put_u16 ( int val ), returns void"
	put_u16(${1:int val})$0

snippet put_u32 "put_u32 ( int val ), returns void"
	put_u32(${1:int val})$0

snippet put_u64 "put_u64 ( int val ), returns void"
	put_u64(${1:int val})$0

snippet put_u8 "put_u8 ( int val ), returns void"
	put_u8(${1:int val})$0

snippet put_utf8_string "put_utf8_string ( String val ), returns void"
	put_utf8_string(${1:String val})$0

# trigger conflict with other class(es)
snippet put_var_StreamPeer "put_var ( Variant val ), returns void"
	put_var(${1:Variant val})$0

snippet set_big_endian "set_big_endian ( bool enable ), returns void"
	set_big_endian(${1:bool enable})$0


# Class: StreamPeerSSL
snippet accept "accept ( StreamPeer stream ), returns Error"
	accept(${1:StreamPeer stream})$0

# trigger conflict with other class(es)
snippet connect_StreamPeerSSL "connect ( StreamPeer stream, bool validate_certs=false, String for_hostname=”” ), returns Error"
	connect(${1:StreamPeer stream}, ${2:bool validate_certs=false}, ${3:String for_hostname=””})$0

# trigger conflict with other class(es)
snippet disconnect_StreamPeerSSL "disconnect ( ), returns void"
	disconnect($1)$0

# trigger conflict with other class(es)
snippet get_status_StreamPeerSSL "get_status ( ) const, returns int"
	get_status($1)$0


# Class: StreamPeerTCP
# trigger conflict with other class(es)
snippet connect_StreamPeerTCP "connect ( String host, int port ), returns int"
	connect(${1:String host}, ${2:int port})$0

# trigger conflict with other class(es)
snippet disconnect_StreamPeerTCP "disconnect ( ), returns void"
	disconnect($1)$0

snippet get_connected_host "get_connected_host ( ) const, returns String"
	get_connected_host($1)$0

snippet get_connected_port "get_connected_port ( ) const, returns int"
	get_connected_port($1)$0

# trigger conflict with other class(es)
snippet get_status_StreamPeerTCP "get_status ( ) const, returns int"
	get_status($1)$0

# trigger conflict with other class(es)
snippet is_connected_StreamPeerTCP "is_connected ( ) const, returns bool"
	is_connected($1)$0


# Class: StreamPlayer
# trigger conflict with other class(es)
snippet get_buffering_msec_StreamPlayer "get_buffering_msec ( ) const, returns int"
	get_buffering_msec($1)$0

# trigger conflict with other class(es)
snippet get_length_StreamPlayer "get_length ( ) const, returns float"
	get_length($1)$0

# trigger conflict with other class(es)
snippet get_loop_count_StreamPlayer "get_loop_count ( ) const, returns int"
	get_loop_count($1)$0

# trigger conflict with other class(es)
snippet get_loop_restart_time_StreamPlayer "get_loop_restart_time ( ) const, returns float"
	get_loop_restart_time($1)$0

# trigger conflict with other class(es)
snippet get_pos_StreamPlayer "get_pos ( ) const, returns float"
	get_pos($1)$0

# trigger conflict with other class(es)
snippet get_stream_StreamPlayer "get_stream ( ) const, returns AudioStream"
	get_stream($1)$0

# trigger conflict with other class(es)
snippet get_stream_name_StreamPlayer "get_stream_name ( ) const, returns String"
	get_stream_name($1)$0

# trigger conflict with other class(es)
snippet get_volume_StreamPlayer "get_volume ( ) const, returns float"
	get_volume($1)$0

# trigger conflict with other class(es)
snippet get_volume_db_StreamPlayer "get_volume_db ( ) const, returns float"
	get_volume_db($1)$0

# trigger conflict with other class(es)
snippet has_autoplay_StreamPlayer "has_autoplay ( ) const, returns bool"
	has_autoplay($1)$0

# trigger conflict with other class(es)
snippet has_loop_StreamPlayer "has_loop ( ) const, returns bool"
	has_loop($1)$0

# trigger conflict with other class(es)
snippet is_paused_StreamPlayer "is_paused ( ) const, returns bool"
	is_paused($1)$0

# trigger conflict with other class(es)
snippet is_playing_StreamPlayer "is_playing ( ) const, returns bool"
	is_playing($1)$0

# trigger conflict with other class(es)
snippet play_StreamPlayer "play ( float offset=0 ), returns void"
	play(${1:float offset=0})$0

# trigger conflict with other class(es)
snippet seek_pos_StreamPlayer "seek_pos ( float time ), returns void"
	seek_pos(${1:float time})$0

# trigger conflict with other class(es)
snippet set_autoplay_StreamPlayer "set_autoplay ( bool enabled ), returns void"
	set_autoplay(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_buffering_msec_StreamPlayer "set_buffering_msec ( int msec ), returns void"
	set_buffering_msec(${1:int msec})$0

# trigger conflict with other class(es)
snippet set_loop_StreamPlayer "set_loop ( bool enabled ), returns void"
	set_loop(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_loop_restart_time_StreamPlayer "set_loop_restart_time ( float secs ), returns void"
	set_loop_restart_time(${1:float secs})$0

# trigger conflict with other class(es)
snippet set_paused_StreamPlayer "set_paused ( bool paused ), returns void"
	set_paused(${1:bool paused})$0

# trigger conflict with other class(es)
snippet set_stream_StreamPlayer "set_stream ( AudioStream stream ), returns void"
	set_stream(${1:AudioStream stream})$0

# trigger conflict with other class(es)
snippet set_volume_StreamPlayer "set_volume ( float volume ), returns void"
	set_volume(${1:float volume})$0

# trigger conflict with other class(es)
snippet set_volume_db_StreamPlayer "set_volume_db ( float db ), returns void"
	set_volume_db(${1:float db})$0

# trigger conflict with other class(es)
snippet stop_StreamPlayer "stop ( ), returns void"
	stop($1)$0


# Class: String
snippet basename "basename ( ), returns String"
	basename($1)$0

snippet begins_with "begins_with ( String text ), returns bool"
	begins_with(${1:String text})$0

snippet bigrams "bigrams ( ), returns StringArray"
	bigrams($1)$0

snippet c_escape "c_escape ( ), returns String"
	c_escape($1)$0

snippet c_unescape "c_unescape ( ), returns String"
	c_unescape($1)$0

snippet capitalize "capitalize ( ), returns String"
	capitalize($1)$0

snippet casecmp_to "casecmp_to ( String to ), returns int"
	casecmp_to(${1:String to})$0

# trigger conflict with other class(es)
snippet empty_String "empty ( ), returns bool"
	empty($1)$0

snippet ends_with "ends_with ( String text ), returns bool"
	ends_with(${1:String text})$0

# trigger conflict with other class(es)
snippet erase_String "erase ( int pos, int chars ), returns void"
	erase(${1:int pos}, ${2:int chars})$0

snippet extension "extension ( ), returns String"
	extension($1)$0

# trigger conflict with other class(es)
snippet find_String "find ( String what, int from=0 ), returns int"
	find(${1:String what}, ${2:int from=0})$0

# trigger conflict with other class(es)
snippet find_last_String "find_last ( String what ), returns int"
	find_last(${1:String what})$0

snippet findn "findn ( String what, int from=0 ), returns int"
	findn(${1:String what}, ${2:int from=0})$0

snippet get_base_dir "get_base_dir ( ), returns String"
	get_base_dir($1)$0

snippet get_file "get_file ( ), returns String"
	get_file($1)$0

# trigger conflict with other class(es)
snippet hash_String "hash ( ), returns int"
	hash($1)$0

snippet hex_to_int "hex_to_int ( ), returns int"
	hex_to_int($1)$0

# trigger conflict with other class(es)
snippet insert_String "insert ( int pos, String what ), returns String"
	insert(${1:int pos}, ${2:String what})$0

snippet is_abs_path "is_abs_path ( ), returns bool"
	is_abs_path($1)$0

snippet is_rel_path "is_rel_path ( ), returns bool"
	is_rel_path($1)$0

snippet is_subsequence_of "is_subsequence_of ( String text ), returns bool"
	is_subsequence_of(${1:String text})$0

snippet is_subsequence_ofi "is_subsequence_ofi ( String text ), returns bool"
	is_subsequence_ofi(${1:String text})$0

snippet is_valid_float "is_valid_float ( ), returns bool"
	is_valid_float($1)$0

snippet is_valid_html_color "is_valid_html_color ( ), returns bool"
	is_valid_html_color($1)$0

snippet is_valid_identifier "is_valid_identifier ( ), returns bool"
	is_valid_identifier($1)$0

snippet is_valid_integer "is_valid_integer ( ), returns bool"
	is_valid_integer($1)$0

snippet is_valid_ip_address "is_valid_ip_address ( ), returns bool"
	is_valid_ip_address($1)$0

snippet json_escape "json_escape ( ), returns String"
	json_escape($1)$0

snippet left "left ( int pos ), returns String"
	left(${1:int pos})$0

# trigger conflict with other class(es)
snippet length_String "length ( ), returns int"
	length($1)$0

snippet match "match ( String expr ), returns bool"
	match(${1:String expr})$0

snippet matchn "matchn ( String expr ), returns bool"
	matchn(${1:String expr})$0

snippet md5_buffer "md5_buffer ( ), returns RawArray"
	md5_buffer($1)$0

snippet md5_text "md5_text ( ), returns String"
	md5_text($1)$0

snippet nocasecmp_to "nocasecmp_to ( String to ), returns int"
	nocasecmp_to(${1:String to})$0

snippet ord_at "ord_at ( int at ), returns int"
	ord_at(${1:int at})$0

snippet pad_decimals "pad_decimals ( int digits ), returns String"
	pad_decimals(${1:int digits})$0

snippet pad_zeros "pad_zeros ( int digits ), returns String"
	pad_zeros(${1:int digits})$0

snippet percent_decode "percent_decode ( ), returns String"
	percent_decode($1)$0

snippet percent_encode "percent_encode ( ), returns String"
	percent_encode($1)$0

snippet plus_file "plus_file ( String file ), returns String"
	plus_file(${1:String file})$0

snippet replace "replace ( String what, String forwhat ), returns String"
	replace(${1:String what}, ${2:String forwhat})$0

snippet replacen "replacen ( String what, String forwhat ), returns String"
	replacen(${1:String what}, ${2:String forwhat})$0

# trigger conflict with other class(es)
snippet rfind_String "rfind ( String what, int from=-1 ), returns int"
	rfind(${1:String what}, ${2:int from=-1})$0

snippet rfindn "rfindn ( String what, int from=-1 ), returns int"
	rfindn(${1:String what}, ${2:int from=-1})$0

snippet right "right ( int pos ), returns String"
	right(${1:int pos})$0

snippet sha256_buffer "sha256_buffer ( ), returns RawArray"
	sha256_buffer($1)$0

snippet sha256_text "sha256_text ( ), returns String"
	sha256_text($1)$0

snippet similarity "similarity ( String text ), returns float"
	similarity(${1:String text})$0

snippet split "split ( String divisor, bool allow_empty=True ), returns StringArray"
	split(${1:String divisor}, ${2:bool allow_empty=True})$0

snippet split_floats "split_floats ( String divisor, bool allow_empty=True ), returns RealArray"
	split_floats(${1:String divisor}, ${2:bool allow_empty=True})$0

snippet strip_edges "strip_edges ( bool left=True, bool right=True ), returns String"
	strip_edges(${1:bool left=True}, ${2:bool right=True})$0

snippet substr "substr ( int from, int len ), returns String"
	substr(${1:int from}, ${2:int len})$0

snippet to_ascii "to_ascii ( ), returns RawArray"
	to_ascii($1)$0

snippet to_float "to_float ( ), returns float"
	to_float($1)$0

snippet to_int "to_int ( ), returns int"
	to_int($1)$0

snippet to_lower "to_lower ( ), returns String"
	to_lower($1)$0

snippet to_upper "to_upper ( ), returns String"
	to_upper($1)$0

snippet to_utf8 "to_utf8 ( ), returns RawArray"
	to_utf8($1)$0

snippet xml_escape "xml_escape ( ), returns String"
	xml_escape($1)$0

snippet xml_unescape "xml_unescape ( ), returns String"
	xml_unescape($1)$0


# Class: StringArray
snippet StringArray "StringArray ( Array from ), returns StringArray"
	StringArray(${1:Array from})$0

# trigger conflict with other class(es)
snippet append_StringArray "append ( String string ), returns void"
	append(${1:String string})$0

# trigger conflict with other class(es)
snippet append_array_StringArray "append_array ( StringArray array ), returns void"
	append_array(${1:StringArray array})$0

# trigger conflict with other class(es)
snippet insert_StringArray "insert ( int idx, String string ), returns int"
	insert(${1:int idx}, ${2:String string})$0

# trigger conflict with other class(es)
snippet invert_StringArray "invert ( ), returns void"
	invert($1)$0

# trigger conflict with other class(es)
snippet push_back_StringArray "push_back ( String string ), returns void"
	push_back(${1:String string})$0

# trigger conflict with other class(es)
snippet remove_StringArray "remove ( int idx ), returns void"
	remove(${1:int idx})$0

# trigger conflict with other class(es)
snippet resize_StringArray "resize ( int idx ), returns void"
	resize(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_StringArray "set ( int idx, String string ), returns void"
	set(${1:int idx}, ${2:String string})$0

# trigger conflict with other class(es)
snippet size_StringArray "size ( ), returns int"
	size($1)$0


# Class: StyleBox
# trigger conflict with other class(es)
snippet draw_StyleBox "draw ( RID canvas_item, Rect2 rect ) const, returns void"
	draw(${1:RID canvas_item}, ${2:Rect2 rect})$0

snippet get_center_size "get_center_size ( ) const, returns Vector2"
	get_center_size($1)$0

snippet get_default_margin "get_default_margin ( int margin ) const, returns float"
	get_default_margin(${1:int margin})$0

# trigger conflict with other class(es)
snippet get_margin_StyleBox "get_margin ( int margin ) const, returns float"
	get_margin(${1:int margin})$0

# trigger conflict with other class(es)
snippet get_minimum_size_StyleBox "get_minimum_size ( ) const, returns Vector2"
	get_minimum_size($1)$0

# trigger conflict with other class(es)
snippet get_offset_StyleBox "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

snippet set_default_margin "set_default_margin ( int margin, float offset ), returns void"
	set_default_margin(${1:int margin}, ${2:float offset})$0

snippet test_mask "test_mask ( Vector2 point, Rect2 rect ) const, returns bool"
	test_mask(${1:Vector2 point}, ${2:Rect2 rect})$0


# Class: StyleBoxFlat
snippet get_bg_color "get_bg_color ( ) const, returns Color"
	get_bg_color($1)$0

snippet get_border_blend "get_border_blend ( ) const, returns bool"
	get_border_blend($1)$0

snippet get_border_size "get_border_size ( ) const, returns int"
	get_border_size($1)$0

snippet get_dark_color "get_dark_color ( ) const, returns Color"
	get_dark_color($1)$0

# trigger conflict with other class(es)
snippet get_draw_center_StyleBoxFlat "get_draw_center ( ) const, returns bool"
	get_draw_center($1)$0

snippet get_light_color "get_light_color ( ) const, returns Color"
	get_light_color($1)$0

snippet set_bg_color "set_bg_color ( Color color ), returns void"
	set_bg_color(${1:Color color})$0

snippet set_border_blend "set_border_blend ( bool blend ), returns void"
	set_border_blend(${1:bool blend})$0

snippet set_border_size "set_border_size ( int size ), returns void"
	set_border_size(${1:int size})$0

snippet set_dark_color "set_dark_color ( Color color ), returns void"
	set_dark_color(${1:Color color})$0

# trigger conflict with other class(es)
snippet set_draw_center_StyleBoxFlat "set_draw_center ( bool size ), returns void"
	set_draw_center(${1:bool size})$0

snippet set_light_color "set_light_color ( Color color ), returns void"
	set_light_color(${1:Color color})$0


# Class: StyleBoxImageMask
snippet get_expand "get_expand ( ) const, returns bool"
	get_expand($1)$0

snippet get_expand_margin_size "get_expand_margin_size ( int margin ) const, returns float"
	get_expand_margin_size(${1:int margin})$0

snippet get_image "get_image ( ) const, returns Image"
	get_image($1)$0

snippet set_expand "set_expand ( bool expand ), returns void"
	set_expand(${1:bool expand})$0

snippet set_expand_margin_size "set_expand_margin_size ( int margin, float size ), returns void"
	set_expand_margin_size(${1:int margin}, ${2:float size})$0

snippet set_image "set_image ( Image image ), returns void"
	set_image(${1:Image image})$0


# Class: StyleBoxTexture
# trigger conflict with other class(es)
snippet get_draw_center_StyleBoxTexture "get_draw_center ( ) const, returns bool"
	get_draw_center($1)$0

# trigger conflict with other class(es)
snippet get_expand_margin_size_StyleBoxTexture "get_expand_margin_size ( int margin ) const, returns float"
	get_expand_margin_size(${1:int margin})$0

snippet get_margin_size "get_margin_size ( int margin ) const, returns float"
	get_margin_size(${1:int margin})$0

# trigger conflict with other class(es)
snippet get_region_rect_StyleBoxTexture "get_region_rect ( ) const, returns Rect2"
	get_region_rect($1)$0

# trigger conflict with other class(es)
snippet get_texture_StyleBoxTexture "get_texture ( ) const, returns Texture"
	get_texture($1)$0

# trigger conflict with other class(es)
snippet set_draw_center_StyleBoxTexture "set_draw_center ( bool enable ), returns void"
	set_draw_center(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_expand_margin_size_StyleBoxTexture "set_expand_margin_size ( int margin, float size ), returns void"
	set_expand_margin_size(${1:int margin}, ${2:float size})$0

snippet set_margin_size "set_margin_size ( int margin, float size ), returns void"
	set_margin_size(${1:int margin}, ${2:float size})$0

# trigger conflict with other class(es)
snippet set_region_rect_StyleBoxTexture "set_region_rect ( Rect2 region ), returns void"
	set_region_rect(${1:Rect2 region})$0

# trigger conflict with other class(es)
snippet set_texture_StyleBoxTexture "set_texture ( Texture texture ), returns void"
	set_texture(${1:Texture texture})$0


# Class: SurfaceTool
snippet add_bones "add_bones ( IntArray bones ), returns void"
	add_bones(${1:IntArray bones})$0

snippet add_color "add_color ( Color color ), returns void"
	add_color(${1:Color color})$0

snippet add_index "add_index ( int index ), returns void"
	add_index(${1:int index})$0

snippet add_normal "add_normal ( Vector3 normal ), returns void"
	add_normal(${1:Vector3 normal})$0

snippet add_smooth_group "add_smooth_group ( bool smooth ), returns void"
	add_smooth_group(${1:bool smooth})$0

snippet add_tangent "add_tangent ( Plane tangent ), returns void"
	add_tangent(${1:Plane tangent})$0

snippet add_triangle_fan "add_triangle_fan ( Vector3Array vertexes, Vector2Array uvs=Vector2Array([]), ColorArray colors=ColorArray([ColorArray]), Vector2Array uv2s=Vector2Array([]), Vector3Array normals=Vector3Array([]), Array tangents=Array() ), returns void"
	add_triangle_fan(${1:Vector3Array vertexes}, ${2:Vector2Array uvs=Vector2Array([])}, ${3:ColorArray colors=ColorArray([ColorArray])}, ${4:Vector2Array uv2s=Vector2Array([])}, ${5:Vector3Array normals=Vector3Array([])}, ${6:Array tangents=Array()})$0

snippet add_uv "add_uv ( Vector2 uv ), returns void"
	add_uv(${1:Vector2 uv})$0

snippet add_uv2 "add_uv2 ( Vector2 uv2 ), returns void"
	add_uv2(${1:Vector2 uv2})$0

# trigger conflict with other class(es)
snippet add_vertex_SurfaceTool "add_vertex ( Vector3 vertex ), returns void"
	add_vertex(${1:Vector3 vertex})$0

snippet add_weights "add_weights ( RealArray weights ), returns void"
	add_weights(${1:RealArray weights})$0

# trigger conflict with other class(es)
snippet begin_SurfaceTool "begin ( int primitive ), returns void"
	begin(${1:int primitive})$0

# trigger conflict with other class(es)
snippet clear_SurfaceTool "clear ( ), returns void"
	clear($1)$0

snippet commit "commit ( Mesh existing=NULL ), returns Mesh"
	commit(${1:Mesh existing=NULL})$0

snippet deindex "deindex ( ), returns void"
	deindex($1)$0

snippet generate_normals "generate_normals ( ), returns void"
	generate_normals($1)$0

snippet index "index ( ), returns void"
	index($1)$0

# trigger conflict with other class(es)
snippet set_material_SurfaceTool "set_material ( Material material ), returns void"
	set_material(${1:Material material})$0


# Class: TabContainer
snippet are_tabs_visible "are_tabs_visible ( ) const, returns bool"
	are_tabs_visible($1)$0

snippet get_current_tab "get_current_tab ( ) const, returns int"
	get_current_tab($1)$0

snippet get_current_tab_control "get_current_tab_control ( ) const, returns Control"
	get_current_tab_control($1)$0

# trigger conflict with other class(es)
snippet get_popup_TabContainer "get_popup ( ) const, returns Popup"
	get_popup($1)$0

snippet get_tab_align "get_tab_align ( ) const, returns int"
	get_tab_align($1)$0

snippet get_tab_control "get_tab_control ( int idx ) const, returns Control"
	get_tab_control(${1:int idx})$0

snippet get_tab_count "get_tab_count ( ) const, returns int"
	get_tab_count($1)$0

snippet get_tab_icon "get_tab_icon ( int tab_idx ) const, returns Texture"
	get_tab_icon(${1:int tab_idx})$0

snippet get_tab_title "get_tab_title ( int tab_idx ) const, returns String"
	get_tab_title(${1:int tab_idx})$0

snippet set_current_tab "set_current_tab ( int tab_idx ), returns void"
	set_current_tab(${1:int tab_idx})$0

snippet set_popup "set_popup ( Popup popup ), returns void"
	set_popup(${1:Popup popup})$0

snippet set_tab_align "set_tab_align ( int align ), returns void"
	set_tab_align(${1:int align})$0

snippet set_tab_icon "set_tab_icon ( int tab_idx, Texture icon ), returns void"
	set_tab_icon(${1:int tab_idx}, ${2:Texture icon})$0

snippet set_tab_title "set_tab_title ( int tab_idx, String title ), returns void"
	set_tab_title(${1:int tab_idx}, ${2:String title})$0

snippet set_tabs_visible "set_tabs_visible ( bool visible ), returns void"
	set_tabs_visible(${1:bool visible})$0


# Class: Tabs
snippet add_tab "add_tab ( String title, Texture icon ), returns void"
	add_tab(${1:String title}, ${2:Texture icon})$0

snippet ensure_tab_visible "ensure_tab_visible ( int idx ), returns void"
	ensure_tab_visible(${1:int idx})$0

# trigger conflict with other class(es)
snippet get_current_tab_Tabs "get_current_tab ( ) const, returns int"
	get_current_tab($1)$0

# trigger conflict with other class(es)
snippet get_tab_align_Tabs "get_tab_align ( ) const, returns int"
	get_tab_align($1)$0

# trigger conflict with other class(es)
snippet get_tab_count_Tabs "get_tab_count ( ) const, returns int"
	get_tab_count($1)$0

# trigger conflict with other class(es)
snippet get_tab_icon_Tabs "get_tab_icon ( int tab_idx ) const, returns Texture"
	get_tab_icon(${1:int tab_idx})$0

# trigger conflict with other class(es)
snippet get_tab_title_Tabs "get_tab_title ( int tab_idx ) const, returns String"
	get_tab_title(${1:int tab_idx})$0

snippet remove_tab "remove_tab ( int tab_idx ), returns void"
	remove_tab(${1:int tab_idx})$0

# trigger conflict with other class(es)
snippet set_current_tab_Tabs "set_current_tab ( int tab_idx ), returns void"
	set_current_tab(${1:int tab_idx})$0

# trigger conflict with other class(es)
snippet set_tab_align_Tabs "set_tab_align ( int align ), returns void"
	set_tab_align(${1:int align})$0

# trigger conflict with other class(es)
snippet set_tab_icon_Tabs "set_tab_icon ( int tab_idx, Texture icon ), returns void"
	set_tab_icon(${1:int tab_idx}, ${2:Texture icon})$0

# trigger conflict with other class(es)
snippet set_tab_title_Tabs "set_tab_title ( int tab_idx, String title ), returns void"
	set_tab_title(${1:int tab_idx}, ${2:String title})$0


# Class: TCP_Server
snippet is_connection_available "is_connection_available ( ) const, returns bool"
	is_connection_available($1)$0

# trigger conflict with other class(es)
snippet listen_TCP_Server "listen ( int port, StringArray accepted_hosts=StringArray([]) ), returns int"
	listen(${1:int port}, ${2:StringArray accepted_hosts=StringArray([])})$0

# trigger conflict with other class(es)
snippet stop_TCP_Server "stop ( ), returns void"
	stop($1)$0

snippet take_connection "take_connection ( ), returns Object"
	take_connection($1)$0


# Class: TextEdit
snippet add_color_region "add_color_region ( String begin_key, String end_key, Color color, bool line_only=false ), returns void"
	add_color_region(${1:String begin_key}, ${2:String end_key}, ${3:Color color}, ${4:bool line_only=false})$0

snippet add_keyword_color "add_keyword_color ( String keyword, Color color ), returns void"
	add_keyword_color(${1:String keyword}, ${2:Color color})$0

snippet clear_colors "clear_colors ( ), returns void"
	clear_colors($1)$0

snippet clear_undo_history "clear_undo_history ( ), returns void"
	clear_undo_history($1)$0

# trigger conflict with other class(es)
snippet copy_TextEdit "copy ( ), returns void"
	copy($1)$0

# trigger conflict with other class(es)
snippet cursor_get_blink_enabled_TextEdit "cursor_get_blink_enabled ( ) const, returns bool"
	cursor_get_blink_enabled($1)$0

# trigger conflict with other class(es)
snippet cursor_get_blink_speed_TextEdit "cursor_get_blink_speed ( ) const, returns float"
	cursor_get_blink_speed($1)$0

snippet cursor_get_column "cursor_get_column ( ) const, returns int"
	cursor_get_column($1)$0

snippet cursor_get_line "cursor_get_line ( ) const, returns int"
	cursor_get_line($1)$0

snippet cursor_is_block_mode "cursor_is_block_mode ( ) const, returns bool"
	cursor_is_block_mode($1)$0

# trigger conflict with other class(es)
snippet cursor_set_blink_enabled_TextEdit "cursor_set_blink_enabled ( bool enable ), returns void"
	cursor_set_blink_enabled(${1:bool enable})$0

# trigger conflict with other class(es)
snippet cursor_set_blink_speed_TextEdit "cursor_set_blink_speed ( float blink_speed ), returns void"
	cursor_set_blink_speed(${1:float blink_speed})$0

snippet cursor_set_block_mode "cursor_set_block_mode ( bool enable ), returns void"
	cursor_set_block_mode(${1:bool enable})$0

snippet cursor_set_column "cursor_set_column ( int column, bool adjust_viewport=false ), returns void"
	cursor_set_column(${1:int column}, ${2:bool adjust_viewport=false})$0

snippet cursor_set_line "cursor_set_line ( int line, bool adjust_viewport=false ), returns void"
	cursor_set_line(${1:int line}, ${2:bool adjust_viewport=false})$0

snippet cut "cut ( ), returns void"
	cut($1)$0

# trigger conflict with other class(es)
snippet get_line_TextEdit "get_line ( int line ) const, returns String"
	get_line(${1:int line})$0

# trigger conflict with other class(es)
snippet get_line_count_TextEdit "get_line_count ( ) const, returns int"
	get_line_count($1)$0

# trigger conflict with other class(es)
snippet get_menu_TextEdit "get_menu ( ) const, returns PopupMenu"
	get_menu($1)$0

snippet get_selection_from_column "get_selection_from_column ( ) const, returns int"
	get_selection_from_column($1)$0

snippet get_selection_from_line "get_selection_from_line ( ) const, returns int"
	get_selection_from_line($1)$0

snippet get_selection_text "get_selection_text ( ) const, returns String"
	get_selection_text($1)$0

snippet get_selection_to_column "get_selection_to_column ( ) const, returns int"
	get_selection_to_column($1)$0

snippet get_selection_to_line "get_selection_to_line ( ) const, returns int"
	get_selection_to_line($1)$0

# trigger conflict with other class(es)
snippet get_text_TextEdit "get_text ( ), returns String"
	get_text($1)$0

snippet get_word_under_cursor "get_word_under_cursor ( ) const, returns String"
	get_word_under_cursor($1)$0

snippet insert_text_at_cursor "insert_text_at_cursor ( String text ), returns void"
	insert_text_at_cursor(${1:String text})$0

snippet is_highlight_all_occurrences_enabled "is_highlight_all_occurrences_enabled ( ) const, returns bool"
	is_highlight_all_occurrences_enabled($1)$0

snippet is_selection_active "is_selection_active ( ) const, returns bool"
	is_selection_active($1)$0

snippet is_show_line_numbers_enabled "is_show_line_numbers_enabled ( ) const, returns bool"
	is_show_line_numbers_enabled($1)$0

snippet is_syntax_coloring_enabled "is_syntax_coloring_enabled ( ) const, returns bool"
	is_syntax_coloring_enabled($1)$0

# trigger conflict with other class(es)
snippet menu_option_TextEdit "menu_option ( int arg0 ), returns void"
	menu_option(${1:int arg0})$0

snippet paste "paste ( ), returns void"
	paste($1)$0

snippet redo "redo ( ), returns void"
	redo($1)$0

snippet search "search ( String flags, int from_line, int from_column, int to_line ) const, returns IntArray"
	search(${1:String flags}, ${2:int from_line}, ${3:int from_column}, ${4:int to_line})$0

# trigger conflict with other class(es)
snippet select_TextEdit "select ( int from_line, int from_column, int to_line, int to_column ), returns void"
	select(${1:int from_line}, ${2:int from_column}, ${3:int to_line}, ${4:int to_column})$0

# trigger conflict with other class(es)
snippet select_all_TextEdit "select_all ( ), returns void"
	select_all($1)$0

snippet set_custom_bg_color "set_custom_bg_color ( Color color ), returns void"
	set_custom_bg_color(${1:Color color})$0

snippet set_highlight_all_occurrences "set_highlight_all_occurrences ( bool enable ), returns void"
	set_highlight_all_occurrences(${1:bool enable})$0

snippet set_max_chars "set_max_chars ( int amount ), returns void"
	set_max_chars(${1:int amount})$0

snippet set_readonly "set_readonly ( bool enable ), returns void"
	set_readonly(${1:bool enable})$0

snippet set_show_line_numbers "set_show_line_numbers ( bool enable ), returns void"
	set_show_line_numbers(${1:bool enable})$0

snippet set_symbol_color "set_symbol_color ( Color color ), returns void"
	set_symbol_color(${1:Color color})$0

snippet set_syntax_coloring "set_syntax_coloring ( bool enable ), returns void"
	set_syntax_coloring(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_text_TextEdit "set_text ( String text ), returns void"
	set_text(${1:String text})$0

snippet set_wrap "set_wrap ( bool enable ), returns void"
	set_wrap(${1:bool enable})$0

snippet undo "undo ( ), returns void"
	undo($1)$0


# Class: Texture
# trigger conflict with other class(es)
snippet draw_Texture "draw ( RID canvas_item, Vector2 pos, Color modulate=Color(1,1,1,1), bool transpose=false ) const, returns void"
	draw(${1:RID canvas_item}, ${2:Vector2 pos}, ${3:Color modulate=Color(1},1,1,1), ${4:bool transpose=false})$0

# trigger conflict with other class(es)
snippet draw_rect_Texture "draw_rect ( RID canvas_item, Rect2 rect, bool tile, Color modulate=Color(1,1,1,1), bool transpose=false ) const, returns void"
	draw_rect(${1:RID canvas_item}, ${2:Rect2 rect}, ${3:bool tile}, ${4:Color modulate=Color(1},1,1,1), ${5:bool transpose=false})$0

snippet draw_rect_region "draw_rect_region ( RID canvas_item, Rect2 rect, Rect2 src_rect, Color modulate=Color(1,1,1,1), bool transpose=false ) const, returns void"
	draw_rect_region(${1:RID canvas_item}, ${2:Rect2 rect}, ${3:Rect2 src_rect}, ${4:Color modulate=Color(1},1,1,1), ${5:bool transpose=false})$0

# trigger conflict with other class(es)
snippet get_flags_Texture "get_flags ( ) const, returns int"
	get_flags($1)$0

# trigger conflict with other class(es)
snippet get_height_Texture "get_height ( ) const, returns int"
	get_height($1)$0

# trigger conflict with other class(es)
snippet get_rid_Texture "get_rid ( ) const, returns RID"
	get_rid($1)$0

# trigger conflict with other class(es)
snippet get_size_Texture "get_size ( ) const, returns Vector2"
	get_size($1)$0

# trigger conflict with other class(es)
snippet get_width_Texture "get_width ( ) const, returns int"
	get_width($1)$0

snippet has_alpha "has_alpha ( ) const, returns bool"
	has_alpha($1)$0

# trigger conflict with other class(es)
snippet set_flags_Texture "set_flags ( int flags ), returns void"
	set_flags(${1:int flags})$0


# Class: TextureButton
snippet get_click_mask "get_click_mask ( ) const, returns BitMap"
	get_click_mask($1)$0

snippet get_disabled_texture "get_disabled_texture ( ) const, returns Texture"
	get_disabled_texture($1)$0

snippet get_focused_texture "get_focused_texture ( ) const, returns Texture"
	get_focused_texture($1)$0

snippet get_hover_texture "get_hover_texture ( ) const, returns Texture"
	get_hover_texture($1)$0

# trigger conflict with other class(es)
snippet get_modulate_TextureButton "get_modulate ( ) const, returns Color"
	get_modulate($1)$0

snippet get_normal_texture "get_normal_texture ( ) const, returns Texture"
	get_normal_texture($1)$0

snippet get_pressed_texture "get_pressed_texture ( ) const, returns Texture"
	get_pressed_texture($1)$0

# trigger conflict with other class(es)
snippet get_texture_scale_TextureButton "get_texture_scale ( ) const, returns Vector2"
	get_texture_scale($1)$0

snippet set_click_mask "set_click_mask ( BitMap mask ), returns void"
	set_click_mask(${1:BitMap mask})$0

snippet set_disabled_texture "set_disabled_texture ( Texture texture ), returns void"
	set_disabled_texture(${1:Texture texture})$0

snippet set_focused_texture "set_focused_texture ( Texture texture ), returns void"
	set_focused_texture(${1:Texture texture})$0

snippet set_hover_texture "set_hover_texture ( Texture texture ), returns void"
	set_hover_texture(${1:Texture texture})$0

# trigger conflict with other class(es)
snippet set_modulate_TextureButton "set_modulate ( Color color ), returns void"
	set_modulate(${1:Color color})$0

snippet set_normal_texture "set_normal_texture ( Texture texture ), returns void"
	set_normal_texture(${1:Texture texture})$0

snippet set_pressed_texture "set_pressed_texture ( Texture texture ), returns void"
	set_pressed_texture(${1:Texture texture})$0

# trigger conflict with other class(es)
snippet set_texture_scale_TextureButton "set_texture_scale ( Vector2 scale ), returns void"
	set_texture_scale(${1:Vector2 scale})$0


# Class: TextureFrame
# trigger conflict with other class(es)
snippet get_modulate_TextureFrame "get_modulate ( ) const, returns Color"
	get_modulate($1)$0

snippet get_stretch_mode "get_stretch_mode ( ) const, returns int"
	get_stretch_mode($1)$0

# trigger conflict with other class(es)
snippet get_texture_TextureFrame "get_texture ( ) const, returns Object"
	get_texture($1)$0

snippet has_expand "has_expand ( ) const, returns bool"
	has_expand($1)$0

# trigger conflict with other class(es)
snippet set_expand_TextureFrame "set_expand ( bool enable ), returns void"
	set_expand(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_modulate_TextureFrame "set_modulate ( Color modulate ), returns void"
	set_modulate(${1:Color modulate})$0

snippet set_stretch_mode "set_stretch_mode ( int stretch_mode ), returns void"
	set_stretch_mode(${1:int stretch_mode})$0

# trigger conflict with other class(es)
snippet set_texture_TextureFrame "set_texture ( Object texture ), returns void"
	set_texture(${1:Object texture})$0


# Class: TextureProgress
snippet get_fill_degrees "get_fill_degrees ( ), returns float"
	get_fill_degrees($1)$0

snippet get_fill_mode "get_fill_mode ( ), returns int"
	get_fill_mode($1)$0

snippet get_over_texture "get_over_texture ( ) const, returns Object"
	get_over_texture($1)$0

snippet get_progress_texture "get_progress_texture ( ) const, returns Object"
	get_progress_texture($1)$0

snippet get_radial_center_offset "get_radial_center_offset ( ), returns Vector2"
	get_radial_center_offset($1)$0

snippet get_radial_initial_angle "get_radial_initial_angle ( ), returns float"
	get_radial_initial_angle($1)$0

snippet get_under_texture "get_under_texture ( ) const, returns Object"
	get_under_texture($1)$0

snippet set_fill_degrees "set_fill_degrees ( float mode ), returns void"
	set_fill_degrees(${1:float mode})$0

snippet set_fill_mode "set_fill_mode ( int mode ), returns void"
	set_fill_mode(${1:int mode})$0

snippet set_over_texture "set_over_texture ( Object tex ), returns void"
	set_over_texture(${1:Object tex})$0

snippet set_progress_texture "set_progress_texture ( Object tex ), returns void"
	set_progress_texture(${1:Object tex})$0

snippet set_radial_center_offset "set_radial_center_offset ( Vector2 mode ), returns void"
	set_radial_center_offset(${1:Vector2 mode})$0

snippet set_radial_initial_angle "set_radial_initial_angle ( float mode ), returns void"
	set_radial_initial_angle(${1:float mode})$0

snippet set_under_texture "set_under_texture ( Object tex ), returns void"
	set_under_texture(${1:Object tex})$0


# Class: Theme
snippet clear_color "clear_color ( String name, String type ), returns void"
	clear_color(${1:String name}, ${2:String type})$0

snippet clear_constant "clear_constant ( String name, String type ), returns void"
	clear_constant(${1:String name}, ${2:String type})$0

snippet clear_font "clear_font ( String name, String type ), returns void"
	clear_font(${1:String name}, ${2:String type})$0

snippet clear_icon "clear_icon ( String name, String type ), returns void"
	clear_icon(${1:String name}, ${2:String type})$0

snippet clear_stylebox "clear_stylebox ( String name, String type ), returns void"
	clear_stylebox(${1:String name}, ${2:String type})$0

snippet copy_default_theme "copy_default_theme ( ), returns void"
	copy_default_theme($1)$0

# trigger conflict with other class(es)
snippet get_color_Theme "get_color ( String name, String type ) const, returns Color"
	get_color(${1:String name}, ${2:String type})$0

snippet get_color_list "get_color_list ( String type ) const, returns StringArray"
	get_color_list(${1:String type})$0

# trigger conflict with other class(es)
snippet get_constant_Theme "get_constant ( String name, String type ) const, returns int"
	get_constant(${1:String name}, ${2:String type})$0

snippet get_constant_list "get_constant_list ( String type ) const, returns StringArray"
	get_constant_list(${1:String type})$0

snippet get_default_font "get_default_font ( ) const, returns Object"
	get_default_font($1)$0

# trigger conflict with other class(es)
snippet get_font_Theme "get_font ( String name, String type ) const, returns Font"
	get_font(${1:String name}, ${2:String type})$0

snippet get_font_list "get_font_list ( String type ) const, returns StringArray"
	get_font_list(${1:String type})$0

# trigger conflict with other class(es)
snippet get_icon_Theme "get_icon ( String name, String type ) const, returns Texture"
	get_icon(${1:String name}, ${2:String type})$0

snippet get_icon_list "get_icon_list ( String type ) const, returns StringArray"
	get_icon_list(${1:String type})$0

# trigger conflict with other class(es)
snippet get_stylebox_Theme "get_stylebox ( String name, String type ) const, returns StyleBox"
	get_stylebox(${1:String name}, ${2:String type})$0

snippet get_stylebox_list "get_stylebox_list ( String type ) const, returns StringArray"
	get_stylebox_list(${1:String type})$0

snippet get_stylebox_types "get_stylebox_types ( ) const, returns StringArray"
	get_stylebox_types($1)$0

snippet get_type_list "get_type_list ( String type ) const, returns StringArray"
	get_type_list(${1:String type})$0

# trigger conflict with other class(es)
snippet has_color_Theme "has_color ( String name, String type ) const, returns bool"
	has_color(${1:String name}, ${2:String type})$0

# trigger conflict with other class(es)
snippet has_constant_Theme "has_constant ( String name, String type ) const, returns bool"
	has_constant(${1:String name}, ${2:String type})$0

# trigger conflict with other class(es)
snippet has_font_Theme "has_font ( String name, String type ) const, returns bool"
	has_font(${1:String name}, ${2:String type})$0

# trigger conflict with other class(es)
snippet has_icon_Theme "has_icon ( String name, String type ) const, returns bool"
	has_icon(${1:String name}, ${2:String type})$0

# trigger conflict with other class(es)
snippet has_stylebox_Theme "has_stylebox ( String name, String type ) const, returns bool"
	has_stylebox(${1:String name}, ${2:String type})$0

# trigger conflict with other class(es)
snippet set_color_Theme "set_color ( String name, String type, Color color ), returns void"
	set_color(${1:String name}, ${2:String type}, ${3:Color color})$0

snippet set_constant "set_constant ( String name, String type, int constant ), returns void"
	set_constant(${1:String name}, ${2:String type}, ${3:int constant})$0

snippet set_default_font "set_default_font ( Object font ), returns void"
	set_default_font(${1:Object font})$0

snippet set_font "set_font ( String name, String type, Font font ), returns void"
	set_font(${1:String name}, ${2:String type}, ${3:Font font})$0

# trigger conflict with other class(es)
snippet set_icon_Theme "set_icon ( String name, String type, Texture texture ), returns void"
	set_icon(${1:String name}, ${2:String type}, ${3:Texture texture})$0

snippet set_stylebox "set_stylebox ( String name, String type, StyleBox texture ), returns void"
	set_stylebox(${1:String name}, ${2:String type}, ${3:StyleBox texture})$0


# Class: Thread
# trigger conflict with other class(es)
snippet get_id_Thread "get_id ( ) const, returns String"
	get_id($1)$0

# trigger conflict with other class(es)
snippet is_active_Thread "is_active ( ) const, returns bool"
	is_active($1)$0

snippet start "start ( Object instance, String method, Variant userdata=NULL, int priority=1 ), returns Error"
	start(${1:Object instance}, ${2:String method}, ${3:Variant userdata=NULL}, ${4:int priority=1})$0

snippet wait_to_finish "wait_to_finish ( ), returns Variant"
	wait_to_finish($1)$0


# Class: TileMap
# trigger conflict with other class(es)
snippet clear_TileMap "clear ( ), returns void"
	clear($1)$0

snippet get_cell "get_cell ( int x, int y ) const, returns int"
	get_cell(${1:int x}, ${2:int y})$0

# trigger conflict with other class(es)
snippet get_cell_size_TileMap "get_cell_size ( ) const, returns Vector2"
	get_cell_size($1)$0

snippet get_cellv "get_cellv ( Vector2 pos ) const, returns int"
	get_cellv(${1:Vector2 pos})$0

# trigger conflict with other class(es)
snippet get_center_x_TileMap "get_center_x ( ) const, returns bool"
	get_center_x($1)$0

# trigger conflict with other class(es)
snippet get_center_y_TileMap "get_center_y ( ) const, returns bool"
	get_center_y($1)$0

snippet get_collision_bounce "get_collision_bounce ( ) const, returns float"
	get_collision_bounce($1)$0

snippet get_collision_friction "get_collision_friction ( ) const, returns float"
	get_collision_friction($1)$0

snippet get_collision_layer "get_collision_layer ( ) const, returns int"
	get_collision_layer($1)$0

# trigger conflict with other class(es)
snippet get_collision_mask_TileMap "get_collision_mask ( ) const, returns int"
	get_collision_mask($1)$0

snippet get_collision_use_kinematic "get_collision_use_kinematic ( ) const, returns bool"
	get_collision_use_kinematic($1)$0

snippet get_custom_transform "get_custom_transform ( ) const, returns Matrix32"
	get_custom_transform($1)$0

snippet get_half_offset "get_half_offset ( ) const, returns int"
	get_half_offset($1)$0

# trigger conflict with other class(es)
snippet get_mode_TileMap "get_mode ( ) const, returns int"
	get_mode($1)$0

# trigger conflict with other class(es)
snippet get_occluder_light_mask_TileMap "get_occluder_light_mask ( ) const, returns int"
	get_occluder_light_mask($1)$0

snippet get_quadrant_size "get_quadrant_size ( ) const, returns int"
	get_quadrant_size($1)$0

snippet get_tile_origin "get_tile_origin ( ) const, returns int"
	get_tile_origin($1)$0

snippet get_tileset "get_tileset ( ) const, returns TileSet"
	get_tileset($1)$0

snippet get_used_cells "get_used_cells ( ) const, returns Array"
	get_used_cells($1)$0

snippet is_cell_transposed "is_cell_transposed ( int x, int y ) const, returns bool"
	is_cell_transposed(${1:int x}, ${2:int y})$0

snippet is_cell_x_flipped "is_cell_x_flipped ( int x, int y ) const, returns bool"
	is_cell_x_flipped(${1:int x}, ${2:int y})$0

snippet is_cell_y_flipped "is_cell_y_flipped ( int x, int y ) const, returns bool"
	is_cell_y_flipped(${1:int x}, ${2:int y})$0

snippet is_y_sort_mode_enabled "is_y_sort_mode_enabled ( ) const, returns bool"
	is_y_sort_mode_enabled($1)$0

snippet map_to_world "map_to_world ( Vector2 mappos, bool ignore_half_ofs=false ) const, returns Vector2"
	map_to_world(${1:Vector2 mappos}, ${2:bool ignore_half_ofs=false})$0

snippet set_cell "set_cell ( int x, int y, int tile, bool flip_x=false, bool flip_y=false, bool transpose=false ), returns void"
	set_cell(${1:int x}, ${2:int y}, ${3:int tile}, ${4:bool flip_x=false}, ${5:bool flip_y=false}, ${6:bool transpose=false})$0

# trigger conflict with other class(es)
snippet set_cell_size_TileMap "set_cell_size ( Vector2 size ), returns void"
	set_cell_size(${1:Vector2 size})$0

snippet set_cellv "set_cellv ( Vector2 pos, int tile, bool flip_x=false, bool flip_y=false, bool transpose=false ), returns void"
	set_cellv(${1:Vector2 pos}, ${2:int tile}, ${3:bool flip_x=false}, ${4:bool flip_y=false}, ${5:bool transpose=false})$0

# trigger conflict with other class(es)
snippet set_center_x_TileMap "set_center_x ( bool enable ), returns void"
	set_center_x(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_center_y_TileMap "set_center_y ( bool enable ), returns void"
	set_center_y(${1:bool enable})$0

snippet set_collision_bounce "set_collision_bounce ( float value ), returns void"
	set_collision_bounce(${1:float value})$0

snippet set_collision_friction "set_collision_friction ( float value ), returns void"
	set_collision_friction(${1:float value})$0

snippet set_collision_layer "set_collision_layer ( int mask ), returns void"
	set_collision_layer(${1:int mask})$0

# trigger conflict with other class(es)
snippet set_collision_mask_TileMap "set_collision_mask ( int mask ), returns void"
	set_collision_mask(${1:int mask})$0

snippet set_collision_use_kinematic "set_collision_use_kinematic ( bool use_kinematic ), returns void"
	set_collision_use_kinematic(${1:bool use_kinematic})$0

snippet set_custom_transform "set_custom_transform ( Matrix32 custom_transform ), returns void"
	set_custom_transform(${1:Matrix32 custom_transform})$0

snippet set_half_offset "set_half_offset ( int half_offset ), returns void"
	set_half_offset(${1:int half_offset})$0

# trigger conflict with other class(es)
snippet set_mode_TileMap "set_mode ( int mode ), returns void"
	set_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet set_occluder_light_mask_TileMap "set_occluder_light_mask ( int mask ), returns void"
	set_occluder_light_mask(${1:int mask})$0

snippet set_quadrant_size "set_quadrant_size ( int size ), returns void"
	set_quadrant_size(${1:int size})$0

snippet set_tile_origin "set_tile_origin ( int origin ), returns void"
	set_tile_origin(${1:int origin})$0

snippet set_tileset "set_tileset ( TileSet tileset ), returns void"
	set_tileset(${1:TileSet tileset})$0

snippet set_y_sort_mode "set_y_sort_mode ( bool enable ), returns void"
	set_y_sort_mode(${1:bool enable})$0

snippet world_to_map "world_to_map ( Vector2 worldpos ) const, returns Vector2"
	world_to_map(${1:Vector2 worldpos})$0


# Class: TileSet
# trigger conflict with other class(es)
snippet clear_TileSet "clear ( ), returns void"
	clear($1)$0

snippet create_tile "create_tile ( int id ), returns void"
	create_tile(${1:int id})$0

snippet find_tile_by_name "find_tile_by_name ( String name ) const, returns int"
	find_tile_by_name(${1:String name})$0

snippet get_last_unused_tile_id "get_last_unused_tile_id ( ) const, returns int"
	get_last_unused_tile_id($1)$0

snippet get_tiles_ids "get_tiles_ids ( ) const, returns Array"
	get_tiles_ids($1)$0

snippet remove_tile "remove_tile ( int id ), returns void"
	remove_tile(${1:int id})$0

snippet tile_get_light_occluder "tile_get_light_occluder ( int id ) const, returns OccluderPolygon2D"
	tile_get_light_occluder(${1:int id})$0

snippet tile_get_material "tile_get_material ( int id ) const, returns CanvasItemMaterial"
	tile_get_material(${1:int id})$0

snippet tile_get_name "tile_get_name ( int id ) const, returns String"
	tile_get_name(${1:int id})$0

snippet tile_get_navigation_polygon "tile_get_navigation_polygon ( int id ) const, returns NavigationPolygon"
	tile_get_navigation_polygon(${1:int id})$0

snippet tile_get_navigation_polygon_offset "tile_get_navigation_polygon_offset ( int id ) const, returns Vector2"
	tile_get_navigation_polygon_offset(${1:int id})$0

snippet tile_get_occluder_offset "tile_get_occluder_offset ( int id ) const, returns Vector2"
	tile_get_occluder_offset(${1:int id})$0

snippet tile_get_region "tile_get_region ( int id ) const, returns Rect2"
	tile_get_region(${1:int id})$0

snippet tile_get_shape "tile_get_shape ( int id ) const, returns Shape2D"
	tile_get_shape(${1:int id})$0

snippet tile_get_shape_offset "tile_get_shape_offset ( int id ) const, returns Vector2"
	tile_get_shape_offset(${1:int id})$0

snippet tile_get_shapes "tile_get_shapes ( int id ) const, returns Array"
	tile_get_shapes(${1:int id})$0

snippet tile_get_texture "tile_get_texture ( int id ) const, returns Texture"
	tile_get_texture(${1:int id})$0

snippet tile_get_texture_offset "tile_get_texture_offset ( int id ) const, returns Vector2"
	tile_get_texture_offset(${1:int id})$0

snippet tile_set_light_occluder "tile_set_light_occluder ( int id, OccluderPolygon2D light_occluder ), returns void"
	tile_set_light_occluder(${1:int id}, ${2:OccluderPolygon2D light_occluder})$0

snippet tile_set_material "tile_set_material ( int id, CanvasItemMaterial material ), returns void"
	tile_set_material(${1:int id}, ${2:CanvasItemMaterial material})$0

snippet tile_set_name "tile_set_name ( int id, String name ), returns void"
	tile_set_name(${1:int id}, ${2:String name})$0

snippet tile_set_navigation_polygon "tile_set_navigation_polygon ( int id, NavigationPolygon navigation_polygon ), returns void"
	tile_set_navigation_polygon(${1:int id}, ${2:NavigationPolygon navigation_polygon})$0

snippet tile_set_navigation_polygon_offset "tile_set_navigation_polygon_offset ( int id, Vector2 navigation_polygon_offset ), returns void"
	tile_set_navigation_polygon_offset(${1:int id}, ${2:Vector2 navigation_polygon_offset})$0

snippet tile_set_occluder_offset "tile_set_occluder_offset ( int id, Vector2 occluder_offset ), returns void"
	tile_set_occluder_offset(${1:int id}, ${2:Vector2 occluder_offset})$0

snippet tile_set_region "tile_set_region ( int id, Rect2 region ), returns void"
	tile_set_region(${1:int id}, ${2:Rect2 region})$0

snippet tile_set_shape "tile_set_shape ( int id, Shape2D shape ), returns void"
	tile_set_shape(${1:int id}, ${2:Shape2D shape})$0

snippet tile_set_shape_offset "tile_set_shape_offset ( int id, Vector2 shape_offset ), returns void"
	tile_set_shape_offset(${1:int id}, ${2:Vector2 shape_offset})$0

snippet tile_set_shapes "tile_set_shapes ( int id, Array shapes ), returns void"
	tile_set_shapes(${1:int id}, ${2:Array shapes})$0

snippet tile_set_texture "tile_set_texture ( int id, Texture texture ), returns void"
	tile_set_texture(${1:int id}, ${2:Texture texture})$0

snippet tile_set_texture_offset "tile_set_texture_offset ( int id, Vector2 texture_offset ), returns void"
	tile_set_texture_offset(${1:int id}, ${2:Vector2 texture_offset})$0


# Class: Timer
snippet get_time_left "get_time_left ( ) const, returns float"
	get_time_left($1)$0

snippet get_timer_process_mode "get_timer_process_mode ( ) const, returns int"
	get_timer_process_mode($1)$0

snippet get_wait_time "get_wait_time ( ) const, returns float"
	get_wait_time($1)$0

snippet has_autostart "has_autostart ( ) const, returns bool"
	has_autostart($1)$0

# trigger conflict with other class(es)
snippet is_active_Timer "is_active ( ) const, returns bool"
	is_active($1)$0

snippet is_one_shot "is_one_shot ( ) const, returns bool"
	is_one_shot($1)$0

# trigger conflict with other class(es)
snippet set_active_Timer "set_active ( bool active ), returns void"
	set_active(${1:bool active})$0

snippet set_autostart "set_autostart ( bool enable ), returns void"
	set_autostart(${1:bool enable})$0

snippet set_one_shot "set_one_shot ( bool enable ), returns void"
	set_one_shot(${1:bool enable})$0

snippet set_timer_process_mode "set_timer_process_mode ( int mode ), returns void"
	set_timer_process_mode(${1:int mode})$0

snippet set_wait_time "set_wait_time ( float time_sec ), returns void"
	set_wait_time(${1:float time_sec})$0

# trigger conflict with other class(es)
snippet start_Timer "start ( ), returns void"
	start($1)$0

# trigger conflict with other class(es)
snippet stop_Timer "stop ( ), returns void"
	stop($1)$0


# Class: TouchScreenButton
snippet get_action "get_action ( ) const, returns String"
	get_action($1)$0

snippet get_bitmask "get_bitmask ( ) const, returns Object"
	get_bitmask($1)$0

# trigger conflict with other class(es)
snippet get_texture_TouchScreenButton "get_texture ( ) const, returns Object"
	get_texture($1)$0

snippet get_texture_pressed "get_texture_pressed ( ) const, returns Object"
	get_texture_pressed($1)$0

snippet get_visibility_mode "get_visibility_mode ( ) const, returns int"
	get_visibility_mode($1)$0

snippet is_passby_press_enabled "is_passby_press_enabled ( ) const, returns bool"
	is_passby_press_enabled($1)$0

# trigger conflict with other class(es)
snippet is_pressed_TouchScreenButton "is_pressed ( ) const, returns bool"
	is_pressed($1)$0

snippet set_action "set_action ( String action ), returns void"
	set_action(${1:String action})$0

snippet set_bitmask "set_bitmask ( Object bitmask ), returns void"
	set_bitmask(${1:Object bitmask})$0

snippet set_passby_press "set_passby_press ( bool enabled ), returns void"
	set_passby_press(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_texture_TouchScreenButton "set_texture ( Object texture ), returns void"
	set_texture(${1:Object texture})$0

snippet set_texture_pressed "set_texture_pressed ( Object texture_pressed ), returns void"
	set_texture_pressed(${1:Object texture_pressed})$0

snippet set_visibility_mode "set_visibility_mode ( int mode ), returns void"
	set_visibility_mode(${1:int mode})$0


# Class: Transform
# not-unique trigger detected in this class: Transform; snippet commented
#snippet Transform "Transform ( Vector3 x_axis, Vector3 y_axis, Vector3 z_axis, Vector3 origin ), returns Transform"
#	Transform(Vector3 x_axis, Vector3 y_axis, Vector3 z_axis, Vector3 origin)$0

# not-unique trigger detected in this class: Transform; snippet commented
#snippet Transform "Transform ( Matrix3 basis, Vector3 origin ), returns Transform"
#	Transform(Matrix3 basis, Vector3 origin)$0

# not-unique trigger detected in this class: Transform; snippet commented
#snippet Transform "Transform ( Matrix32 from ), returns Transform"
#	Transform(Matrix32 from)$0

# not-unique trigger detected in this class: Transform; snippet commented
#snippet Transform "Transform ( Quat from ), returns Transform"
#	Transform(Quat from)$0

snippet Transform "Transform ( Matrix3 from ), returns Transform"
	Transform(${1:Matrix3 from})$0

# trigger conflict with other class(es)
snippet affine_inverse_Transform "affine_inverse ( ), returns Transform"
	affine_inverse($1)$0

# trigger conflict with other class(es)
snippet inverse_Transform "inverse ( ), returns Transform"
	inverse($1)$0

snippet looking_at "looking_at ( Vector3 target, Vector3 up ), returns Transform"
	looking_at(${1:Vector3 target}, ${2:Vector3 up})$0

# trigger conflict with other class(es)
snippet orthonormalized_Transform "orthonormalized ( ), returns Transform"
	orthonormalized($1)$0

# trigger conflict with other class(es)
snippet rotated_Transform "rotated ( Vector3 axis, float phi ), returns Transform"
	rotated(${1:Vector3 axis}, ${2:float phi})$0

# trigger conflict with other class(es)
snippet scaled_Transform "scaled ( Vector3 scale ), returns Transform"
	scaled(${1:Vector3 scale})$0

# trigger conflict with other class(es)
snippet translated_Transform "translated ( Vector3 ofs ), returns Transform"
	translated(${1:Vector3 ofs})$0

# trigger conflict with other class(es)
snippet xform_Transform "xform ( var v ), returns var"
	xform(${1:var v})$0

# trigger conflict with other class(es)
snippet xform_inv_Transform "xform_inv ( var v ), returns var"
	xform_inv(${1:var v})$0


# Class: Translation
snippet add_message "add_message ( String src_message, String xlated_message ), returns void"
	add_message(${1:String src_message}, ${2:String xlated_message})$0

snippet erase_message "erase_message ( String src_message ), returns void"
	erase_message(${1:String src_message})$0

# trigger conflict with other class(es)
snippet get_locale_Translation "get_locale ( ) const, returns String"
	get_locale($1)$0

snippet get_message "get_message ( String src_message ) const, returns String"
	get_message(${1:String src_message})$0

snippet get_message_count "get_message_count ( ) const, returns int"
	get_message_count($1)$0

snippet get_message_list "get_message_list ( ) const, returns StringArray"
	get_message_list($1)$0

snippet set_locale "set_locale ( String locale ), returns void"
	set_locale(${1:String locale})$0


# Class: TranslationServer
snippet add_translation "add_translation ( Translation translation ), returns void"
	add_translation(${1:Translation translation})$0

# trigger conflict with other class(es)
snippet clear_TranslationServer "clear ( ), returns void"
	clear($1)$0

# trigger conflict with other class(es)
snippet get_locale_TranslationServer "get_locale ( ) const, returns String"
	get_locale($1)$0

snippet remove_translation "remove_translation ( Translation translation ), returns void"
	remove_translation(${1:Translation translation})$0

# trigger conflict with other class(es)
snippet set_locale_TranslationServer "set_locale ( String locale ), returns void"
	set_locale(${1:String locale})$0

# trigger conflict with other class(es)
snippet translate_TranslationServer "translate ( String message ) const, returns String"
	translate(${1:String message})$0


# Class: Tree
snippet are_column_titles_visible "are_column_titles_visible ( ) const, returns bool"
	are_column_titles_visible($1)$0

# trigger conflict with other class(es)
snippet clear_Tree "clear ( ), returns void"
	clear($1)$0

# trigger conflict with other class(es)
snippet create_item_Tree "create_item ( TreeItem parent=NULL ), returns TreeItem"
	create_item(${1:TreeItem parent=NULL})$0

snippet ensure_cursor_is_visible "ensure_cursor_is_visible ( ), returns void"
	ensure_cursor_is_visible($1)$0

# trigger conflict with other class(es)
snippet get_allow_rmb_select_Tree "get_allow_rmb_select ( ) const, returns bool"
	get_allow_rmb_select($1)$0

snippet get_column_at_pos "get_column_at_pos ( Vector2 pos ) const, returns int"
	get_column_at_pos(${1:Vector2 pos})$0

snippet get_column_title "get_column_title ( int column ) const, returns String"
	get_column_title(${1:int column})$0

snippet get_column_width "get_column_width ( int column ) const, returns int"
	get_column_width(${1:int column})$0

# trigger conflict with other class(es)
snippet get_columns_Tree "get_columns ( ) const, returns int"
	get_columns($1)$0

snippet get_custom_popup_rect "get_custom_popup_rect ( ) const, returns Rect2"
	get_custom_popup_rect($1)$0

snippet get_drop_mode_flags "get_drop_mode_flags ( ) const, returns int"
	get_drop_mode_flags($1)$0

snippet get_edited "get_edited ( ) const, returns TreeItem"
	get_edited($1)$0

snippet get_edited_column "get_edited_column ( ) const, returns int"
	get_edited_column($1)$0

snippet get_item_area_rect "get_item_area_rect ( TreeItem item, int column=-1 ) const, returns Rect2"
	get_item_area_rect(${1:TreeItem item}, ${2:int column=-1})$0

# trigger conflict with other class(es)
snippet get_item_at_pos_Tree "get_item_at_pos ( Vector2 pos ) const, returns TreeItem"
	get_item_at_pos(${1:Vector2 pos})$0

snippet get_next_selected "get_next_selected ( TreeItem from ), returns TreeItem"
	get_next_selected(${1:TreeItem from})$0

# trigger conflict with other class(es)
snippet get_pressed_button_Tree "get_pressed_button ( ) const, returns int"
	get_pressed_button($1)$0

# trigger conflict with other class(es)
snippet get_root_Tree "get_root ( ), returns TreeItem"
	get_root($1)$0

snippet get_scroll "get_scroll ( ) const, returns Vector2"
	get_scroll($1)$0

# trigger conflict with other class(es)
snippet get_selected_Tree "get_selected ( ) const, returns TreeItem"
	get_selected($1)$0

snippet get_selected_column "get_selected_column ( ) const, returns int"
	get_selected_column($1)$0

snippet get_single_select_cell_editing_only_when_already_selected "get_single_select_cell_editing_only_when_already_selected ( ) const, returns bool"
	get_single_select_cell_editing_only_when_already_selected($1)$0

snippet is_folding_hidden "is_folding_hidden ( ) const, returns bool"
	is_folding_hidden($1)$0

# trigger conflict with other class(es)
snippet set_allow_rmb_select_Tree "set_allow_rmb_select ( bool allow ), returns void"
	set_allow_rmb_select(${1:bool allow})$0

snippet set_column_expand "set_column_expand ( int column, bool expand ), returns void"
	set_column_expand(${1:int column}, ${2:bool expand})$0

snippet set_column_min_width "set_column_min_width ( int column, int min_width ), returns void"
	set_column_min_width(${1:int column}, ${2:int min_width})$0

snippet set_column_title "set_column_title ( int column, String title ), returns void"
	set_column_title(${1:int column}, ${2:String title})$0

snippet set_column_titles_visible "set_column_titles_visible ( bool visible ), returns void"
	set_column_titles_visible(${1:bool visible})$0

# trigger conflict with other class(es)
snippet set_columns_Tree "set_columns ( int amount ), returns void"
	set_columns(${1:int amount})$0

snippet set_drop_mode_flags "set_drop_mode_flags ( int flags ), returns void"
	set_drop_mode_flags(${1:int flags})$0

snippet set_hide_folding "set_hide_folding ( bool hide ), returns void"
	set_hide_folding(${1:bool hide})$0

snippet set_hide_root "set_hide_root ( bool enable ), returns void"
	set_hide_root(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_select_mode_Tree "set_select_mode ( int mode ), returns void"
	set_select_mode(${1:int mode})$0

snippet set_single_select_cell_editing_only_when_already_selected "set_single_select_cell_editing_only_when_already_selected ( bool enable ), returns void"
	set_single_select_cell_editing_only_when_already_selected(${1:bool enable})$0


# Class: TreeItem
# trigger conflict with other class(es)
snippet add_button_TreeItem "add_button ( int column, Texture button, int button_idx=-1, bool disabled=false ), returns void"
	add_button(${1:int column}, ${2:Texture button}, ${3:int button_idx=-1}, ${4:bool disabled=false})$0

snippet clear_custom_bg_color "clear_custom_bg_color ( int column ), returns void"
	clear_custom_bg_color(${1:int column})$0

snippet clear_custom_color "clear_custom_color ( int column ), returns void"
	clear_custom_color(${1:int column})$0

snippet deselect "deselect ( int column ), returns void"
	deselect(${1:int column})$0

# trigger conflict with other class(es)
snippet erase_button_TreeItem "erase_button ( int column, int button_idx ), returns void"
	erase_button(${1:int column}, ${2:int button_idx})$0

snippet get_button "get_button ( int column, int button_idx ) const, returns Texture"
	get_button(${1:int column}, ${2:int button_idx})$0

# trigger conflict with other class(es)
snippet get_button_count_TreeItem "get_button_count ( int column ) const, returns int"
	get_button_count(${1:int column})$0

snippet get_cell_mode "get_cell_mode ( int column ) const, returns int"
	get_cell_mode(${1:int column})$0

# trigger conflict with other class(es)
snippet get_children_TreeItem "get_children ( ), returns TreeItem"
	get_children($1)$0

snippet get_custom_bg_color "get_custom_bg_color ( int column ) const, returns Color"
	get_custom_bg_color(${1:int column})$0

# trigger conflict with other class(es)
snippet get_icon_TreeItem "get_icon ( int column ) const, returns Texture"
	get_icon(${1:int column})$0

snippet get_icon_max_width "get_icon_max_width ( int column ) const, returns int"
	get_icon_max_width(${1:int column})$0

snippet get_icon_region "get_icon_region ( int column ) const, returns Rect2"
	get_icon_region(${1:int column})$0

snippet get_metadata "get_metadata ( int column ) const, returns void"
	get_metadata(${1:int column})$0

# trigger conflict with other class(es)
snippet get_next_TreeItem "get_next ( ), returns TreeItem"
	get_next($1)$0

snippet get_next_visible "get_next_visible ( ), returns TreeItem"
	get_next_visible($1)$0

# trigger conflict with other class(es)
snippet get_parent_TreeItem "get_parent ( ), returns TreeItem"
	get_parent($1)$0

snippet get_prev "get_prev ( ), returns TreeItem"
	get_prev($1)$0

snippet get_prev_visible "get_prev_visible ( ), returns TreeItem"
	get_prev_visible($1)$0

snippet get_range "get_range ( int column ) const, returns float"
	get_range(${1:int column})$0

snippet get_range_config "get_range_config ( int column ), returns Dictionary"
	get_range_config(${1:int column})$0

# trigger conflict with other class(es)
snippet get_text_TreeItem "get_text ( int column ) const, returns String"
	get_text(${1:int column})$0

# trigger conflict with other class(es)
snippet get_tooltip_TreeItem "get_tooltip ( int column ) const, returns String"
	get_tooltip(${1:int column})$0

snippet is_button_disabled "is_button_disabled ( int column, int button_idx ) const, returns bool"
	is_button_disabled(${1:int column}, ${2:int button_idx})$0

snippet is_checked "is_checked ( int column ) const, returns bool"
	is_checked(${1:int column})$0

# trigger conflict with other class(es)
snippet is_collapsed_TreeItem "is_collapsed ( ), returns bool"
	is_collapsed($1)$0

# trigger conflict with other class(es)
snippet is_editable_TreeItem "is_editable ( int column ), returns bool"
	is_editable(${1:int column})$0

snippet is_selectable "is_selectable ( int column ) const, returns bool"
	is_selectable(${1:int column})$0

# trigger conflict with other class(es)
snippet is_selected_TreeItem "is_selected ( int column ), returns bool"
	is_selected(${1:int column})$0

snippet move_to_bottom "move_to_bottom ( ), returns void"
	move_to_bottom($1)$0

snippet move_to_top "move_to_top ( ), returns void"
	move_to_top($1)$0

# trigger conflict with other class(es)
snippet remove_child_TreeItem "remove_child ( Object child ), returns TreeItem"
	remove_child(${1:Object child})$0

# trigger conflict with other class(es)
snippet select_TreeItem "select ( int column ), returns void"
	select(${1:int column})$0

snippet set_button "set_button ( int column, int button_idx, Texture button ), returns void"
	set_button(${1:int column}, ${2:int button_idx}, ${3:Texture button})$0

snippet set_cell_mode "set_cell_mode ( int column, int mode ), returns void"
	set_cell_mode(${1:int column}, ${2:int mode})$0

snippet set_checked "set_checked ( int column, bool checked ), returns void"
	set_checked(${1:int column}, ${2:bool checked})$0

# trigger conflict with other class(es)
snippet set_collapsed_TreeItem "set_collapsed ( bool enable ), returns void"
	set_collapsed(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_custom_bg_color_TreeItem "set_custom_bg_color ( int column, Color color, bool just_outline=false ), returns void"
	set_custom_bg_color(${1:int column}, ${2:Color color}, ${3:bool just_outline=false})$0

snippet set_custom_color "set_custom_color ( int column, Color color ), returns void"
	set_custom_color(${1:int column}, ${2:Color color})$0

snippet set_custom_draw "set_custom_draw ( int column, Object object, String callback ), returns void"
	set_custom_draw(${1:int column}, ${2:Object object}, ${3:String callback})$0

# trigger conflict with other class(es)
snippet set_editable_TreeItem "set_editable ( int column, bool enabled ), returns void"
	set_editable(${1:int column}, ${2:bool enabled})$0

# trigger conflict with other class(es)
snippet set_icon_TreeItem "set_icon ( int column, Texture texture ), returns void"
	set_icon(${1:int column}, ${2:Texture texture})$0

snippet set_icon_max_width "set_icon_max_width ( int column, int width ), returns void"
	set_icon_max_width(${1:int column}, ${2:int width})$0

snippet set_icon_region "set_icon_region ( int column, Rect2 region ), returns void"
	set_icon_region(${1:int column}, ${2:Rect2 region})$0

snippet set_metadata "set_metadata ( int column, Variant meta ), returns void"
	set_metadata(${1:int column}, ${2:Variant meta})$0

snippet set_range "set_range ( int column, float value ), returns void"
	set_range(${1:int column}, ${2:float value})$0

snippet set_range_config "set_range_config ( int column, float min, float max, float step, bool expr=false ), returns void"
	set_range_config(${1:int column}, ${2:float min}, ${3:float max}, ${4:float step}, ${5:bool expr=false})$0

snippet set_selectable "set_selectable ( int column, bool selectable ), returns void"
	set_selectable(${1:int column}, ${2:bool selectable})$0

# trigger conflict with other class(es)
snippet set_text_TreeItem "set_text ( int column, String text ), returns void"
	set_text(${1:int column}, ${2:String text})$0

# trigger conflict with other class(es)
snippet set_tooltip_TreeItem "set_tooltip ( int column, String tooltip ), returns void"
	set_tooltip(${1:int column}, ${2:String tooltip})$0


# Class: Tween
snippet follow_method "follow_method ( Object object, String method, Variant initial_val, Object target, String target_method, float times_in_sec, int trans_type, int ease_type, float delay=0 ), returns bool"
	follow_method(${1:Object object}, ${2:String method}, ${3:Variant initial_val}, ${4:Object target}, ${5:String target_method}, ${6:float times_in_sec}, ${7:int trans_type}, ${8:int ease_type}, ${9:float delay=0})$0

snippet follow_property "follow_property ( Object object, String property, Variant initial_val, Object target, String target_property, float times_in_sec, int trans_type, int ease_type, float delay=0 ), returns bool"
	follow_property(${1:Object object}, ${2:String property}, ${3:Variant initial_val}, ${4:Object target}, ${5:String target_property}, ${6:float times_in_sec}, ${7:int trans_type}, ${8:int ease_type}, ${9:float delay=0})$0

snippet get_runtime "get_runtime ( ) const, returns float"
	get_runtime($1)$0

# trigger conflict with other class(es)
snippet get_speed_Tween "get_speed ( ) const, returns float"
	get_speed($1)$0

snippet get_tween_process_mode "get_tween_process_mode ( ) const, returns int"
	get_tween_process_mode($1)$0

snippet interpolate_callback "interpolate_callback ( Object object, float times_in_sec, String callback, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL, Variant arg5=NULL ), returns bool"
	interpolate_callback(${1:Object object}, ${2:float times_in_sec}, ${3:String callback}, ${4:Variant arg1=NULL}, ${5:Variant arg2=NULL}, ${6:Variant arg3=NULL}, ${7:Variant arg4=NULL}, ${8:Variant arg5=NULL})$0

snippet interpolate_deferred_callback "interpolate_deferred_callback ( Object object, float times_in_sec, String callback, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL, Variant arg5=NULL ), returns bool"
	interpolate_deferred_callback(${1:Object object}, ${2:float times_in_sec}, ${3:String callback}, ${4:Variant arg1=NULL}, ${5:Variant arg2=NULL}, ${6:Variant arg3=NULL}, ${7:Variant arg4=NULL}, ${8:Variant arg5=NULL})$0

snippet interpolate_method "interpolate_method ( Object object, String method, Variant initial_val, Variant final_val, float times_in_sec, int trans_type, int ease_type, float delay=0 ), returns bool"
	interpolate_method(${1:Object object}, ${2:String method}, ${3:Variant initial_val}, ${4:Variant final_val}, ${5:float times_in_sec}, ${6:int trans_type}, ${7:int ease_type}, ${8:float delay=0})$0

snippet interpolate_property "interpolate_property ( Object object, String property, Variant initial_val, Variant final_val, float times_in_sec, int trans_type, int ease_type, float delay=0 ), returns bool"
	interpolate_property(${1:Object object}, ${2:String property}, ${3:Variant initial_val}, ${4:Variant final_val}, ${5:float times_in_sec}, ${6:int trans_type}, ${7:int ease_type}, ${8:float delay=0})$0

# trigger conflict with other class(es)
snippet is_active_Tween "is_active ( ) const, returns bool"
	is_active($1)$0

snippet is_repeat "is_repeat ( ) const, returns bool"
	is_repeat($1)$0

# trigger conflict with other class(es)
snippet remove_Tween "remove ( Object object, String key ), returns bool"
	remove(${1:Object object}, ${2:String key})$0

snippet remove_all "remove_all ( ), returns bool"
	remove_all($1)$0

# trigger conflict with other class(es)
snippet reset_Tween "reset ( Object object, String key ), returns bool"
	reset(${1:Object object}, ${2:String key})$0

snippet reset_all "reset_all ( ), returns bool"
	reset_all($1)$0

# trigger conflict with other class(es)
snippet resume_Tween "resume ( Object object, String key ), returns bool"
	resume(${1:Object object}, ${2:String key})$0

snippet resume_all "resume_all ( ), returns bool"
	resume_all($1)$0

# trigger conflict with other class(es)
snippet seek_Tween "seek ( float time ), returns bool"
	seek(${1:float time})$0

# trigger conflict with other class(es)
snippet set_active_Tween "set_active ( bool active ), returns void"
	set_active(${1:bool active})$0

snippet set_repeat "set_repeat ( bool repeat ), returns void"
	set_repeat(${1:bool repeat})$0

# trigger conflict with other class(es)
snippet set_speed_Tween "set_speed ( float speed ), returns void"
	set_speed(${1:float speed})$0

snippet set_tween_process_mode "set_tween_process_mode ( int mode ), returns void"
	set_tween_process_mode(${1:int mode})$0

# trigger conflict with other class(es)
snippet start_Tween "start ( ), returns bool"
	start($1)$0

# trigger conflict with other class(es)
snippet stop_Tween "stop ( Object object, String key ), returns bool"
	stop(${1:Object object}, ${2:String key})$0

# trigger conflict with other class(es)
snippet stop_all_Tween "stop_all ( ), returns bool"
	stop_all($1)$0

snippet targeting_method "targeting_method ( Object object, String method, Object initial, String initial_method, Variant final_val, float times_in_sec, int trans_type, int ease_type, float delay=0 ), returns bool"
	targeting_method(${1:Object object}, ${2:String method}, ${3:Object initial}, ${4:String initial_method}, ${5:Variant final_val}, ${6:float times_in_sec}, ${7:int trans_type}, ${8:int ease_type}, ${9:float delay=0})$0

snippet targeting_property "targeting_property ( Object object, String property, Object initial, String initial_val, Variant final_val, float times_in_sec, int trans_type, int ease_type, float delay=0 ), returns bool"
	targeting_property(${1:Object object}, ${2:String property}, ${3:Object initial}, ${4:String initial_val}, ${5:Variant final_val}, ${6:float times_in_sec}, ${7:int trans_type}, ${8:int ease_type}, ${9:float delay=0})$0

snippet tell "tell ( ) const, returns float"
	tell($1)$0


# Class: UndoRedo
snippet add_do_method "add_do_method ( Object object, String method, Variant arg0=NULL, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL ), returns void"
	add_do_method(${1:Object object}, ${2:String method}, ${3:Variant arg0=NULL}, ${4:Variant arg1=NULL}, ${5:Variant arg2=NULL}, ${6:Variant arg3=NULL}, ${7:Variant arg4=NULL})$0

snippet add_do_property "add_do_property ( Object object, String property, Variant value ), returns void"
	add_do_property(${1:Object object}, ${2:String property}, ${3:Variant value})$0

snippet add_do_reference "add_do_reference ( Object object ), returns void"
	add_do_reference(${1:Object object})$0

snippet add_undo_method "add_undo_method ( Object object, String method, Variant arg0=NULL, Variant arg1=NULL, Variant arg2=NULL, Variant arg3=NULL, Variant arg4=NULL ), returns void"
	add_undo_method(${1:Object object}, ${2:String method}, ${3:Variant arg0=NULL}, ${4:Variant arg1=NULL}, ${5:Variant arg2=NULL}, ${6:Variant arg3=NULL}, ${7:Variant arg4=NULL})$0

snippet add_undo_property "add_undo_property ( Object object, String property, Variant value ), returns void"
	add_undo_property(${1:Object object}, ${2:String property}, ${3:Variant value})$0

snippet add_undo_reference "add_undo_reference ( Object object ), returns void"
	add_undo_reference(${1:Object object})$0

snippet clear_history "clear_history ( ), returns void"
	clear_history($1)$0

snippet commit_action "commit_action ( ), returns void"
	commit_action($1)$0

snippet create_action "create_action ( String name, int merge_mode=0 ), returns void"
	create_action(${1:String name}, ${2:int merge_mode=0})$0

snippet get_current_action_name "get_current_action_name ( ) const, returns String"
	get_current_action_name($1)$0

snippet get_version "get_version ( ) const, returns int"
	get_version($1)$0


# Class: Vector2
snippet Vector2 "Vector2 ( float x, float y ), returns Vector2"
	Vector2(${1:float x}, ${2:float y})$0

# trigger conflict with other class(es)
snippet abs_Vector2 "abs ( ), returns Vector2"
	abs($1)$0

snippet angle "angle ( ), returns float"
	angle($1)$0

snippet angle_to "angle_to ( Vector2 to ), returns float"
	angle_to(${1:Vector2 to})$0

snippet angle_to_point "angle_to_point ( Vector2 to ), returns float"
	angle_to_point(${1:Vector2 to})$0

snippet cubic_interpolate "cubic_interpolate ( Vector2 b, Vector2 pre_a, Vector2 post_b, float t ), returns Vector2"
	cubic_interpolate(${1:Vector2 b}, ${2:Vector2 pre_a}, ${3:Vector2 post_b}, ${4:float t})$0

snippet distance_squared_to "distance_squared_to ( Vector2 to ), returns float"
	distance_squared_to(${1:Vector2 to})$0

# trigger conflict with other class(es)
snippet distance_to_Vector2 "distance_to ( Vector2 to ), returns float"
	distance_to(${1:Vector2 to})$0

# trigger conflict with other class(es)
snippet dot_Vector2 "dot ( Vector2 with ), returns float"
	dot(${1:Vector2 with})$0

# trigger conflict with other class(es)
snippet floor_Vector2 "floor ( ), returns Vector2"
	floor($1)$0

snippet floorf "floorf ( ), returns Vector2"
	floorf($1)$0

snippet get_aspect "get_aspect ( ), returns float"
	get_aspect($1)$0

# trigger conflict with other class(es)
snippet length_Vector2 "length ( ), returns float"
	length($1)$0

# trigger conflict with other class(es)
snippet length_squared_Vector2 "length_squared ( ), returns float"
	length_squared($1)$0

# trigger conflict with other class(es)
snippet linear_interpolate_Vector2 "linear_interpolate ( Vector2 b, float t ), returns Vector2"
	linear_interpolate(${1:Vector2 b}, ${2:float t})$0

# trigger conflict with other class(es)
snippet normalized_Vector2 "normalized ( ), returns Vector2"
	normalized($1)$0

snippet reflect "reflect ( Vector2 vec ), returns Vector2"
	reflect(${1:Vector2 vec})$0

# trigger conflict with other class(es)
snippet rotated_Vector2 "rotated ( float phi ), returns Vector2"
	rotated(${1:float phi})$0

snippet slide "slide ( Vector2 vec ), returns Vector2"
	slide(${1:Vector2 vec})$0

snippet snapped "snapped ( Vector2 by ), returns Vector2"
	snapped(${1:Vector2 by})$0

snippet tangent "tangent ( ), returns Vector2"
	tangent($1)$0


# Class: Vector2Array
snippet Vector2Array "Vector2Array ( Array from ), returns Vector2Array"
	Vector2Array(${1:Array from})$0

# trigger conflict with other class(es)
snippet append_Vector2Array "append ( Vector2 vector2 ), returns void"
	append(${1:Vector2 vector2})$0

# trigger conflict with other class(es)
snippet append_array_Vector2Array "append_array ( Vector2Array array ), returns void"
	append_array(${1:Vector2Array array})$0

# trigger conflict with other class(es)
snippet insert_Vector2Array "insert ( int idx, Vector2 vector2 ), returns int"
	insert(${1:int idx}, ${2:Vector2 vector2})$0

# trigger conflict with other class(es)
snippet invert_Vector2Array "invert ( ), returns void"
	invert($1)$0

# trigger conflict with other class(es)
snippet push_back_Vector2Array "push_back ( Vector2 vector2 ), returns void"
	push_back(${1:Vector2 vector2})$0

# trigger conflict with other class(es)
snippet remove_Vector2Array "remove ( int idx ), returns void"
	remove(${1:int idx})$0

# trigger conflict with other class(es)
snippet resize_Vector2Array "resize ( int idx ), returns void"
	resize(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_Vector2Array "set ( int idx, Vector2 vector2 ), returns void"
	set(${1:int idx}, ${2:Vector2 vector2})$0

# trigger conflict with other class(es)
snippet size_Vector2Array "size ( ), returns int"
	size($1)$0


# Class: Vector3
snippet Vector3 "Vector3 ( float x, float y, float z ), returns Vector3"
	Vector3(${1:float x}, ${2:float y}, ${3:float z})$0

# trigger conflict with other class(es)
snippet abs_Vector3 "abs ( ), returns Vector3"
	abs($1)$0

# trigger conflict with other class(es)
snippet ceil_Vector3 "ceil ( ), returns Vector3"
	ceil($1)$0

snippet cross "cross ( Vector3 b ), returns Vector3"
	cross(${1:Vector3 b})$0

# trigger conflict with other class(es)
snippet cubic_interpolate_Vector3 "cubic_interpolate ( Vector3 b, Vector3 pre_a, Vector3 post_b, float t ), returns Vector3"
	cubic_interpolate(${1:Vector3 b}, ${2:Vector3 pre_a}, ${3:Vector3 post_b}, ${4:float t})$0

# trigger conflict with other class(es)
snippet distance_squared_to_Vector3 "distance_squared_to ( Vector3 b ), returns float"
	distance_squared_to(${1:Vector3 b})$0

# trigger conflict with other class(es)
snippet distance_to_Vector3 "distance_to ( Vector3 b ), returns float"
	distance_to(${1:Vector3 b})$0

# trigger conflict with other class(es)
snippet dot_Vector3 "dot ( Vector3 b ), returns float"
	dot(${1:Vector3 b})$0

# trigger conflict with other class(es)
snippet floor_Vector3 "floor ( ), returns Vector3"
	floor($1)$0

# trigger conflict with other class(es)
snippet inverse_Vector3 "inverse ( ), returns Vector3"
	inverse($1)$0

# trigger conflict with other class(es)
snippet length_Vector3 "length ( ), returns float"
	length($1)$0

# trigger conflict with other class(es)
snippet length_squared_Vector3 "length_squared ( ), returns float"
	length_squared($1)$0

# trigger conflict with other class(es)
snippet linear_interpolate_Vector3 "linear_interpolate ( Vector3 b, float t ), returns Vector3"
	linear_interpolate(${1:Vector3 b}, ${2:float t})$0

snippet max_axis "max_axis ( ), returns int"
	max_axis($1)$0

snippet min_axis "min_axis ( ), returns int"
	min_axis($1)$0

# trigger conflict with other class(es)
snippet normalized_Vector3 "normalized ( ), returns Vector3"
	normalized($1)$0

# trigger conflict with other class(es)
snippet reflect_Vector3 "reflect ( Vector3 by ), returns Vector3"
	reflect(${1:Vector3 by})$0

# trigger conflict with other class(es)
snippet rotated_Vector3 "rotated ( Vector3 axis, float phi ), returns Vector3"
	rotated(${1:Vector3 axis}, ${2:float phi})$0

# trigger conflict with other class(es)
snippet slide_Vector3 "slide ( Vector3 by ), returns Vector3"
	slide(${1:Vector3 by})$0

# trigger conflict with other class(es)
snippet snapped_Vector3 "snapped ( float by ), returns Vector3"
	snapped(${1:float by})$0


# Class: Vector3Array
snippet Vector3Array "Vector3Array ( Array from ), returns Vector3Array"
	Vector3Array(${1:Array from})$0

# trigger conflict with other class(es)
snippet append_Vector3Array "append ( Vector3 vector3 ), returns void"
	append(${1:Vector3 vector3})$0

# trigger conflict with other class(es)
snippet append_array_Vector3Array "append_array ( Vector3Array array ), returns void"
	append_array(${1:Vector3Array array})$0

# trigger conflict with other class(es)
snippet insert_Vector3Array "insert ( int idx, Vector3 vector3 ), returns int"
	insert(${1:int idx}, ${2:Vector3 vector3})$0

# trigger conflict with other class(es)
snippet invert_Vector3Array "invert ( ), returns void"
	invert($1)$0

# trigger conflict with other class(es)
snippet push_back_Vector3Array "push_back ( Vector3 vector3 ), returns void"
	push_back(${1:Vector3 vector3})$0

# trigger conflict with other class(es)
snippet remove_Vector3Array "remove ( int idx ), returns void"
	remove(${1:int idx})$0

# trigger conflict with other class(es)
snippet resize_Vector3Array "resize ( int idx ), returns void"
	resize(${1:int idx})$0

# trigger conflict with other class(es)
snippet set_Vector3Array "set ( int idx, Vector3 vector3 ), returns void"
	set(${1:int idx}, ${2:Vector3 vector3})$0

# trigger conflict with other class(es)
snippet size_Vector3Array "size ( ), returns int"
	size($1)$0


# Class: VehicleBody
snippet get_brake "get_brake ( ) const, returns float"
	get_brake($1)$0

snippet get_engine_force "get_engine_force ( ) const, returns float"
	get_engine_force($1)$0

# trigger conflict with other class(es)
snippet get_friction_VehicleBody "get_friction ( ) const, returns float"
	get_friction($1)$0

# trigger conflict with other class(es)
snippet get_linear_velocity_VehicleBody "get_linear_velocity ( ) const, returns Vector3"
	get_linear_velocity($1)$0

# trigger conflict with other class(es)
snippet get_mass_VehicleBody "get_mass ( ) const, returns float"
	get_mass($1)$0

snippet get_steering "get_steering ( ) const, returns float"
	get_steering($1)$0

snippet set_brake "set_brake ( float brake ), returns void"
	set_brake(${1:float brake})$0

snippet set_engine_force "set_engine_force ( float engine_force ), returns void"
	set_engine_force(${1:float engine_force})$0

# trigger conflict with other class(es)
snippet set_friction_VehicleBody "set_friction ( float friction ), returns void"
	set_friction(${1:float friction})$0

# trigger conflict with other class(es)
snippet set_mass_VehicleBody "set_mass ( float mass ), returns void"
	set_mass(${1:float mass})$0

snippet set_steering "set_steering ( float steering ), returns void"
	set_steering(${1:float steering})$0


# Class: VehicleWheel
snippet get_damping_compression "get_damping_compression ( ) const, returns float"
	get_damping_compression($1)$0

snippet get_damping_relaxation "get_damping_relaxation ( ) const, returns float"
	get_damping_relaxation($1)$0

snippet get_friction_slip "get_friction_slip ( ) const, returns float"
	get_friction_slip($1)$0

# trigger conflict with other class(es)
snippet get_radius_VehicleWheel "get_radius ( ) const, returns float"
	get_radius($1)$0

snippet get_suspension_max_force "get_suspension_max_force ( ) const, returns float"
	get_suspension_max_force($1)$0

snippet get_suspension_rest_length "get_suspension_rest_length ( ) const, returns float"
	get_suspension_rest_length($1)$0

snippet get_suspension_stiffness "get_suspension_stiffness ( ) const, returns float"
	get_suspension_stiffness($1)$0

snippet get_suspension_travel "get_suspension_travel ( ) const, returns float"
	get_suspension_travel($1)$0

snippet is_used_as_steering "is_used_as_steering ( ) const, returns bool"
	is_used_as_steering($1)$0

snippet is_used_as_traction "is_used_as_traction ( ) const, returns bool"
	is_used_as_traction($1)$0

snippet set_damping_compression "set_damping_compression ( float length ), returns void"
	set_damping_compression(${1:float length})$0

snippet set_damping_relaxation "set_damping_relaxation ( float length ), returns void"
	set_damping_relaxation(${1:float length})$0

snippet set_friction_slip "set_friction_slip ( float length ), returns void"
	set_friction_slip(${1:float length})$0

# trigger conflict with other class(es)
snippet set_radius_VehicleWheel "set_radius ( float length ), returns void"
	set_radius(${1:float length})$0

snippet set_suspension_max_force "set_suspension_max_force ( float length ), returns void"
	set_suspension_max_force(${1:float length})$0

snippet set_suspension_rest_length "set_suspension_rest_length ( float length ), returns void"
	set_suspension_rest_length(${1:float length})$0

snippet set_suspension_stiffness "set_suspension_stiffness ( float length ), returns void"
	set_suspension_stiffness(${1:float length})$0

snippet set_suspension_travel "set_suspension_travel ( float length ), returns void"
	set_suspension_travel(${1:float length})$0

snippet set_use_as_steering "set_use_as_steering ( bool enable ), returns void"
	set_use_as_steering(${1:bool enable})$0

snippet set_use_as_traction "set_use_as_traction ( bool enable ), returns void"
	set_use_as_traction(${1:bool enable})$0


# Class: VideoPlayer
snippet get_audio_track "get_audio_track ( ) const, returns int"
	get_audio_track($1)$0

# trigger conflict with other class(es)
snippet get_buffering_msec_VideoPlayer "get_buffering_msec ( ) const, returns int"
	get_buffering_msec($1)$0

# trigger conflict with other class(es)
snippet get_stream_VideoPlayer "get_stream ( ) const, returns VideoStream"
	get_stream($1)$0

# trigger conflict with other class(es)
snippet get_stream_name_VideoPlayer "get_stream_name ( ) const, returns String"
	get_stream_name($1)$0

snippet get_stream_pos "get_stream_pos ( ) const, returns float"
	get_stream_pos($1)$0

snippet get_video_texture "get_video_texture ( ), returns Texture"
	get_video_texture($1)$0

# trigger conflict with other class(es)
snippet get_volume_VideoPlayer "get_volume ( ) const, returns float"
	get_volume($1)$0

# trigger conflict with other class(es)
snippet get_volume_db_VideoPlayer "get_volume_db ( ) const, returns float"
	get_volume_db($1)$0

# trigger conflict with other class(es)
snippet has_autoplay_VideoPlayer "has_autoplay ( ) const, returns bool"
	has_autoplay($1)$0

# trigger conflict with other class(es)
snippet has_expand_VideoPlayer "has_expand ( ) const, returns bool"
	has_expand($1)$0

# trigger conflict with other class(es)
snippet is_paused_VideoPlayer "is_paused ( ) const, returns bool"
	is_paused($1)$0

# trigger conflict with other class(es)
snippet is_playing_VideoPlayer "is_playing ( ) const, returns bool"
	is_playing($1)$0

# trigger conflict with other class(es)
snippet play_VideoPlayer "play ( ), returns void"
	play($1)$0

snippet set_audio_track "set_audio_track ( int track ), returns void"
	set_audio_track(${1:int track})$0

# trigger conflict with other class(es)
snippet set_autoplay_VideoPlayer "set_autoplay ( bool enabled ), returns void"
	set_autoplay(${1:bool enabled})$0

# trigger conflict with other class(es)
snippet set_buffering_msec_VideoPlayer "set_buffering_msec ( int msec ), returns void"
	set_buffering_msec(${1:int msec})$0

# trigger conflict with other class(es)
snippet set_expand_VideoPlayer "set_expand ( bool enable ), returns void"
	set_expand(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_paused_VideoPlayer "set_paused ( bool paused ), returns void"
	set_paused(${1:bool paused})$0

# trigger conflict with other class(es)
snippet set_stream_VideoPlayer "set_stream ( VideoStream stream ), returns void"
	set_stream(${1:VideoStream stream})$0

# trigger conflict with other class(es)
snippet set_volume_VideoPlayer "set_volume ( float volume ), returns void"
	set_volume(${1:float volume})$0

# trigger conflict with other class(es)
snippet set_volume_db_VideoPlayer "set_volume_db ( float db ), returns void"
	set_volume_db(${1:float db})$0

# trigger conflict with other class(es)
snippet stop_VideoPlayer "stop ( ), returns void"
	stop($1)$0


# Class: Viewport
snippet find_world "find_world ( ) const, returns World"
	find_world($1)$0

snippet find_world_2d "find_world_2d ( ) const, returns World2D"
	find_world_2d($1)$0

snippet get_camera "get_camera ( ) const, returns Camera"
	get_camera($1)$0

# trigger conflict with other class(es)
snippet get_canvas_transform_Viewport "get_canvas_transform ( ) const, returns Matrix32"
	get_canvas_transform($1)$0

snippet get_final_transform "get_final_transform ( ) const, returns Matrix32"
	get_final_transform($1)$0

snippet get_global_canvas_transform "get_global_canvas_transform ( ) const, returns Matrix32"
	get_global_canvas_transform($1)$0

snippet get_mouse_pos "get_mouse_pos ( ) const, returns Vector2"
	get_mouse_pos($1)$0

snippet get_physics_object_picking "get_physics_object_picking ( ), returns bool"
	get_physics_object_picking($1)$0

# trigger conflict with other class(es)
snippet get_rect_Viewport "get_rect ( ) const, returns Rect2"
	get_rect($1)$0

snippet get_render_target_clear_on_new_frame "get_render_target_clear_on_new_frame ( ) const, returns bool"
	get_render_target_clear_on_new_frame($1)$0

snippet get_render_target_filter "get_render_target_filter ( ) const, returns bool"
	get_render_target_filter($1)$0

snippet get_render_target_gen_mipmaps "get_render_target_gen_mipmaps ( ) const, returns bool"
	get_render_target_gen_mipmaps($1)$0

snippet get_render_target_texture "get_render_target_texture ( ) const, returns RenderTargetTexture"
	get_render_target_texture($1)$0

snippet get_render_target_update_mode "get_render_target_update_mode ( ) const, returns int"
	get_render_target_update_mode($1)$0

snippet get_render_target_vflip "get_render_target_vflip ( ) const, returns bool"
	get_render_target_vflip($1)$0

snippet get_screen_capture "get_screen_capture ( ) const, returns Image"
	get_screen_capture($1)$0

snippet get_size_override "get_size_override ( ) const, returns Vector2"
	get_size_override($1)$0

# trigger conflict with other class(es)
snippet get_viewport_Viewport "get_viewport ( ) const, returns RID"
	get_viewport($1)$0

snippet get_visible_rect "get_visible_rect ( ) const, returns Rect2"
	get_visible_rect($1)$0

# trigger conflict with other class(es)
snippet get_world_Viewport "get_world ( ) const, returns World"
	get_world($1)$0

snippet gui_get_drag_data "gui_get_drag_data ( ) const, returns Variant"
	gui_get_drag_data($1)$0

snippet gui_has_modal_stack "gui_has_modal_stack ( ) const, returns bool"
	gui_has_modal_stack($1)$0

snippet has_transparent_background "has_transparent_background ( ) const, returns bool"
	has_transparent_background($1)$0

snippet input "input ( InputEvent local_event ), returns void"
	input(${1:InputEvent local_event})$0

snippet is_audio_listener "is_audio_listener ( ) const, returns bool"
	is_audio_listener($1)$0

snippet is_audio_listener_2d "is_audio_listener_2d ( ) const, returns bool"
	is_audio_listener_2d($1)$0

snippet is_input_disabled "is_input_disabled ( ) const, returns bool"
	is_input_disabled($1)$0

snippet is_set_as_render_target "is_set_as_render_target ( ) const, returns bool"
	is_set_as_render_target($1)$0

snippet is_size_override_enabled "is_size_override_enabled ( ) const, returns bool"
	is_size_override_enabled($1)$0

snippet is_size_override_stretch_enabled "is_size_override_stretch_enabled ( ) const, returns bool"
	is_size_override_stretch_enabled($1)$0

snippet is_using_own_world "is_using_own_world ( ) const, returns bool"
	is_using_own_world($1)$0

snippet queue_screen_capture "queue_screen_capture ( ), returns void"
	queue_screen_capture($1)$0

snippet render_target_clear "render_target_clear ( ), returns void"
	render_target_clear($1)$0

snippet set_as_audio_listener "set_as_audio_listener ( bool enable ), returns void"
	set_as_audio_listener(${1:bool enable})$0

snippet set_as_audio_listener_2d "set_as_audio_listener_2d ( bool enable ), returns void"
	set_as_audio_listener_2d(${1:bool enable})$0

snippet set_as_render_target "set_as_render_target ( bool enable ), returns void"
	set_as_render_target(${1:bool enable})$0

snippet set_canvas_transform "set_canvas_transform ( Matrix32 xform ), returns void"
	set_canvas_transform(${1:Matrix32 xform})$0

snippet set_disable_input "set_disable_input ( bool disable ), returns void"
	set_disable_input(${1:bool disable})$0

snippet set_global_canvas_transform "set_global_canvas_transform ( Matrix32 xform ), returns void"
	set_global_canvas_transform(${1:Matrix32 xform})$0

snippet set_physics_object_picking "set_physics_object_picking ( bool enable ), returns void"
	set_physics_object_picking(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_rect_Viewport "set_rect ( Rect2 rect ), returns void"
	set_rect(${1:Rect2 rect})$0

snippet set_render_target_clear_on_new_frame "set_render_target_clear_on_new_frame ( bool enable ), returns void"
	set_render_target_clear_on_new_frame(${1:bool enable})$0

snippet set_render_target_filter "set_render_target_filter ( bool enable ), returns void"
	set_render_target_filter(${1:bool enable})$0

snippet set_render_target_gen_mipmaps "set_render_target_gen_mipmaps ( bool enable ), returns void"
	set_render_target_gen_mipmaps(${1:bool enable})$0

snippet set_render_target_to_screen_rect "set_render_target_to_screen_rect ( Rect2 rect ), returns void"
	set_render_target_to_screen_rect(${1:Rect2 rect})$0

snippet set_render_target_update_mode "set_render_target_update_mode ( int mode ), returns void"
	set_render_target_update_mode(${1:int mode})$0

snippet set_render_target_vflip "set_render_target_vflip ( bool enable ), returns void"
	set_render_target_vflip(${1:bool enable})$0

# trigger conflict with other class(es)
snippet set_size_override_Viewport "set_size_override ( bool enable, Vector2 size=Vector2(-1, -1), Vector2 margin=Vector2(0, 0) ), returns void"
	set_size_override(${1:bool enable}, ${2:Vector2 size=Vector2(-1}, ${3:-1)}, ${4:Vector2 margin=Vector2(0}, ${5:0)})$0

snippet set_size_override_stretch "set_size_override_stretch ( bool enabled ), returns void"
	set_size_override_stretch(${1:bool enabled})$0

snippet set_transparent_background "set_transparent_background ( bool enable ), returns void"
	set_transparent_background(${1:bool enable})$0

snippet set_use_own_world "set_use_own_world ( bool enable ), returns void"
	set_use_own_world(${1:bool enable})$0

snippet set_world "set_world ( World world ), returns void"
	set_world(${1:World world})$0

snippet unhandled_input "unhandled_input ( InputEvent local_event ), returns void"
	unhandled_input(${1:InputEvent local_event})$0

snippet update_worlds "update_worlds ( ), returns void"
	update_worlds($1)$0

# trigger conflict with other class(es)
snippet warp_mouse_Viewport "warp_mouse ( Vector2 to_pos ), returns void"
	warp_mouse(${1:Vector2 to_pos})$0


# Class: ViewportSprite
# trigger conflict with other class(es)
snippet get_modulate_ViewportSprite "get_modulate ( ) const, returns Color"
	get_modulate($1)$0

# trigger conflict with other class(es)
snippet get_offset_ViewportSprite "get_offset ( ) const, returns Vector2"
	get_offset($1)$0

snippet get_viewport_path "get_viewport_path ( ) const, returns NodePath"
	get_viewport_path($1)$0

# trigger conflict with other class(es)
snippet is_centered_ViewportSprite "is_centered ( ) const, returns bool"
	is_centered($1)$0

# trigger conflict with other class(es)
snippet set_centered_ViewportSprite "set_centered ( bool centered ), returns void"
	set_centered(${1:bool centered})$0

# trigger conflict with other class(es)
snippet set_modulate_ViewportSprite "set_modulate ( Color modulate ), returns void"
	set_modulate(${1:Color modulate})$0

# trigger conflict with other class(es)
snippet set_offset_ViewportSprite "set_offset ( Vector2 offset ), returns void"
	set_offset(${1:Vector2 offset})$0

snippet set_viewport_path "set_viewport_path ( NodePath path ), returns void"
	set_viewport_path(${1:NodePath path})$0


# Class: VisibilityEnabler
snippet is_enabler_enabled "is_enabler_enabled ( int enabler ) const, returns bool"
	is_enabler_enabled(${1:int enabler})$0

snippet set_enabler "set_enabler ( int enabler, bool enabled ), returns void"
	set_enabler(${1:int enabler}, ${2:bool enabled})$0


# Class: VisibilityEnabler2D
# trigger conflict with other class(es)
snippet is_enabler_enabled_VisibilityEnabler2D "is_enabler_enabled ( int enabler ) const, returns bool"
	is_enabler_enabled(${1:int enabler})$0

# trigger conflict with other class(es)
snippet set_enabler_VisibilityEnabler2D "set_enabler ( int enabler, bool enabled ), returns void"
	set_enabler(${1:int enabler}, ${2:bool enabled})$0


# Class: VisibilityNotifier
# trigger conflict with other class(es)
snippet get_aabb_VisibilityNotifier "get_aabb ( ) const, returns AABB"
	get_aabb($1)$0

snippet is_on_screen "is_on_screen ( ) const, returns bool"
	is_on_screen($1)$0

# trigger conflict with other class(es)
snippet set_aabb_VisibilityNotifier "set_aabb ( AABB rect ), returns void"
	set_aabb(${1:AABB rect})$0


# Class: VisibilityNotifier2D
# trigger conflict with other class(es)
snippet get_rect_VisibilityNotifier2D "get_rect ( ) const, returns Rect2"
	get_rect($1)$0

# trigger conflict with other class(es)
snippet is_on_screen_VisibilityNotifier2D "is_on_screen ( ) const, returns bool"
	is_on_screen($1)$0

# trigger conflict with other class(es)
snippet set_rect_VisibilityNotifier2D "set_rect ( Rect2 rect ), returns void"
	set_rect(${1:Rect2 rect})$0


# Class: VisualInstance
# trigger conflict with other class(es)
snippet get_layer_mask_VisualInstance "get_layer_mask ( ) const, returns int"
	get_layer_mask($1)$0

snippet set_base "set_base ( RID base ), returns void"
	set_base(${1:RID base})$0

# trigger conflict with other class(es)
snippet set_layer_mask_VisualInstance "set_layer_mask ( int mask ), returns void"
	set_layer_mask(${1:int mask})$0


# Class: VisualServer
snippet black_bars_set_images "black_bars_set_images ( RID left, RID top, RID right, RID bottom ), returns void"
	black_bars_set_images(${1:RID left}, ${2:RID top}, ${3:RID right}, ${4:RID bottom})$0

snippet black_bars_set_margins "black_bars_set_margins ( int left, int top, int right, int bottom ), returns void"
	black_bars_set_margins(${1:int left}, ${2:int top}, ${3:int right}, ${4:int bottom})$0

snippet camera_create "camera_create ( ), returns RID"
	camera_create($1)$0

snippet camera_set_orthogonal "camera_set_orthogonal ( RID arg0, float arg1, float arg2, float arg3 ), returns void"
	camera_set_orthogonal(${1:RID arg0}, ${2:float arg1}, ${3:float arg2}, ${4:float arg3})$0

snippet camera_set_perspective "camera_set_perspective ( RID arg0, float arg1, float arg2, float arg3 ), returns void"
	camera_set_perspective(${1:RID arg0}, ${2:float arg1}, ${3:float arg2}, ${4:float arg3})$0

snippet camera_set_transform "camera_set_transform ( RID arg0, Transform arg1 ), returns void"
	camera_set_transform(${1:RID arg0}, ${2:Transform arg1})$0

snippet canvas_create "canvas_create ( ), returns RID"
	canvas_create($1)$0

snippet canvas_item_add_circle "canvas_item_add_circle ( RID arg0, Vector2 arg1, float arg2, Color arg3 ), returns void"
	canvas_item_add_circle(${1:RID arg0}, ${2:Vector2 arg1}, ${3:float arg2}, ${4:Color arg3})$0

snippet canvas_item_add_line "canvas_item_add_line ( RID arg0, Vector2 arg1, Vector2 arg2, Color arg3, float arg4=1 ), returns void"
	canvas_item_add_line(${1:RID arg0}, ${2:Vector2 arg1}, ${3:Vector2 arg2}, ${4:Color arg3}, ${5:float arg4=1})$0

snippet canvas_item_add_rect "canvas_item_add_rect ( RID arg0, Rect2 arg1, Color arg2 ), returns void"
	canvas_item_add_rect(${1:RID arg0}, ${2:Rect2 arg1}, ${3:Color arg2})$0

snippet canvas_item_add_style_box "canvas_item_add_style_box ( RID arg0, Rect2 arg1, Rect2 arg2, RID arg3, RealArray arg4, Color arg5=Color(1,1,1,1) ), returns void"
	canvas_item_add_style_box(${1:RID arg0}, ${2:Rect2 arg1}, ${3:Rect2 arg2}, ${4:RID arg3}, ${5:RealArray arg4}, ${6:Color arg5=Color(1},1,1,1))$0

snippet canvas_item_add_texture_rect "canvas_item_add_texture_rect ( RID arg0, Rect2 arg1, RID arg2, bool arg3, Color arg4=Color(1,1,1,1), bool arg5=false ), returns void"
	canvas_item_add_texture_rect(${1:RID arg0}, ${2:Rect2 arg1}, ${3:RID arg2}, ${4:bool arg3}, ${5:Color arg4=Color(1},1,1,1), ${6:bool arg5=false})$0

snippet canvas_item_add_texture_rect_region "canvas_item_add_texture_rect_region ( RID arg0, Rect2 arg1, RID arg2, Rect2 arg3, Color arg4=Color(1,1,1,1), bool arg5=false ), returns void"
	canvas_item_add_texture_rect_region(${1:RID arg0}, ${2:Rect2 arg1}, ${3:RID arg2}, ${4:Rect2 arg3}, ${5:Color arg4=Color(1},1,1,1), ${6:bool arg5=false})$0

snippet canvas_item_clear "canvas_item_clear ( RID arg0 ), returns void"
	canvas_item_clear(${1:RID arg0})$0

snippet canvas_item_create "canvas_item_create ( ), returns RID"
	canvas_item_create($1)$0

snippet canvas_item_get_opacity "canvas_item_get_opacity ( RID arg0, float arg1 ) const, returns float"
	canvas_item_get_opacity(${1:RID arg0}, ${2:float arg1})$0

snippet canvas_item_get_parent "canvas_item_get_parent ( RID arg0 ) const, returns RID"
	canvas_item_get_parent(${1:RID arg0})$0

snippet canvas_item_get_self_opacity "canvas_item_get_self_opacity ( RID arg0, float arg1 ) const, returns float"
	canvas_item_get_self_opacity(${1:RID arg0}, ${2:float arg1})$0

snippet canvas_item_raise "canvas_item_raise ( RID arg0 ), returns void"
	canvas_item_raise(${1:RID arg0})$0

snippet canvas_item_set_clip "canvas_item_set_clip ( RID arg0, bool arg1 ), returns void"
	canvas_item_set_clip(${1:RID arg0}, ${2:bool arg1})$0

snippet canvas_item_set_custom_rect "canvas_item_set_custom_rect ( RID arg0, bool arg1, Rect2 arg2 ), returns void"
	canvas_item_set_custom_rect(${1:RID arg0}, ${2:bool arg1}, ${3:Rect2 arg2})$0

snippet canvas_item_set_opacity "canvas_item_set_opacity ( RID arg0, float arg1 ), returns void"
	canvas_item_set_opacity(${1:RID arg0}, ${2:float arg1})$0

snippet canvas_item_set_parent "canvas_item_set_parent ( RID arg0, RID arg1 ), returns void"
	canvas_item_set_parent(${1:RID arg0}, ${2:RID arg1})$0

snippet canvas_item_set_self_opacity "canvas_item_set_self_opacity ( RID arg0, float arg1 ), returns void"
	canvas_item_set_self_opacity(${1:RID arg0}, ${2:float arg1})$0

snippet canvas_item_set_transform "canvas_item_set_transform ( RID arg0, Matrix32 arg1 ), returns void"
	canvas_item_set_transform(${1:RID arg0}, ${2:Matrix32 arg1})$0

snippet canvas_item_set_z "canvas_item_set_z ( RID arg0, int arg1 ), returns void"
	canvas_item_set_z(${1:RID arg0}, ${2:int arg1})$0

snippet cursor_set_pos "cursor_set_pos ( Vector2 arg0, int arg1 ), returns void"
	cursor_set_pos(${1:Vector2 arg0}, ${2:int arg1})$0

snippet cursor_set_rotation "cursor_set_rotation ( float arg0, int arg1 ), returns void"
	cursor_set_rotation(${1:float arg0}, ${2:int arg1})$0

snippet cursor_set_texture "cursor_set_texture ( RID arg0, Vector2 arg1, int arg2, Rect2 arg3 ), returns void"
	cursor_set_texture(${1:RID arg0}, ${2:Vector2 arg1}, ${3:int arg2}, ${4:Rect2 arg3})$0

snippet cursor_set_visible "cursor_set_visible ( bool arg0, int arg1 ), returns void"
	cursor_set_visible(${1:bool arg0}, ${2:int arg1})$0

# trigger conflict with other class(es)
snippet draw_VisualServer "draw ( ), returns void"
	draw($1)$0

# trigger conflict with other class(es)
snippet free_rid_VisualServer "free_rid ( RID arg0 ), returns void"
	free_rid(${1:RID arg0})$0

snippet get_render_info "get_render_info ( int arg0 ), returns int"
	get_render_info(${1:int arg0})$0

snippet get_test_cube "get_test_cube ( ), returns RID"
	get_test_cube($1)$0

snippet instance_attach_object_instance_ID "instance_attach_object_instance_ID ( RID arg0, int arg1 ), returns void"
	instance_attach_object_instance_ID(${1:RID arg0}, ${2:int arg1})$0

snippet instance_attach_skeleton "instance_attach_skeleton ( RID arg0, RID arg1 ), returns void"
	instance_attach_skeleton(${1:RID arg0}, ${2:RID arg1})$0

snippet instance_create "instance_create ( ), returns RID"
	instance_create($1)$0

snippet instance_geometry_get_material_param "instance_geometry_get_material_param ( RID arg0 ) const, returns RID"
	instance_geometry_get_material_param(${1:RID arg0})$0

snippet instance_geometry_override_material_param "instance_geometry_override_material_param ( RID arg0 ) const, returns RID"
	instance_geometry_override_material_param(${1:RID arg0})$0

snippet instance_get_base "instance_get_base ( RID arg0 ) const, returns RID"
	instance_get_base(${1:RID arg0})$0

snippet instance_get_base_aabb "instance_get_base_aabb ( RID arg0 ) const, returns RID"
	instance_get_base_aabb(${1:RID arg0})$0

snippet instance_get_object_instance_ID "instance_get_object_instance_ID ( RID arg0 ) const, returns int"
	instance_get_object_instance_ID(${1:RID arg0})$0

snippet instance_get_room "instance_get_room ( RID arg0 ) const, returns RID"
	instance_get_room(${1:RID arg0})$0

snippet instance_get_skeleton "instance_get_skeleton ( RID arg0 ) const, returns RID"
	instance_get_skeleton(${1:RID arg0})$0

snippet instance_get_transform "instance_get_transform ( RID arg0 ) const, returns Transform"
	instance_get_transform(${1:RID arg0})$0

snippet instance_is_exterior "instance_is_exterior ( RID arg0 ) const, returns bool"
	instance_is_exterior(${1:RID arg0})$0

snippet instance_set_exterior "instance_set_exterior ( RID arg0, bool arg1 ), returns void"
	instance_set_exterior(${1:RID arg0}, ${2:bool arg1})$0

snippet instance_set_room "instance_set_room ( RID arg0, RID arg1 ), returns void"
	instance_set_room(${1:RID arg0}, ${2:RID arg1})$0

snippet instance_set_transform "instance_set_transform ( RID arg0, Transform arg1 ), returns void"
	instance_set_transform(${1:RID arg0}, ${2:Transform arg1})$0

snippet instances_cull_aabb "instances_cull_aabb ( AABB arg0, RID arg1 ) const, returns Array"
	instances_cull_aabb(${1:AABB arg0}, ${2:RID arg1})$0

snippet instances_cull_convex "instances_cull_convex ( Array arg0, RID arg1 ) const, returns Array"
	instances_cull_convex(${1:Array arg0}, ${2:RID arg1})$0

snippet instances_cull_ray "instances_cull_ray ( Vector3 arg0, Vector3 arg1, RID arg2 ) const, returns Array"
	instances_cull_ray(${1:Vector3 arg0}, ${2:Vector3 arg1}, ${3:RID arg2})$0

snippet light_create "light_create ( int arg0 ), returns RID"
	light_create(${1:int arg0})$0

snippet light_get_color "light_get_color ( RID arg0, int arg1 ) const, returns Color"
	light_get_color(${1:RID arg0}, ${2:int arg1})$0

snippet light_get_projector "light_get_projector ( RID arg0 ) const, returns RID"
	light_get_projector(${1:RID arg0})$0

snippet light_get_type "light_get_type ( RID arg0 ) const, returns int"
	light_get_type(${1:RID arg0})$0

snippet light_get_var "light_get_var ( RID arg0, int arg1 ) const, returns float"
	light_get_var(${1:RID arg0}, ${2:int arg1})$0

snippet light_has_shadow "light_has_shadow ( RID arg0 ) const, returns bool"
	light_has_shadow(${1:RID arg0})$0

snippet light_is_volumetric "light_is_volumetric ( RID arg0 ) const, returns bool"
	light_is_volumetric(${1:RID arg0})$0

snippet light_set_color "light_set_color ( RID arg0, int arg1, Color arg2 ), returns void"
	light_set_color(${1:RID arg0}, ${2:int arg1}, ${3:Color arg2})$0

snippet light_set_projector "light_set_projector ( RID arg0, RID arg1 ), returns void"
	light_set_projector(${1:RID arg0}, ${2:RID arg1})$0

snippet light_set_shadow "light_set_shadow ( RID arg0, bool arg1 ), returns void"
	light_set_shadow(${1:RID arg0}, ${2:bool arg1})$0

snippet light_set_var "light_set_var ( RID arg0, int arg1, float arg2 ), returns void"
	light_set_var(${1:RID arg0}, ${2:int arg1}, ${3:float arg2})$0

snippet light_set_volumetric "light_set_volumetric ( RID arg0, bool arg1 ), returns void"
	light_set_volumetric(${1:RID arg0}, ${2:bool arg1})$0

snippet make_sphere_mesh "make_sphere_mesh ( int arg0, int arg1, float arg2 ), returns RID"
	make_sphere_mesh(${1:int arg0}, ${2:int arg1}, ${3:float arg2})$0

snippet material_create "material_create ( ), returns RID"
	material_create($1)$0

snippet material_get_blend_mode "material_get_blend_mode ( RID arg0 ) const, returns int"
	material_get_blend_mode(${1:RID arg0})$0

snippet material_get_flag "material_get_flag ( RID arg0, int arg1 ) const, returns bool"
	material_get_flag(${1:RID arg0}, ${2:int arg1})$0

snippet material_get_line_width "material_get_line_width ( RID arg0 ) const, returns float"
	material_get_line_width(${1:RID arg0})$0

snippet material_get_param "material_get_param ( RID arg0, String arg1 ) const, returns void"
	material_get_param(${1:RID arg0}, ${2:String arg1})$0

snippet material_get_shader "material_get_shader ( RID arg0 ) const, returns RID"
	material_get_shader(${1:RID arg0})$0

snippet material_set_blend_mode "material_set_blend_mode ( RID arg0, int arg1 ), returns void"
	material_set_blend_mode(${1:RID arg0}, ${2:int arg1})$0

snippet material_set_flag "material_set_flag ( RID arg0, int arg1, bool arg2 ), returns void"
	material_set_flag(${1:RID arg0}, ${2:int arg1}, ${3:bool arg2})$0

snippet material_set_line_width "material_set_line_width ( RID arg0, float arg1 ), returns void"
	material_set_line_width(${1:RID arg0}, ${2:float arg1})$0

snippet material_set_param "material_set_param ( RID arg0, String arg1, Variant arg2 ), returns void"
	material_set_param(${1:RID arg0}, ${2:String arg1}, ${3:Variant arg2})$0

snippet material_set_shader "material_set_shader ( RID shader, RID arg1 ), returns void"
	material_set_shader(${1:RID shader}, ${2:RID arg1})$0

snippet mesh_add_surface "mesh_add_surface ( RID arg0, int arg1, Array arg2, Array arg3, bool arg4=-1 ), returns void"
	mesh_add_surface(${1:RID arg0}, ${2:int arg1}, ${3:Array arg2}, ${4:Array arg3}, ${5:bool arg4=-1})$0

snippet mesh_add_surface_from_planes "mesh_add_surface_from_planes ( RID arg0, Array arg1 ), returns void"
	mesh_add_surface_from_planes(${1:RID arg0}, ${2:Array arg1})$0

snippet mesh_create "mesh_create ( ), returns RID"
	mesh_create($1)$0

snippet mesh_get_surface_count "mesh_get_surface_count ( RID arg0 ) const, returns int"
	mesh_get_surface_count(${1:RID arg0})$0

snippet mesh_remove_surface "mesh_remove_surface ( RID arg0, int arg1 ), returns void"
	mesh_remove_surface(${1:RID arg0}, ${2:int arg1})$0

snippet mesh_surface_get_array_index_len "mesh_surface_get_array_index_len ( RID arg0, int arg1 ) const, returns int"
	mesh_surface_get_array_index_len(${1:RID arg0}, ${2:int arg1})$0

snippet mesh_surface_get_array_len "mesh_surface_get_array_len ( RID arg0, int arg1 ) const, returns int"
	mesh_surface_get_array_len(${1:RID arg0}, ${2:int arg1})$0

snippet mesh_surface_get_format "mesh_surface_get_format ( RID arg0, int arg1 ) const, returns int"
	mesh_surface_get_format(${1:RID arg0}, ${2:int arg1})$0

snippet mesh_surface_get_material "mesh_surface_get_material ( RID arg0, int arg1 ) const, returns RID"
	mesh_surface_get_material(${1:RID arg0}, ${2:int arg1})$0

snippet mesh_surface_get_primitive_type "mesh_surface_get_primitive_type ( RID arg0, int arg1 ) const, returns int"
	mesh_surface_get_primitive_type(${1:RID arg0}, ${2:int arg1})$0

snippet mesh_surface_set_material "mesh_surface_set_material ( RID arg0, int arg1, RID arg2, bool arg3=false ), returns void"
	mesh_surface_set_material(${1:RID arg0}, ${2:int arg1}, ${3:RID arg2}, ${4:bool arg3=false})$0

snippet multimesh_create "multimesh_create ( ), returns RID"
	multimesh_create($1)$0

snippet multimesh_get_aabb "multimesh_get_aabb ( RID arg0, AABB arg1 ) const, returns AABB"
	multimesh_get_aabb(${1:RID arg0}, ${2:AABB arg1})$0

snippet multimesh_get_mesh "multimesh_get_mesh ( RID arg0 ) const, returns RID"
	multimesh_get_mesh(${1:RID arg0})$0

snippet multimesh_instance_get_color "multimesh_instance_get_color ( RID arg0, int arg1 ) const, returns Color"
	multimesh_instance_get_color(${1:RID arg0}, ${2:int arg1})$0

snippet multimesh_instance_get_transform "multimesh_instance_get_transform ( RID arg0, int arg1 ) const, returns Transform"
	multimesh_instance_get_transform(${1:RID arg0}, ${2:int arg1})$0

snippet multimesh_instance_set_color "multimesh_instance_set_color ( RID arg0, int arg1, Color arg2 ), returns void"
	multimesh_instance_set_color(${1:RID arg0}, ${2:int arg1}, ${3:Color arg2})$0

snippet multimesh_instance_set_transform "multimesh_instance_set_transform ( RID arg0, int arg1, Transform arg2 ), returns void"
	multimesh_instance_set_transform(${1:RID arg0}, ${2:int arg1}, ${3:Transform arg2})$0

snippet multimesh_set_aabb "multimesh_set_aabb ( RID arg0, AABB arg1 ), returns void"
	multimesh_set_aabb(${1:RID arg0}, ${2:AABB arg1})$0

snippet multimesh_set_mesh "multimesh_set_mesh ( RID arg0, RID arg1 ), returns void"
	multimesh_set_mesh(${1:RID arg0}, ${2:RID arg1})$0

snippet particles_create "particles_create ( ), returns RID"
	particles_create($1)$0

snippet particles_get_amount "particles_get_amount ( RID arg0 ) const, returns int"
	particles_get_amount(${1:RID arg0})$0

snippet particles_get_attractor_pos "particles_get_attractor_pos ( RID arg0, int arg1 ) const, returns Vector3"
	particles_get_attractor_pos(${1:RID arg0}, ${2:int arg1})$0

snippet particles_get_attractor_strength "particles_get_attractor_strength ( RID arg0, int arg1 ) const, returns float"
	particles_get_attractor_strength(${1:RID arg0}, ${2:int arg1})$0

snippet particles_get_attractors "particles_get_attractors ( RID arg0 ) const, returns int"
	particles_get_attractors(${1:RID arg0})$0

snippet particles_get_color_phase_color "particles_get_color_phase_color ( RID arg0, int arg1 ) const, returns Color"
	particles_get_color_phase_color(${1:RID arg0}, ${2:int arg1})$0

snippet particles_get_color_phase_pos "particles_get_color_phase_pos ( RID arg0, int arg1 ) const, returns float"
	particles_get_color_phase_pos(${1:RID arg0}, ${2:int arg1})$0

snippet particles_get_color_phases "particles_get_color_phases ( RID arg0 ) const, returns int"
	particles_get_color_phases(${1:RID arg0})$0

snippet particles_get_randomness "particles_get_randomness ( RID arg0, int arg1 ) const, returns float"
	particles_get_randomness(${1:RID arg0}, ${2:int arg1})$0

snippet particles_get_variable "particles_get_variable ( RID arg0, int arg1 ) const, returns float"
	particles_get_variable(${1:RID arg0}, ${2:int arg1})$0

snippet particles_get_visibility_aabb "particles_get_visibility_aabb ( RID arg0 ) const, returns AABB"
	particles_get_visibility_aabb(${1:RID arg0})$0

snippet particles_has_height_from_velocity "particles_has_height_from_velocity ( RID arg0 ) const, returns bool"
	particles_has_height_from_velocity(${1:RID arg0})$0

snippet particles_is_emitting "particles_is_emitting ( RID arg0 ) const, returns bool"
	particles_is_emitting(${1:RID arg0})$0

snippet particles_set_amount "particles_set_amount ( RID arg0, int arg1 ), returns void"
	particles_set_amount(${1:RID arg0}, ${2:int arg1})$0

snippet particles_set_attractor_pos "particles_set_attractor_pos ( RID arg0, int arg1, Vector3 arg2 ), returns void"
	particles_set_attractor_pos(${1:RID arg0}, ${2:int arg1}, ${3:Vector3 arg2})$0

snippet particles_set_attractor_strength "particles_set_attractor_strength ( RID arg0, int arg1, float arg2 ), returns void"
	particles_set_attractor_strength(${1:RID arg0}, ${2:int arg1}, ${3:float arg2})$0

snippet particles_set_attractors "particles_set_attractors ( RID arg0, int arg1 ), returns void"
	particles_set_attractors(${1:RID arg0}, ${2:int arg1})$0

snippet particles_set_color_phase_color "particles_set_color_phase_color ( RID arg0, int arg1, Color arg2 ), returns void"
	particles_set_color_phase_color(${1:RID arg0}, ${2:int arg1}, ${3:Color arg2})$0

snippet particles_set_color_phase_pos "particles_set_color_phase_pos ( RID arg0, int arg1, float arg2 ), returns void"
	particles_set_color_phase_pos(${1:RID arg0}, ${2:int arg1}, ${3:float arg2})$0

snippet particles_set_color_phases "particles_set_color_phases ( RID arg0, int arg1 ), returns void"
	particles_set_color_phases(${1:RID arg0}, ${2:int arg1})$0

snippet particles_set_emitting "particles_set_emitting ( RID arg0, bool arg1 ), returns void"
	particles_set_emitting(${1:RID arg0}, ${2:bool arg1})$0

snippet particles_set_height_from_velocity "particles_set_height_from_velocity ( RID arg0, bool arg1 ), returns void"
	particles_set_height_from_velocity(${1:RID arg0}, ${2:bool arg1})$0

snippet particles_set_material "particles_set_material ( RID arg0, RID arg1, bool arg2=false ), returns void"
	particles_set_material(${1:RID arg0}, ${2:RID arg1}, ${3:bool arg2=false})$0

snippet particles_set_randomness "particles_set_randomness ( RID arg0, int arg1, float arg2 ), returns void"
	particles_set_randomness(${1:RID arg0}, ${2:int arg1}, ${3:float arg2})$0

snippet particles_set_variable "particles_set_variable ( RID arg0, int arg1, float arg2 ), returns void"
	particles_set_variable(${1:RID arg0}, ${2:int arg1}, ${3:float arg2})$0

snippet particles_set_visibility_aabb "particles_set_visibility_aabb ( RID arg0, AABB arg1 ), returns void"
	particles_set_visibility_aabb(${1:RID arg0}, ${2:AABB arg1})$0

snippet portal_create "portal_create ( ), returns RID"
	portal_create($1)$0

snippet portal_get_disable_distance "portal_get_disable_distance ( RID arg0 ) const, returns float"
	portal_get_disable_distance(${1:RID arg0})$0

snippet portal_get_disabled_color "portal_get_disabled_color ( RID arg0 ) const, returns Color"
	portal_get_disabled_color(${1:RID arg0})$0

snippet portal_get_shape "portal_get_shape ( RID arg0 ) const, returns Vector2Array"
	portal_get_shape(${1:RID arg0})$0

snippet portal_is_enabled "portal_is_enabled ( RID arg0 ) const, returns bool"
	portal_is_enabled(${1:RID arg0})$0

snippet portal_set_disable_distance "portal_set_disable_distance ( RID arg0, float arg1 ), returns void"
	portal_set_disable_distance(${1:RID arg0}, ${2:float arg1})$0

snippet portal_set_disabled_color "portal_set_disabled_color ( RID arg0, Color arg1 ), returns void"
	portal_set_disabled_color(${1:RID arg0}, ${2:Color arg1})$0

snippet portal_set_enabled "portal_set_enabled ( RID arg0, bool arg1 ), returns void"
	portal_set_enabled(${1:RID arg0}, ${2:bool arg1})$0

snippet portal_set_shape "portal_set_shape ( RID arg0, Vector2Array arg1 ), returns void"
	portal_set_shape(${1:RID arg0}, ${2:Vector2Array arg1})$0

snippet room_create "room_create ( ), returns RID"
	room_create($1)$0

snippet room_get_bounds "room_get_bounds ( RID arg0 ) const, returns Dictionary"
	room_get_bounds(${1:RID arg0})$0

snippet room_set_bounds "room_set_bounds ( RID arg0, Dictionary arg1 ), returns void"
	room_set_bounds(${1:RID arg0}, ${2:Dictionary arg1})$0

snippet scenario_create "scenario_create ( ), returns RID"
	scenario_create($1)$0

snippet scenario_set_debug "scenario_set_debug ( RID arg0, int arg1 ), returns void"
	scenario_set_debug(${1:RID arg0}, ${2:int arg1})$0

snippet set_default_clear_color "set_default_clear_color ( Color arg0 ), returns void"
	set_default_clear_color(${1:Color arg0})$0

snippet shader_create "shader_create ( int mode=0 ), returns RID"
	shader_create(${1:int mode=0})$0

snippet shader_set_mode "shader_set_mode ( RID shader, int mode ), returns void"
	shader_set_mode(${1:RID shader}, ${2:int mode})$0

snippet skeleton_bone_get_transform "skeleton_bone_get_transform ( RID arg0, int arg1 ), returns Transform"
	skeleton_bone_get_transform(${1:RID arg0}, ${2:int arg1})$0

snippet skeleton_bone_set_transform "skeleton_bone_set_transform ( RID arg0, int arg1, Transform arg2 ), returns void"
	skeleton_bone_set_transform(${1:RID arg0}, ${2:int arg1}, ${3:Transform arg2})$0

snippet skeleton_create "skeleton_create ( ), returns RID"
	skeleton_create($1)$0

snippet skeleton_get_bone_count "skeleton_get_bone_count ( RID arg0 ) const, returns int"
	skeleton_get_bone_count(${1:RID arg0})$0

snippet skeleton_resize "skeleton_resize ( RID arg0, int arg1 ), returns void"
	skeleton_resize(${1:RID arg0}, ${2:int arg1})$0

snippet sync "sync ( ), returns void"
	sync($1)$0

snippet texture_create "texture_create ( ), returns RID"
	texture_create($1)$0

snippet texture_create_from_image "texture_create_from_image ( Image arg0, int arg1=7 ), returns RID"
	texture_create_from_image(${1:Image arg0}, ${2:int arg1=7})$0

snippet texture_get_flags "texture_get_flags ( RID arg0 ) const, returns int"
	texture_get_flags(${1:RID arg0})$0

snippet texture_get_height "texture_get_height ( RID arg0 ) const, returns int"
	texture_get_height(${1:RID arg0})$0

snippet texture_get_width "texture_get_width ( RID arg0 ) const, returns int"
	texture_get_width(${1:RID arg0})$0

snippet texture_set_flags "texture_set_flags ( RID arg0, int arg1 ), returns void"
	texture_set_flags(${1:RID arg0}, ${2:int arg1})$0

snippet texture_set_shrink_all_x2_on_set_data "texture_set_shrink_all_x2_on_set_data ( bool shrink ), returns void"
	texture_set_shrink_all_x2_on_set_data(${1:bool shrink})$0

snippet viewport_attach_camera "viewport_attach_camera ( RID arg0, RID arg1=RID() ), returns void"
	viewport_attach_camera(${1:RID arg0}, ${2:RID arg1=RID()})$0

snippet viewport_attach_canvas "viewport_attach_canvas ( RID arg0, RID arg1 ), returns void"
	viewport_attach_canvas(${1:RID arg0}, ${2:RID arg1})$0

snippet viewport_create "viewport_create ( ), returns RID"
	viewport_create($1)$0

snippet viewport_get_attached_camera "viewport_get_attached_camera ( RID arg0 ) const, returns RID"
	viewport_get_attached_camera(${1:RID arg0})$0

snippet viewport_get_rect "viewport_get_rect ( RID arg0 ) const, returns Rect2"
	viewport_get_rect(${1:RID arg0})$0

snippet viewport_get_scenario "viewport_get_scenario ( RID arg0 ) const, returns RID"
	viewport_get_scenario(${1:RID arg0})$0

snippet viewport_remove_canvas "viewport_remove_canvas ( RID arg0, RID arg1 ), returns void"
	viewport_remove_canvas(${1:RID arg0}, ${2:RID arg1})$0

snippet viewport_set_canvas_transform "viewport_set_canvas_transform ( RID arg0, RID arg1, Matrix32 arg2 ), returns void"
	viewport_set_canvas_transform(${1:RID arg0}, ${2:RID arg1}, ${3:Matrix32 arg2})$0

snippet viewport_set_global_canvas_transform "viewport_set_global_canvas_transform ( RID arg0, Matrix32 arg1 ), returns void"
	viewport_set_global_canvas_transform(${1:RID arg0}, ${2:Matrix32 arg1})$0

snippet viewport_set_rect "viewport_set_rect ( RID arg0, Rect2 arg1 ), returns void"
	viewport_set_rect(${1:RID arg0}, ${2:Rect2 arg1})$0


# Class: WeakRef
snippet get_ref "get_ref ( ) const, returns Object"
	get_ref($1)$0


# Class: WindowDialog
snippet get_close_button "get_close_button ( ), returns TextureButton"
	get_close_button($1)$0

# trigger conflict with other class(es)
snippet get_title_WindowDialog "get_title ( ) const, returns String"
	get_title($1)$0

# trigger conflict with other class(es)
snippet set_title_WindowDialog "set_title ( String title ), returns void"
	set_title(${1:String title})$0


# Class: World
snippet get_direct_space_state "get_direct_space_state ( ), returns PhysicsDirectSpaceState"
	get_direct_space_state($1)$0

# trigger conflict with other class(es)
snippet get_environment_World "get_environment ( ) const, returns Environment"
	get_environment($1)$0

snippet get_scenario "get_scenario ( ) const, returns RID"
	get_scenario($1)$0

snippet get_sound_space "get_sound_space ( ) const, returns RID"
	get_sound_space($1)$0

snippet get_space "get_space ( ) const, returns RID"
	get_space($1)$0

# trigger conflict with other class(es)
snippet set_environment_World "set_environment ( Environment env ), returns void"
	set_environment(${1:Environment env})$0


# Class: World2D
# trigger conflict with other class(es)
snippet get_canvas_World2D "get_canvas ( ), returns RID"
	get_canvas($1)$0

# trigger conflict with other class(es)
snippet get_direct_space_state_World2D "get_direct_space_state ( ), returns Physics2DDirectSpaceState"
	get_direct_space_state($1)$0

# trigger conflict with other class(es)
snippet get_sound_space_World2D "get_sound_space ( ), returns RID"
	get_sound_space($1)$0

# trigger conflict with other class(es)
snippet get_space_World2D "get_space ( ), returns RID"
	get_space($1)$0


# Class: WorldEnvironment
# trigger conflict with other class(es)
snippet get_environment_WorldEnvironment "get_environment ( ) const, returns Environment"
	get_environment($1)$0

# trigger conflict with other class(es)
snippet set_environment_WorldEnvironment "set_environment ( Environment env ), returns void"
	set_environment(${1:Environment env})$0


# Class: XMLParser
snippet get_attribute_count "get_attribute_count ( ) const, returns int"
	get_attribute_count($1)$0

snippet get_attribute_name "get_attribute_name ( int idx ) const, returns String"
	get_attribute_name(${1:int idx})$0

snippet get_attribute_value "get_attribute_value ( int idx ) const, returns String"
	get_attribute_value(${1:int idx})$0

snippet get_current_line "get_current_line ( ) const, returns int"
	get_current_line($1)$0

snippet get_named_attribute_value "get_named_attribute_value ( String name ) const, returns String"
	get_named_attribute_value(${1:String name})$0

snippet get_named_attribute_value_safe "get_named_attribute_value_safe ( String name ) const, returns String"
	get_named_attribute_value_safe(${1:String name})$0

snippet get_node_data "get_node_data ( ) const, returns String"
	get_node_data($1)$0

# trigger conflict with other class(es)
snippet get_node_name_XMLParser "get_node_name ( ) const, returns String"
	get_node_name($1)$0

snippet get_node_offset "get_node_offset ( ) const, returns int"
	get_node_offset($1)$0

# trigger conflict with other class(es)
snippet get_node_type_XMLParser "get_node_type ( ), returns int"
	get_node_type($1)$0

snippet has_attribute "has_attribute ( String name ) const, returns bool"
	has_attribute(${1:String name})$0

# trigger conflict with other class(es)
snippet is_empty_XMLParser "is_empty ( ) const, returns bool"
	is_empty($1)$0

# trigger conflict with other class(es)
snippet open_XMLParser "open ( String file ), returns int"
	open(${1:String file})$0

snippet open_buffer "open_buffer ( RawArray buffer ), returns int"
	open_buffer(${1:RawArray buffer})$0

snippet read "read ( ), returns int"
	read($1)$0

# trigger conflict with other class(es)
snippet seek_XMLParser "seek ( int pos ), returns int"
	seek(${1:int pos})$0

snippet skip_section "skip_section ( ), returns void"
	skip_section($1)$0


# Class: YSort
snippet is_sort_enabled "is_sort_enabled ( ) const, returns bool"
	is_sort_enabled($1)$0

snippet set_sort_enabled "set_sort_enabled ( bool enabled ), returns void"
	set_sort_enabled(${1:bool enabled})$0
