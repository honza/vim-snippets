priority -50

snippet desc "Describe" b
describe('${1:description}', function() {
	$0
});
endsnippet

snippet it "it" b
it('${1:description}', function() {
	$0
});
endsnippet

snippet before "before each" b
beforeEach(function() {
	$0
});
endsnippet

snippet after "after each" b
afterEach(function() {
	$0
});
endsnippet

snippet runs "runs" b
runs(function() {
	$0
});
endsnippet

snippet waits "waits" b
waits(function() {
	$0
});
endsnippet

snippet exp "expect" b
expect(${1:target})$0;
endsnippet

snippet expe "expect to equal" b
expect(${1:target}).toEqual(${2:value});
endsnippet

snippet expb "expect to be" b
expect(${1:target}).toBe(${2:value});
endsnippet

snippet expm "expect to match" b
expect(${1:target}).toMatch(${2:pattern});
endsnippet

snippet expha "expect to have attribute" b
expect(${1:target}).toHaveAttr('${2:attr}'${3:, '${4:value}'});
endsnippet

snippet expt "expect to be truthy" b
expect(${1:target}).toBeTruthy();
endsnippet

snippet expf "expect to be falsy" b
expect(${1:target}).toBeFalsy();
endsnippet

snippet expd "expect to be defined" b
expect(${1:target}).toBeDefined();
endsnippet

snippet expc "expect to contain" b
expect(${1:target}).toContain(${2:value});
endsnippet

snippet spyon "spy on" b
spyOn(${1:object}, '${2:method}')$0;
endsnippet

snippet spyonr "spy on and return" b
spyOn(${1:object}, '${2:method}').andReturn(${3:arguments});
endsnippet

snippet spyonc "spy on and call through" b
spyOn(${1:object}, '${2:method}').andCallThrough();
endsnippet

snippet expthbc "expect to have been called" b
expect(${1:target}).toHaveBeenCalled();
endsnippet

snippet expthbcw "expect to have been called with" b
expect(${1:target}).toHaveBeenCalledWith(${2:arguments});
endsnippet
